
Switchy.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000024c2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000284  00800060  000024c2  00002576  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000007c  008002e4  008002e4  000027fa  2**0
                  ALLOC
  3 .eeprom       0000001f  00810000  00810000  000027fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         00000024  00000000  00000000  0000281c  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      0000001e  00000000  00000000  00002840  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000030  00000000  00000000  0000285e  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002890  2**2
                  CONTENTS, READONLY
  8 .debug_aranges 00000240  00000000  00000000  000028d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00004642  00000000  00000000  00002b10  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000c9c  00000000  00000000  00007152  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000295c  00000000  00000000  00007dee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000063c  00000000  00000000  0000a74c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00000ac6  00000000  00000000  0000ad88  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00002bee  00000000  00000000  0000b84e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000001d0  00000000  00000000  0000e43c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 41 00 	jmp	0x82	; 0x82 <__ctors_end>
       4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
       8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
       c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      10:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      14:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      18:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      1c:	0c 94 32 0e 	jmp	0x1c64	; 0x1c64 <__vector_7>
      20:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      24:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      28:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      2c:	0c 94 e2 0d 	jmp	0x1bc4	; 0x1bc4 <__vector_11>
      30:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      34:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      38:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      3c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      40:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      44:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      48:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      4c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      50:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      54:	5a 08       	sbc	r5, r10
      56:	91 08       	sbc	r9, r1
      58:	b2 08       	sbc	r11, r2
      5a:	d4 08       	sbc	r13, r4
      5c:	99 09       	sbc	r25, r9
      5e:	5e 0a       	sbc	r5, r30
      60:	20 0b       	sbc	r18, r16
      62:	76 0b       	sbc	r23, r22
      64:	ac 0b       	sbc	r26, r28
      66:	01 11       	cpse	r16, r1
      68:	08 11       	cpse	r16, r8
      6a:	0f 11       	cpse	r16, r15
      6c:	16 11       	cpse	r17, r6
      6e:	1d 11       	cpse	r17, r13
      70:	24 11       	cpse	r18, r4
      72:	2b 11       	cpse	r18, r11
      74:	f1 11       	cpse	r31, r1
      76:	f8 11       	cpse	r31, r8
      78:	ff 11       	cpse	r31, r15
      7a:	06 12       	cpse	r0, r22
      7c:	0d 12       	cpse	r0, r29
      7e:	14 12       	cpse	r1, r20
      80:	1b 12       	cpse	r1, r27

00000082 <__ctors_end>:
      82:	11 24       	eor	r1, r1
      84:	1f be       	out	0x3f, r1	; 63
      86:	cf e5       	ldi	r28, 0x5F	; 95
      88:	d8 e0       	ldi	r29, 0x08	; 8
      8a:	de bf       	out	0x3e, r29	; 62
      8c:	cd bf       	out	0x3d, r28	; 61

0000008e <__do_copy_data>:
      8e:	12 e0       	ldi	r17, 0x02	; 2
      90:	a0 e6       	ldi	r26, 0x60	; 96
      92:	b0 e0       	ldi	r27, 0x00	; 0
      94:	e2 ec       	ldi	r30, 0xC2	; 194
      96:	f4 e2       	ldi	r31, 0x24	; 36
      98:	02 c0       	rjmp	.+4      	; 0x9e <__do_copy_data+0x10>
      9a:	05 90       	lpm	r0, Z+
      9c:	0d 92       	st	X+, r0
      9e:	a4 3e       	cpi	r26, 0xE4	; 228
      a0:	b1 07       	cpc	r27, r17
      a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0xc>

000000a4 <__do_clear_bss>:
      a4:	23 e0       	ldi	r18, 0x03	; 3
      a6:	a4 ee       	ldi	r26, 0xE4	; 228
      a8:	b2 e0       	ldi	r27, 0x02	; 2
      aa:	01 c0       	rjmp	.+2      	; 0xae <.do_clear_bss_start>

000000ac <.do_clear_bss_loop>:
      ac:	1d 92       	st	X+, r1

000000ae <.do_clear_bss_start>:
      ae:	a0 36       	cpi	r26, 0x60	; 96
      b0:	b2 07       	cpc	r27, r18
      b2:	e1 f7       	brne	.-8      	; 0xac <.do_clear_bss_loop>
      b4:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <main>
      b8:	0c 94 5f 12 	jmp	0x24be	; 0x24be <_exit>

000000bc <__bad_interrupt>:
      bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c0 <i2c_delay_T2>:
      c0:	00 c0       	rjmp	.+0      	; 0xc2 <i2c_delay_T2+0x2>
      c2:	00 c0       	rjmp	.+0      	; 0xc4 <i2c_delay_T2+0x4>
      c4:	00 c0       	rjmp	.+0      	; 0xc6 <i2c_delay_T2+0x6>
      c6:	00 c0       	rjmp	.+0      	; 0xc8 <i2c_delay_T2+0x8>
      c8:	00 c0       	rjmp	.+0      	; 0xca <i2c_delay_T2+0xa>
      ca:	00 c0       	rjmp	.+0      	; 0xcc <i2c_delay_T2+0xc>
      cc:	00 00       	nop
      ce:	08 95       	ret

000000d0 <i2c_init>:
      d0:	a1 98       	cbi	0x14, 1	; 20
      d2:	a0 98       	cbi	0x14, 0	; 20
      d4:	a9 98       	cbi	0x15, 1	; 21
      d6:	a8 98       	cbi	0x15, 0	; 21
      d8:	08 95       	ret

000000da <i2c_start>:
      da:	a1 9a       	sbi	0x14, 1	; 20
      dc:	f1 df       	rcall	.-30     	; 0xc0 <i2c_delay_T2>
      de:	1d d0       	rcall	.+58     	; 0x11a <i2c_write>
      e0:	08 95       	ret

000000e2 <i2c_rep_start>:
      e2:	a0 9a       	sbi	0x14, 0	; 20
      e4:	ed df       	rcall	.-38     	; 0xc0 <i2c_delay_T2>
      e6:	a1 98       	cbi	0x14, 1	; 20
      e8:	eb df       	rcall	.-42     	; 0xc0 <i2c_delay_T2>
      ea:	a0 98       	cbi	0x14, 0	; 20
      ec:	e9 df       	rcall	.-46     	; 0xc0 <i2c_delay_T2>
      ee:	a1 9a       	sbi	0x14, 1	; 20
      f0:	e7 df       	rcall	.-50     	; 0xc0 <i2c_delay_T2>
      f2:	13 d0       	rcall	.+38     	; 0x11a <i2c_write>
      f4:	08 95       	ret

000000f6 <i2c_start_wait>:
      f6:	08 2e       	mov	r0, r24

000000f8 <i2c_start_wait1>:
      f8:	a1 9a       	sbi	0x14, 1	; 20
      fa:	e2 df       	rcall	.-60     	; 0xc0 <i2c_delay_T2>
      fc:	80 2d       	mov	r24, r0
      fe:	0d d0       	rcall	.+26     	; 0x11a <i2c_write>
     100:	88 23       	and	r24, r24
     102:	11 f0       	breq	.+4      	; 0x108 <i2c_start_wait_done>
     104:	02 d0       	rcall	.+4      	; 0x10a <i2c_stop>
     106:	f8 cf       	rjmp	.-16     	; 0xf8 <i2c_start_wait1>

00000108 <i2c_start_wait_done>:
     108:	08 95       	ret

0000010a <i2c_stop>:
     10a:	a0 9a       	sbi	0x14, 0	; 20
     10c:	a1 9a       	sbi	0x14, 1	; 20
     10e:	d8 df       	rcall	.-80     	; 0xc0 <i2c_delay_T2>
     110:	a0 98       	cbi	0x14, 0	; 20
     112:	d6 df       	rcall	.-84     	; 0xc0 <i2c_delay_T2>
     114:	a1 98       	cbi	0x14, 1	; 20
     116:	d4 df       	rcall	.-88     	; 0xc0 <i2c_delay_T2>
     118:	08 95       	ret

0000011a <i2c_write>:
     11a:	08 94       	sec
     11c:	88 1f       	adc	r24, r24
     11e:	01 c0       	rjmp	.+2      	; 0x122 <i2c_write_first>

00000120 <i2c_write_bit>:
     120:	88 0f       	add	r24, r24

00000122 <i2c_write_first>:
     122:	59 f0       	breq	.+22     	; 0x13a <i2c_get_ack>
     124:	a0 9a       	sbi	0x14, 0	; 20
     126:	18 f4       	brcc	.+6      	; 0x12e <i2c_write_low>
     128:	00 00       	nop
     12a:	a1 98       	cbi	0x14, 1	; 20
     12c:	02 c0       	rjmp	.+4      	; 0x132 <i2c_write_high>

0000012e <i2c_write_low>:
     12e:	a1 9a       	sbi	0x14, 1	; 20
     130:	00 c0       	rjmp	.+0      	; 0x132 <i2c_write_high>

00000132 <i2c_write_high>:
     132:	c6 df       	rcall	.-116    	; 0xc0 <i2c_delay_T2>
     134:	a0 98       	cbi	0x14, 0	; 20
     136:	c4 df       	rcall	.-120    	; 0xc0 <i2c_delay_T2>
     138:	f3 cf       	rjmp	.-26     	; 0x120 <i2c_write_bit>

0000013a <i2c_get_ack>:
     13a:	a0 9a       	sbi	0x14, 0	; 20
     13c:	a1 98       	cbi	0x14, 1	; 20
     13e:	c0 df       	rcall	.-128    	; 0xc0 <i2c_delay_T2>
     140:	a0 98       	cbi	0x14, 0	; 20

00000142 <i2c_ack_wait>:
     142:	98 9b       	sbis	0x13, 0	; 19
     144:	fe cf       	rjmp	.-4      	; 0x142 <i2c_ack_wait>
     146:	88 27       	eor	r24, r24
     148:	99 99       	sbic	0x13, 1	; 19
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	b9 df       	rcall	.-142    	; 0xc0 <i2c_delay_T2>
     14e:	99 27       	eor	r25, r25
     150:	08 95       	ret

00000152 <i2c_readNak>:
     152:	88 27       	eor	r24, r24
     154:	01 c0       	rjmp	.+2      	; 0x158 <i2c_read>

00000156 <i2c_readAck>:
     156:	81 e0       	ldi	r24, 0x01	; 1

00000158 <i2c_read>:
     158:	71 e0       	ldi	r23, 0x01	; 1

0000015a <i2c_read_bit>:
     15a:	a0 9a       	sbi	0x14, 0	; 20
     15c:	a1 98       	cbi	0x14, 1	; 20
     15e:	b0 df       	rcall	.-160    	; 0xc0 <i2c_delay_T2>
     160:	a0 98       	cbi	0x14, 0	; 20
     162:	ae df       	rcall	.-164    	; 0xc0 <i2c_delay_T2>

00000164 <i2c_read_stretch>:
     164:	98 9b       	sbis	0x13, 0	; 19
     166:	fe cf       	rjmp	.-4      	; 0x164 <i2c_read_stretch>
     168:	88 94       	clc
     16a:	99 99       	sbic	0x13, 1	; 19
     16c:	08 94       	sec
     16e:	77 1f       	adc	r23, r23
     170:	a0 f7       	brcc	.-24     	; 0x15a <i2c_read_bit>

00000172 <i2c_put_ack>:
     172:	a0 9a       	sbi	0x14, 0	; 20
     174:	81 30       	cpi	r24, 0x01	; 1
     176:	11 f0       	breq	.+4      	; 0x17c <i2c_put_ack_low>
     178:	a1 98       	cbi	0x14, 1	; 20
     17a:	01 c0       	rjmp	.+2      	; 0x17e <i2c_put_ack_high>

0000017c <i2c_put_ack_low>:
     17c:	a1 9a       	sbi	0x14, 1	; 20

0000017e <i2c_put_ack_high>:
     17e:	a0 df       	rcall	.-192    	; 0xc0 <i2c_delay_T2>
     180:	a0 98       	cbi	0x14, 0	; 20

00000182 <i2c_put_ack_wait>:
     182:	98 9b       	sbis	0x13, 0	; 19
     184:	fe cf       	rjmp	.-4      	; 0x182 <i2c_put_ack_wait>
     186:	9c df       	rcall	.-200    	; 0xc0 <i2c_delay_T2>
     188:	87 2f       	mov	r24, r23
     18a:	99 27       	eor	r25, r25
     18c:	08 95       	ret

0000018e <lcd_read>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     18e:	88 23       	and	r24, r24
     190:	11 f0       	breq	.+4      	; 0x196 <lcd_read+0x8>
     192:	aa 9a       	sbi	0x15, 2	; 21
     194:	01 c0       	rjmp	.+2      	; 0x198 <lcd_read+0xa>
     196:	aa 98       	cbi	0x15, 2	; 21
     198:	97 9a       	sbi	0x12, 7	; 18
     19a:	8b 98       	cbi	0x11, 3	; 17
     19c:	8a 98       	cbi	0x11, 2	; 17
     19e:	89 98       	cbi	0x11, 1	; 17
     1a0:	88 98       	cbi	0x11, 0	; 17
     1a2:	96 9a       	sbi	0x12, 6	; 18
     1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <lcd_read+0x18>
     1a6:	83 9b       	sbis	0x10, 3	; 16
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <lcd_read+0x20>
     1aa:	80 e1       	ldi	r24, 0x10	; 16
     1ac:	01 c0       	rjmp	.+2      	; 0x1b0 <lcd_read+0x22>
     1ae:	80 e0       	ldi	r24, 0x00	; 0
     1b0:	82 99       	sbic	0x10, 2	; 16
     1b2:	80 62       	ori	r24, 0x20	; 32
     1b4:	81 99       	sbic	0x10, 1	; 16
     1b6:	80 64       	ori	r24, 0x40	; 64
     1b8:	80 99       	sbic	0x10, 0	; 16
     1ba:	80 68       	ori	r24, 0x80	; 128
     1bc:	96 98       	cbi	0x12, 6	; 18
     1be:	00 c0       	rjmp	.+0      	; 0x1c0 <lcd_read+0x32>
     1c0:	96 9a       	sbi	0x12, 6	; 18
     1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <lcd_read+0x36>
     1c4:	83 99       	sbic	0x10, 3	; 16
     1c6:	81 60       	ori	r24, 0x01	; 1
     1c8:	82 99       	sbic	0x10, 2	; 16
     1ca:	82 60       	ori	r24, 0x02	; 2
     1cc:	81 99       	sbic	0x10, 1	; 16
     1ce:	84 60       	ori	r24, 0x04	; 4
     1d0:	80 99       	sbic	0x10, 0	; 16
     1d2:	88 60       	ori	r24, 0x08	; 8
     1d4:	96 98       	cbi	0x12, 6	; 18
     1d6:	08 95       	ret

000001d8 <lcd_waitbusy>:
     1d8:	80 e0       	ldi	r24, 0x00	; 0
     1da:	0e 94 c7 00 	call	0x18e	; 0x18e <lcd_read>
     1de:	88 23       	and	r24, r24
     1e0:	dc f3       	brlt	.-10     	; 0x1d8 <lcd_waitbusy>
     1e2:	84 e0       	ldi	r24, 0x04	; 4
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	01 97       	sbiw	r24, 0x01	; 1
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <lcd_waitbusy+0xe>
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	0e 94 c7 00 	call	0x18e	; 0x18e <lcd_read>
     1f0:	08 95       	ret

000001f2 <toggle_e>:
     1f2:	96 9a       	sbi	0x12, 6	; 18
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <toggle_e+0x4>
     1f6:	85 e8       	ldi	r24, 0x85	; 133
     1f8:	8a 95       	dec	r24
     1fa:	f1 f7       	brne	.-4      	; 0x1f8 <toggle_e+0x6>
     1fc:	00 00       	nop
     1fe:	96 98       	cbi	0x12, 6	; 18
     200:	08 95       	ret

00000202 <lcd_write>:
     202:	cf 93       	push	r28
     204:	c8 2f       	mov	r28, r24
     206:	66 23       	and	r22, r22
     208:	11 f0       	breq	.+4      	; 0x20e <lcd_write+0xc>
     20a:	aa 9a       	sbi	0x15, 2	; 21
     20c:	01 c0       	rjmp	.+2      	; 0x210 <lcd_write+0xe>
     20e:	aa 98       	cbi	0x15, 2	; 21
     210:	97 98       	cbi	0x12, 7	; 18
     212:	8b 9a       	sbi	0x11, 3	; 17
     214:	8a 9a       	sbi	0x11, 2	; 17
     216:	89 9a       	sbi	0x11, 1	; 17
     218:	88 9a       	sbi	0x11, 0	; 17
     21a:	90 98       	cbi	0x12, 0	; 18
     21c:	91 98       	cbi	0x12, 1	; 18
     21e:	92 98       	cbi	0x12, 2	; 18
     220:	93 98       	cbi	0x12, 3	; 18
     222:	cc 23       	and	r28, r28
     224:	0c f4       	brge	.+2      	; 0x228 <lcd_write+0x26>
     226:	90 9a       	sbi	0x12, 0	; 18
     228:	c6 fd       	sbrc	r28, 6
     22a:	91 9a       	sbi	0x12, 1	; 18
     22c:	c5 fd       	sbrc	r28, 5
     22e:	92 9a       	sbi	0x12, 2	; 18
     230:	c4 fd       	sbrc	r28, 4
     232:	93 9a       	sbi	0x12, 3	; 18
     234:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <toggle_e>
     238:	90 98       	cbi	0x12, 0	; 18
     23a:	91 98       	cbi	0x12, 1	; 18
     23c:	92 98       	cbi	0x12, 2	; 18
     23e:	93 98       	cbi	0x12, 3	; 18
     240:	c3 fd       	sbrc	r28, 3
     242:	90 9a       	sbi	0x12, 0	; 18
     244:	c2 fd       	sbrc	r28, 2
     246:	91 9a       	sbi	0x12, 1	; 18
     248:	c1 fd       	sbrc	r28, 1
     24a:	92 9a       	sbi	0x12, 2	; 18
     24c:	c0 fd       	sbrc	r28, 0
     24e:	93 9a       	sbi	0x12, 3	; 18
     250:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <toggle_e>
     254:	93 9a       	sbi	0x12, 3	; 18
     256:	92 9a       	sbi	0x12, 2	; 18
     258:	91 9a       	sbi	0x12, 1	; 18
     25a:	90 9a       	sbi	0x12, 0	; 18
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <lcd_command>:
     260:	cf 93       	push	r28
     262:	c8 2f       	mov	r28, r24
     264:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_waitbusy>
     268:	60 e0       	ldi	r22, 0x00	; 0
     26a:	8c 2f       	mov	r24, r28
     26c:	0e 94 01 01 	call	0x202	; 0x202 <lcd_write>
     270:	cf 91       	pop	r28
     272:	08 95       	ret

00000274 <lcd_gotoxy>:
     274:	61 11       	cpse	r22, r1
     276:	04 c0       	rjmp	.+8      	; 0x280 <lcd_gotoxy+0xc>
     278:	80 58       	subi	r24, 0x80	; 128
     27a:	0e 94 30 01 	call	0x260	; 0x260 <lcd_command>
     27e:	08 95       	ret
     280:	80 54       	subi	r24, 0x40	; 64
     282:	0e 94 30 01 	call	0x260	; 0x260 <lcd_command>
     286:	08 95       	ret

00000288 <lcd_clrscr>:
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	0e 94 30 01 	call	0x260	; 0x260 <lcd_command>
     28e:	08 95       	ret

00000290 <lcd_putc>:
     290:	cf 93       	push	r28
     292:	c8 2f       	mov	r28, r24
     294:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_waitbusy>
     298:	ca 30       	cpi	r28, 0x0A	; 10
     29a:	49 f4       	brne	.+18     	; 0x2ae <lcd_putc+0x1e>
     29c:	80 34       	cpi	r24, 0x40	; 64
     29e:	10 f0       	brcs	.+4      	; 0x2a4 <lcd_putc+0x14>
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	01 c0       	rjmp	.+2      	; 0x2a6 <lcd_putc+0x16>
     2a4:	80 e4       	ldi	r24, 0x40	; 64
     2a6:	80 58       	subi	r24, 0x80	; 128
     2a8:	0e 94 30 01 	call	0x260	; 0x260 <lcd_command>
     2ac:	04 c0       	rjmp	.+8      	; 0x2b6 <lcd_putc+0x26>
     2ae:	61 e0       	ldi	r22, 0x01	; 1
     2b0:	8c 2f       	mov	r24, r28
     2b2:	0e 94 01 01 	call	0x202	; 0x202 <lcd_write>
     2b6:	cf 91       	pop	r28
     2b8:	08 95       	ret

000002ba <lcd_puts>:
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	ec 01       	movw	r28, r24
     2c0:	21 96       	adiw	r28, 0x01	; 1
     2c2:	fc 01       	movw	r30, r24
     2c4:	80 81       	ld	r24, Z
     2c6:	88 23       	and	r24, r24
     2c8:	29 f0       	breq	.+10     	; 0x2d4 <lcd_puts+0x1a>
     2ca:	0e 94 48 01 	call	0x290	; 0x290 <lcd_putc>
     2ce:	89 91       	ld	r24, Y+
     2d0:	81 11       	cpse	r24, r1
     2d2:	fb cf       	rjmp	.-10     	; 0x2ca <lcd_puts+0x10>
     2d4:	df 91       	pop	r29
     2d6:	cf 91       	pop	r28
     2d8:	08 95       	ret

000002da <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     2da:	1f 93       	push	r17
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     2e2:	a2 9a       	sbi	0x14, 2	; 20
#if LCD_READ_REQUIRED
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     2e4:	8f 9a       	sbi	0x11, 7	; 17
#endif
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     2e6:	8e 9a       	sbi	0x11, 6	; 17
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     2e8:	8b 9a       	sbi	0x11, 3	; 17
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     2ea:	8a 9a       	sbi	0x11, 2	; 17
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     2ec:	89 9a       	sbi	0x11, 1	; 17
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     2ee:	88 9a       	sbi	0x11, 0	; 17
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	9d e7       	ldi	r25, 0x7D	; 125
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	f1 f7       	brne	.-4      	; 0x2f4 <lcd_init+0x1a>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
     2f8:	92 9a       	sbi	0x12, 2	; 18
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
     2fa:	93 9a       	sbi	0x12, 3	; 18
    lcd_e_toggle();
     2fc:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	97 e2       	ldi	r25, 0x27	; 39
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	f1 f7       	brne	.-4      	; 0x304 <lcd_init+0x2a>
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
    lcd_e_toggle();
    delay(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     308:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     30c:	c0 e8       	ldi	r28, 0x80	; 128
     30e:	d0 e0       	ldi	r29, 0x00	; 0
     310:	ce 01       	movw	r24, r28
     312:	01 97       	sbiw	r24, 0x01	; 1
     314:	f1 f7       	brne	.-4      	; 0x312 <lcd_init+0x38>
    /* repeat last command */ 
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     316:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     31a:	ce 01       	movw	r24, r28
     31c:	01 97       	sbiw	r24, 0x01	; 1
     31e:	f1 f7       	brne	.-4      	; 0x31c <lcd_init+0x42>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     320:	93 98       	cbi	0x12, 3	; 18
    lcd_e_toggle();
     322:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     326:	21 97       	sbiw	r28, 0x01	; 1
     328:	f1 f7       	brne	.-4      	; 0x326 <lcd_init+0x4c>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     32a:	88 e2       	ldi	r24, 0x28	; 40
     32c:	0e 94 30 01 	call	0x260	; 0x260 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     330:	88 e0       	ldi	r24, 0x08	; 8
     332:	0e 94 30 01 	call	0x260	; 0x260 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     336:	0e 94 44 01 	call	0x288	; 0x288 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     33a:	86 e0       	ldi	r24, 0x06	; 6
     33c:	0e 94 30 01 	call	0x260	; 0x260 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     340:	81 2f       	mov	r24, r17
     342:	0e 94 30 01 	call	0x260	; 0x260 <lcd_command>

}/* lcd_init */
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	1f 91       	pop	r17
     34c:	08 95       	ret

0000034e <checkEnc>:
			
		}
		
	}
	
}
     34e:	dc 01       	movw	r26, r24
     350:	90 91 e8 02 	lds	r25, 0x02E8	; 0x8002e8 <Last.2647>
     354:	99 0f       	add	r25, r25
     356:	99 0f       	add	r25, r25
     358:	9c 70       	andi	r25, 0x0C	; 12
     35a:	90 93 e8 02 	sts	0x02E8, r25	; 0x8002e8 <Last.2647>
     35e:	9c 99       	sbic	0x13, 4	; 19
     360:	05 c0       	rjmp	.+10     	; 0x36c <checkEnc+0x1e>
     362:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <Last.2647>
     366:	81 60       	ori	r24, 0x01	; 1
     368:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <Last.2647>
     36c:	9d 99       	sbic	0x13, 5	; 19
     36e:	05 c0       	rjmp	.+10     	; 0x37a <checkEnc+0x2c>
     370:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <Last.2647>
     374:	82 60       	ori	r24, 0x02	; 2
     376:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <Last.2647>
     37a:	e0 91 e8 02 	lds	r30, 0x02E8	; 0x8002e8 <Last.2647>
     37e:	9c 91       	ld	r25, X
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	e0 5a       	subi	r30, 0xA0	; 160
     384:	ff 4f       	sbci	r31, 0xFF	; 255
     386:	80 81       	ld	r24, Z
     388:	89 0f       	add	r24, r25
     38a:	8c 93       	st	X, r24
     38c:	8c 91       	ld	r24, X
     38e:	08 2e       	mov	r0, r24
     390:	00 0c       	add	r0, r0
     392:	99 0b       	sbc	r25, r25
     394:	08 95       	ret

00000396 <checkOverflow>:
     396:	fc 01       	movw	r30, r24
     398:	90 81       	ld	r25, Z
     39a:	29 2f       	mov	r18, r25
     39c:	09 2e       	mov	r0, r25
     39e:	00 0c       	add	r0, r0
     3a0:	33 0b       	sbc	r19, r19
     3a2:	42 17       	cp	r20, r18
     3a4:	53 07       	cpc	r21, r19
     3a6:	0c f4       	brge	.+2      	; 0x3aa <checkOverflow+0x14>
     3a8:	96 2f       	mov	r25, r22
     3aa:	99 23       	and	r25, r25
     3ac:	0c f4       	brge	.+2      	; 0x3b0 <checkOverflow+0x1a>
     3ae:	94 2f       	mov	r25, r20
     3b0:	90 83       	st	Z, r25
     3b2:	08 95       	ret

000003b4 <DecToBcd>:
     3b4:	9d ec       	ldi	r25, 0xCD	; 205
     3b6:	89 9f       	mul	r24, r25
     3b8:	91 2d       	mov	r25, r1
     3ba:	11 24       	eor	r1, r1
     3bc:	96 95       	lsr	r25
     3be:	96 95       	lsr	r25
     3c0:	96 95       	lsr	r25
     3c2:	39 2f       	mov	r19, r25
     3c4:	32 95       	swap	r19
     3c6:	30 7f       	andi	r19, 0xF0	; 240
     3c8:	99 0f       	add	r25, r25
     3ca:	29 2f       	mov	r18, r25
     3cc:	22 0f       	add	r18, r18
     3ce:	22 0f       	add	r18, r18
     3d0:	92 0f       	add	r25, r18
     3d2:	89 1b       	sub	r24, r25
     3d4:	83 2b       	or	r24, r19
     3d6:	08 95       	ret

000003d8 <BcdToDec>:
     3d8:	98 2f       	mov	r25, r24
     3da:	92 95       	swap	r25
     3dc:	9f 70       	andi	r25, 0x0F	; 15
     3de:	99 0f       	add	r25, r25
     3e0:	29 2f       	mov	r18, r25
     3e2:	22 0f       	add	r18, r18
     3e4:	22 0f       	add	r18, r18
     3e6:	92 0f       	add	r25, r18
     3e8:	8f 70       	andi	r24, 0x0F	; 15
     3ea:	89 0f       	add	r24, r25
     3ec:	08 95       	ret

000003ee <setSwitchTimeEEP>:
     3ee:	2f 92       	push	r2
     3f0:	3f 92       	push	r3
     3f2:	4f 92       	push	r4
     3f4:	5f 92       	push	r5
     3f6:	6f 92       	push	r6
     3f8:	7f 92       	push	r7
     3fa:	8f 92       	push	r8
     3fc:	9f 92       	push	r9
     3fe:	af 92       	push	r10
     400:	bf 92       	push	r11
     402:	cf 92       	push	r12
     404:	df 92       	push	r13
     406:	ef 92       	push	r14
     408:	ff 92       	push	r15
     40a:	0f 93       	push	r16
     40c:	1f 93       	push	r17
     40e:	cf 93       	push	r28
     410:	df 93       	push	r29
     412:	68 2e       	mov	r6, r24
     414:	76 2e       	mov	r7, r22
     416:	28 2f       	mov	r18, r24
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	c9 01       	movw	r24, r18
     41c:	89 50       	subi	r24, 0x09	; 9
     41e:	9d 4f       	sbci	r25, 0xFD	; 253
     420:	8c 01       	movw	r16, r24
     422:	0b 5e       	subi	r16, 0xEB	; 235
     424:	1f 4f       	sbci	r17, 0xFF	; 255
     426:	a9 01       	movw	r20, r18
     428:	44 5f       	subi	r20, 0xF4	; 244
     42a:	5c 4f       	sbci	r21, 0xFC	; 252
     42c:	2a 01       	movw	r4, r20
     42e:	4c 01       	movw	r8, r24
     430:	59 e2       	ldi	r21, 0x29	; 41
     432:	85 0e       	add	r8, r21
     434:	91 1c       	adc	r9, r1
     436:	5c 01       	movw	r10, r24
     438:	ef e1       	ldi	r30, 0x1F	; 31
     43a:	ae 0e       	add	r10, r30
     43c:	b1 1c       	adc	r11, r1
     43e:	ec 01       	movw	r28, r24
     440:	60 96       	adiw	r28, 0x10	; 16
     442:	a9 01       	movw	r20, r18
     444:	49 5f       	subi	r20, 0xF9	; 249
     446:	5c 4f       	sbci	r21, 0xFC	; 252
     448:	1a 01       	movw	r2, r20
     44a:	6c 01       	movw	r12, r24
     44c:	54 e2       	ldi	r21, 0x24	; 36
     44e:	c5 0e       	add	r12, r21
     450:	d1 1c       	adc	r13, r1
     452:	7c 01       	movw	r14, r24
     454:	ea e1       	ldi	r30, 0x1A	; 26
     456:	ee 0e       	add	r14, r30
     458:	f1 1c       	adc	r15, r1
     45a:	61 e0       	ldi	r22, 0x01	; 1
     45c:	80 e0       	ldi	r24, 0x00	; 0
     45e:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     462:	77 20       	and	r7, r7
     464:	09 f4       	brne	.+2      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     466:	42 c0       	rjmp	.+132    	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
     468:	86 ef       	ldi	r24, 0xF6	; 246
     46a:	92 e0       	ldi	r25, 0x02	; 2
     46c:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     470:	98 81       	ld	r25, Y
     472:	89 0f       	add	r24, r25
     474:	88 83       	st	Y, r24
     476:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     47a:	47 e1       	ldi	r20, 0x17	; 23
     47c:	50 e0       	ldi	r21, 0x00	; 0
     47e:	60 e0       	ldi	r22, 0x00	; 0
     480:	70 e0       	ldi	r23, 0x00	; 0
     482:	c1 01       	movw	r24, r2
     484:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     488:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     48c:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     496:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     49a:	c2 97       	sbiw	r24, 0x32	; 50
     49c:	50 f4       	brcc	.+20     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
     49e:	27 e0       	ldi	r18, 0x07	; 7
     4a0:	f6 01       	movw	r30, r12
     4a2:	40 81       	ld	r20, Z
     4a4:	f7 01       	movw	r30, r14
     4a6:	60 81       	ld	r22, Z
     4a8:	88 81       	ld	r24, Y
     4aa:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     4ae:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     4b2:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     4b6:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     4ba:	c3 97       	sbiw	r24, 0x33	; 51
     4bc:	50 f0       	brcs	.+20     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
     4be:	26 e0       	ldi	r18, 0x06	; 6
     4c0:	f6 01       	movw	r30, r12
     4c2:	40 81       	ld	r20, Z
     4c4:	f7 01       	movw	r30, r14
     4c6:	60 81       	ld	r22, Z
     4c8:	88 81       	ld	r24, Y
     4ca:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     4ce:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     4d2:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     4d6:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     4da:	85 36       	cpi	r24, 0x65	; 101
     4dc:	91 05       	cpc	r25, r1
     4de:	08 f4       	brcc	.+2      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4e0:	48 c0       	rjmp	.+144    	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
     4e2:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     4e6:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     4ea:	43 c0       	rjmp	.+134    	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
     4ec:	86 ef       	ldi	r24, 0xF6	; 246
     4ee:	92 e0       	ldi	r25, 0x02	; 2
     4f0:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     4f4:	f8 01       	movw	r30, r16
     4f6:	90 81       	ld	r25, Z
     4f8:	89 0f       	add	r24, r25
     4fa:	80 83       	st	Z, r24
     4fc:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     500:	47 e1       	ldi	r20, 0x17	; 23
     502:	50 e0       	ldi	r21, 0x00	; 0
     504:	60 e0       	ldi	r22, 0x00	; 0
     506:	70 e0       	ldi	r23, 0x00	; 0
     508:	c2 01       	movw	r24, r4
     50a:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     50e:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     512:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     516:	01 96       	adiw	r24, 0x01	; 1
     518:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     51c:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     520:	c2 97       	sbiw	r24, 0x32	; 50
     522:	58 f4       	brcc	.+22     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
     524:	27 e0       	ldi	r18, 0x07	; 7
     526:	f4 01       	movw	r30, r8
     528:	40 81       	ld	r20, Z
     52a:	f5 01       	movw	r30, r10
     52c:	60 81       	ld	r22, Z
     52e:	f8 01       	movw	r30, r16
     530:	80 81       	ld	r24, Z
     532:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     536:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     53a:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     53e:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     542:	c3 97       	sbiw	r24, 0x33	; 51
     544:	58 f0       	brcs	.+22     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
     546:	26 e0       	ldi	r18, 0x06	; 6
     548:	f4 01       	movw	r30, r8
     54a:	40 81       	ld	r20, Z
     54c:	f5 01       	movw	r30, r10
     54e:	60 81       	ld	r22, Z
     550:	f8 01       	movw	r30, r16
     552:	80 81       	ld	r24, Z
     554:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     558:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     55c:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     560:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     564:	85 36       	cpi	r24, 0x65	; 101
     566:	91 05       	cpc	r25, r1
     568:	20 f0       	brcs	.+8      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
     56a:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     56e:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     572:	80 e7       	ldi	r24, 0x70	; 112
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     57a:	9b 99       	sbic	0x13, 3	; 19
     57c:	6e cf       	rjmp	.-292    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     57e:	ff ef       	ldi	r31, 0xFF	; 255
     580:	22 e5       	ldi	r18, 0x52	; 82
     582:	47 e0       	ldi	r20, 0x07	; 7
     584:	f1 50       	subi	r31, 0x01	; 1
     586:	20 40       	sbci	r18, 0x00	; 0
     588:	40 40       	sbci	r20, 0x00	; 0
     58a:	e1 f7       	brne	.-8      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
     58c:	00 c0       	rjmp	.+0      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
     58e:	00 00       	nop
     590:	26 2d       	mov	r18, r6
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	c9 01       	movw	r24, r18
     596:	89 50       	subi	r24, 0x09	; 9
     598:	9d 4f       	sbci	r25, 0xFD	; 253
     59a:	8c 01       	movw	r16, r24
     59c:	01 5e       	subi	r16, 0xE1	; 225
     59e:	1f 4f       	sbci	r17, 0xFF	; 255
     5a0:	f9 01       	movw	r30, r18
     5a2:	ea 5e       	subi	r30, 0xEA	; 234
     5a4:	fc 4f       	sbci	r31, 0xFC	; 252
     5a6:	2f 01       	movw	r4, r30
     5a8:	4c 01       	movw	r8, r24
     5aa:	f9 e2       	ldi	r31, 0x29	; 41
     5ac:	8f 0e       	add	r8, r31
     5ae:	91 1c       	adc	r9, r1
     5b0:	5c 01       	movw	r10, r24
     5b2:	45 e1       	ldi	r20, 0x15	; 21
     5b4:	a4 0e       	add	r10, r20
     5b6:	b1 1c       	adc	r11, r1
     5b8:	ec 01       	movw	r28, r24
     5ba:	6a 96       	adiw	r28, 0x1a	; 26
     5bc:	f9 01       	movw	r30, r18
     5be:	ef 5e       	subi	r30, 0xEF	; 239
     5c0:	fc 4f       	sbci	r31, 0xFC	; 252
     5c2:	1f 01       	movw	r2, r30
     5c4:	6c 01       	movw	r12, r24
     5c6:	f4 e2       	ldi	r31, 0x24	; 36
     5c8:	cf 0e       	add	r12, r31
     5ca:	d1 1c       	adc	r13, r1
     5cc:	7c 01       	movw	r14, r24
     5ce:	20 e1       	ldi	r18, 0x10	; 16
     5d0:	e2 0e       	add	r14, r18
     5d2:	f1 1c       	adc	r15, r1
     5d4:	61 e0       	ldi	r22, 0x01	; 1
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     5dc:	77 20       	and	r7, r7
     5de:	09 f4       	brne	.+2      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
     5e0:	42 c0       	rjmp	.+132    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
     5e2:	86 ef       	ldi	r24, 0xF6	; 246
     5e4:	92 e0       	ldi	r25, 0x02	; 2
     5e6:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     5ea:	98 81       	ld	r25, Y
     5ec:	89 0f       	add	r24, r25
     5ee:	88 83       	st	Y, r24
     5f0:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     5f4:	4b e3       	ldi	r20, 0x3B	; 59
     5f6:	50 e0       	ldi	r21, 0x00	; 0
     5f8:	60 e0       	ldi	r22, 0x00	; 0
     5fa:	70 e0       	ldi	r23, 0x00	; 0
     5fc:	c1 01       	movw	r24, r2
     5fe:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     602:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     606:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     60a:	01 96       	adiw	r24, 0x01	; 1
     60c:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     610:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     614:	c2 97       	sbiw	r24, 0x32	; 50
     616:	50 f4       	brcc	.+20     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
     618:	27 e0       	ldi	r18, 0x07	; 7
     61a:	f6 01       	movw	r30, r12
     61c:	40 81       	ld	r20, Z
     61e:	68 81       	ld	r22, Y
     620:	f7 01       	movw	r30, r14
     622:	80 81       	ld	r24, Z
     624:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     628:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     62c:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     630:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     634:	c3 97       	sbiw	r24, 0x33	; 51
     636:	50 f0       	brcs	.+20     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
     638:	25 e0       	ldi	r18, 0x05	; 5
     63a:	f6 01       	movw	r30, r12
     63c:	40 81       	ld	r20, Z
     63e:	68 81       	ld	r22, Y
     640:	f7 01       	movw	r30, r14
     642:	80 81       	ld	r24, Z
     644:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     648:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     64c:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     650:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     654:	85 36       	cpi	r24, 0x65	; 101
     656:	91 05       	cpc	r25, r1
     658:	08 f4       	brcc	.+2      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
     65a:	48 c0       	rjmp	.+144    	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
     65c:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     660:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     664:	43 c0       	rjmp	.+134    	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
     666:	86 ef       	ldi	r24, 0xF6	; 246
     668:	92 e0       	ldi	r25, 0x02	; 2
     66a:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     66e:	f8 01       	movw	r30, r16
     670:	90 81       	ld	r25, Z
     672:	89 0f       	add	r24, r25
     674:	80 83       	st	Z, r24
     676:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     67a:	4b e3       	ldi	r20, 0x3B	; 59
     67c:	50 e0       	ldi	r21, 0x00	; 0
     67e:	60 e0       	ldi	r22, 0x00	; 0
     680:	70 e0       	ldi	r23, 0x00	; 0
     682:	c2 01       	movw	r24, r4
     684:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     688:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     68c:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     690:	01 96       	adiw	r24, 0x01	; 1
     692:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     696:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     69a:	c2 97       	sbiw	r24, 0x32	; 50
     69c:	58 f4       	brcc	.+22     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
     69e:	27 e0       	ldi	r18, 0x07	; 7
     6a0:	f4 01       	movw	r30, r8
     6a2:	40 81       	ld	r20, Z
     6a4:	f8 01       	movw	r30, r16
     6a6:	60 81       	ld	r22, Z
     6a8:	f5 01       	movw	r30, r10
     6aa:	80 81       	ld	r24, Z
     6ac:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     6b0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     6b4:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     6b8:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     6bc:	c3 97       	sbiw	r24, 0x33	; 51
     6be:	58 f0       	brcs	.+22     	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
     6c0:	25 e0       	ldi	r18, 0x05	; 5
     6c2:	f4 01       	movw	r30, r8
     6c4:	40 81       	ld	r20, Z
     6c6:	f8 01       	movw	r30, r16
     6c8:	60 81       	ld	r22, Z
     6ca:	f5 01       	movw	r30, r10
     6cc:	80 81       	ld	r24, Z
     6ce:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     6d2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     6d6:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     6da:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     6de:	85 36       	cpi	r24, 0x65	; 101
     6e0:	91 05       	cpc	r25, r1
     6e2:	20 f0       	brcs	.+8      	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
     6e4:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     6e8:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     6ec:	80 e7       	ldi	r24, 0x70	; 112
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     6f4:	9b 99       	sbic	0x13, 3	; 19
     6f6:	6e cf       	rjmp	.-292    	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
     6f8:	ff ef       	ldi	r31, 0xFF	; 255
     6fa:	22 e5       	ldi	r18, 0x52	; 82
     6fc:	47 e0       	ldi	r20, 0x07	; 7
     6fe:	f1 50       	subi	r31, 0x01	; 1
     700:	20 40       	sbci	r18, 0x00	; 0
     702:	40 40       	sbci	r20, 0x00	; 0
     704:	e1 f7       	brne	.-8      	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
     706:	00 c0       	rjmp	.+0      	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
     708:	00 00       	nop
     70a:	26 2d       	mov	r18, r6
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	c9 01       	movw	r24, r18
     710:	89 50       	subi	r24, 0x09	; 9
     712:	9d 4f       	sbci	r25, 0xFD	; 253
     714:	8c 01       	movw	r16, r24
     716:	07 5d       	subi	r16, 0xD7	; 215
     718:	1f 4f       	sbci	r17, 0xFF	; 255
     71a:	f9 01       	movw	r30, r18
     71c:	e0 5e       	subi	r30, 0xE0	; 224
     71e:	fc 4f       	sbci	r31, 0xFC	; 252
     720:	2f 01       	movw	r4, r30
     722:	4c 01       	movw	r8, r24
     724:	ff e1       	ldi	r31, 0x1F	; 31
     726:	8f 0e       	add	r8, r31
     728:	91 1c       	adc	r9, r1
     72a:	5c 01       	movw	r10, r24
     72c:	45 e1       	ldi	r20, 0x15	; 21
     72e:	a4 0e       	add	r10, r20
     730:	b1 1c       	adc	r11, r1
     732:	ec 01       	movw	r28, r24
     734:	a4 96       	adiw	r28, 0x24	; 36
     736:	f9 01       	movw	r30, r18
     738:	e5 5e       	subi	r30, 0xE5	; 229
     73a:	fc 4f       	sbci	r31, 0xFC	; 252
     73c:	1f 01       	movw	r2, r30
     73e:	6c 01       	movw	r12, r24
     740:	fa e1       	ldi	r31, 0x1A	; 26
     742:	cf 0e       	add	r12, r31
     744:	d1 1c       	adc	r13, r1
     746:	7c 01       	movw	r14, r24
     748:	20 e1       	ldi	r18, 0x10	; 16
     74a:	e2 0e       	add	r14, r18
     74c:	f1 1c       	adc	r15, r1
     74e:	61 e0       	ldi	r22, 0x01	; 1
     750:	80 e0       	ldi	r24, 0x00	; 0
     752:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     756:	77 20       	and	r7, r7
     758:	09 f4       	brne	.+2      	; 0x75c <__LOCK_REGION_LENGTH__+0x35c>
     75a:	42 c0       	rjmp	.+132    	; 0x7e0 <__LOCK_REGION_LENGTH__+0x3e0>
     75c:	86 ef       	ldi	r24, 0xF6	; 246
     75e:	92 e0       	ldi	r25, 0x02	; 2
     760:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     764:	98 81       	ld	r25, Y
     766:	89 0f       	add	r24, r25
     768:	88 83       	st	Y, r24
     76a:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     76e:	4b e3       	ldi	r20, 0x3B	; 59
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	60 e0       	ldi	r22, 0x00	; 0
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	c1 01       	movw	r24, r2
     778:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     77c:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     780:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     784:	01 96       	adiw	r24, 0x01	; 1
     786:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     78a:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     78e:	c2 97       	sbiw	r24, 0x32	; 50
     790:	50 f4       	brcc	.+20     	; 0x7a6 <__LOCK_REGION_LENGTH__+0x3a6>
     792:	27 e0       	ldi	r18, 0x07	; 7
     794:	48 81       	ld	r20, Y
     796:	f6 01       	movw	r30, r12
     798:	60 81       	ld	r22, Z
     79a:	f7 01       	movw	r30, r14
     79c:	80 81       	ld	r24, Z
     79e:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     7a2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     7a6:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     7aa:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     7ae:	c3 97       	sbiw	r24, 0x33	; 51
     7b0:	50 f0       	brcs	.+20     	; 0x7c6 <__LOCK_REGION_LENGTH__+0x3c6>
     7b2:	23 e0       	ldi	r18, 0x03	; 3
     7b4:	48 81       	ld	r20, Y
     7b6:	f6 01       	movw	r30, r12
     7b8:	60 81       	ld	r22, Z
     7ba:	f7 01       	movw	r30, r14
     7bc:	80 81       	ld	r24, Z
     7be:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     7c2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     7c6:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     7ca:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     7ce:	85 36       	cpi	r24, 0x65	; 101
     7d0:	91 05       	cpc	r25, r1
     7d2:	08 f4       	brcc	.+2      	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
     7d4:	48 c0       	rjmp	.+144    	; 0x866 <__stack+0x7>
     7d6:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     7da:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     7de:	43 c0       	rjmp	.+134    	; 0x866 <__stack+0x7>
     7e0:	86 ef       	ldi	r24, 0xF6	; 246
     7e2:	92 e0       	ldi	r25, 0x02	; 2
     7e4:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     7e8:	f8 01       	movw	r30, r16
     7ea:	90 81       	ld	r25, Z
     7ec:	89 0f       	add	r24, r25
     7ee:	80 83       	st	Z, r24
     7f0:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     7f4:	4b e3       	ldi	r20, 0x3B	; 59
     7f6:	50 e0       	ldi	r21, 0x00	; 0
     7f8:	60 e0       	ldi	r22, 0x00	; 0
     7fa:	70 e0       	ldi	r23, 0x00	; 0
     7fc:	c2 01       	movw	r24, r4
     7fe:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     802:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     806:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     80a:	01 96       	adiw	r24, 0x01	; 1
     80c:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     810:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     814:	c2 97       	sbiw	r24, 0x32	; 50
     816:	58 f4       	brcc	.+22     	; 0x82e <__LOCK_REGION_LENGTH__+0x42e>
     818:	27 e0       	ldi	r18, 0x07	; 7
     81a:	f8 01       	movw	r30, r16
     81c:	40 81       	ld	r20, Z
     81e:	f4 01       	movw	r30, r8
     820:	60 81       	ld	r22, Z
     822:	f5 01       	movw	r30, r10
     824:	80 81       	ld	r24, Z
     826:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     82a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     82e:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     832:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     836:	c3 97       	sbiw	r24, 0x33	; 51
     838:	58 f0       	brcs	.+22     	; 0x850 <__LOCK_REGION_LENGTH__+0x450>
     83a:	23 e0       	ldi	r18, 0x03	; 3
     83c:	f8 01       	movw	r30, r16
     83e:	40 81       	ld	r20, Z
     840:	f4 01       	movw	r30, r8
     842:	60 81       	ld	r22, Z
     844:	f5 01       	movw	r30, r10
     846:	80 81       	ld	r24, Z
     848:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     84c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     850:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     854:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     858:	85 36       	cpi	r24, 0x65	; 101
     85a:	91 05       	cpc	r25, r1
     85c:	20 f0       	brcs	.+8      	; 0x866 <__stack+0x7>
     85e:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     862:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     866:	80 e7       	ldi	r24, 0x70	; 112
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     86e:	9b 99       	sbic	0x13, 3	; 19
     870:	6e cf       	rjmp	.-292    	; 0x74e <__LOCK_REGION_LENGTH__+0x34e>
     872:	ff ef       	ldi	r31, 0xFF	; 255
     874:	22 e5       	ldi	r18, 0x52	; 82
     876:	47 e0       	ldi	r20, 0x07	; 7
     878:	f1 50       	subi	r31, 0x01	; 1
     87a:	20 40       	sbci	r18, 0x00	; 0
     87c:	40 40       	sbci	r20, 0x00	; 0
     87e:	e1 f7       	brne	.-8      	; 0x878 <__stack+0x19>
     880:	00 c0       	rjmp	.+0      	; 0x882 <__stack+0x23>
     882:	00 00       	nop
     884:	77 20       	and	r7, r7
     886:	21 f1       	breq	.+72     	; 0x8d0 <__stack+0x71>
     888:	c6 2d       	mov	r28, r6
     88a:	d0 e0       	ldi	r29, 0x00	; 0
     88c:	fe 01       	movw	r30, r28
     88e:	e9 50       	subi	r30, 0x09	; 9
     890:	fd 4f       	sbci	r31, 0xFD	; 253
     892:	60 89       	ldd	r22, Z+16	; 0x10
     894:	ce 01       	movw	r24, r28
     896:	8f 5f       	subi	r24, 0xFF	; 255
     898:	9f 4f       	sbci	r25, 0xFF	; 255
     89a:	0e 94 4e 12 	call	0x249c	; 0x249c <eeprom_update_byte>
     89e:	e1 99       	sbic	0x1c, 1	; 28
     8a0:	fe cf       	rjmp	.-4      	; 0x89e <__stack+0x3f>
     8a2:	fe 01       	movw	r30, r28
     8a4:	e9 50       	subi	r30, 0x09	; 9
     8a6:	fd 4f       	sbci	r31, 0xFD	; 253
     8a8:	62 8d       	ldd	r22, Z+26	; 0x1a
     8aa:	ce 01       	movw	r24, r28
     8ac:	85 5f       	subi	r24, 0xF5	; 245
     8ae:	9f 4f       	sbci	r25, 0xFF	; 255
     8b0:	0e 94 4e 12 	call	0x249c	; 0x249c <eeprom_update_byte>
     8b4:	e1 99       	sbic	0x1c, 1	; 28
     8b6:	fe cf       	rjmp	.-4      	; 0x8b4 <__stack+0x55>
     8b8:	fe 01       	movw	r30, r28
     8ba:	e9 50       	subi	r30, 0x09	; 9
     8bc:	fd 4f       	sbci	r31, 0xFD	; 253
     8be:	64 a1       	ldd	r22, Z+36	; 0x24
     8c0:	ce 01       	movw	r24, r28
     8c2:	8b 5e       	subi	r24, 0xEB	; 235
     8c4:	9f 4f       	sbci	r25, 0xFF	; 255
     8c6:	0e 94 4e 12 	call	0x249c	; 0x249c <eeprom_update_byte>
     8ca:	e1 99       	sbic	0x1c, 1	; 28
     8cc:	fe cf       	rjmp	.-4      	; 0x8ca <__stack+0x6b>
     8ce:	23 c0       	rjmp	.+70     	; 0x916 <__stack+0xb7>
     8d0:	c6 2d       	mov	r28, r6
     8d2:	d0 e0       	ldi	r29, 0x00	; 0
     8d4:	fe 01       	movw	r30, r28
     8d6:	e9 50       	subi	r30, 0x09	; 9
     8d8:	fd 4f       	sbci	r31, 0xFD	; 253
     8da:	65 89       	ldd	r22, Z+21	; 0x15
     8dc:	ce 01       	movw	r24, r28
     8de:	8a 5f       	subi	r24, 0xFA	; 250
     8e0:	9f 4f       	sbci	r25, 0xFF	; 255
     8e2:	0e 94 4e 12 	call	0x249c	; 0x249c <eeprom_update_byte>
     8e6:	e1 99       	sbic	0x1c, 1	; 28
     8e8:	fe cf       	rjmp	.-4      	; 0x8e6 <__stack+0x87>
     8ea:	fe 01       	movw	r30, r28
     8ec:	e9 50       	subi	r30, 0x09	; 9
     8ee:	fd 4f       	sbci	r31, 0xFD	; 253
     8f0:	67 8d       	ldd	r22, Z+31	; 0x1f
     8f2:	ce 01       	movw	r24, r28
     8f4:	80 5f       	subi	r24, 0xF0	; 240
     8f6:	9f 4f       	sbci	r25, 0xFF	; 255
     8f8:	0e 94 4e 12 	call	0x249c	; 0x249c <eeprom_update_byte>
     8fc:	e1 99       	sbic	0x1c, 1	; 28
     8fe:	fe cf       	rjmp	.-4      	; 0x8fc <__stack+0x9d>
     900:	fe 01       	movw	r30, r28
     902:	e9 50       	subi	r30, 0x09	; 9
     904:	fd 4f       	sbci	r31, 0xFD	; 253
     906:	61 a5       	ldd	r22, Z+41	; 0x29
     908:	ce 01       	movw	r24, r28
     90a:	86 5e       	subi	r24, 0xE6	; 230
     90c:	9f 4f       	sbci	r25, 0xFF	; 255
     90e:	0e 94 4e 12 	call	0x249c	; 0x249c <eeprom_update_byte>
     912:	e1 99       	sbic	0x1c, 1	; 28
     914:	fe cf       	rjmp	.-4      	; 0x912 <__stack+0xb3>
     916:	61 e0       	ldi	r22, 0x01	; 1
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     91e:	86 e7       	ldi	r24, 0x76	; 118
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     926:	5f ef       	ldi	r21, 0xFF	; 255
     928:	82 e5       	ldi	r24, 0x52	; 82
     92a:	97 e0       	ldi	r25, 0x07	; 7
     92c:	51 50       	subi	r21, 0x01	; 1
     92e:	80 40       	sbci	r24, 0x00	; 0
     930:	90 40       	sbci	r25, 0x00	; 0
     932:	e1 f7       	brne	.-8      	; 0x92c <__stack+0xcd>
     934:	00 c0       	rjmp	.+0      	; 0x936 <__stack+0xd7>
     936:	00 00       	nop
     938:	ee e3       	ldi	r30, 0x3E	; 62
     93a:	f3 e0       	ldi	r31, 0x03	; 3
     93c:	16 82       	std	Z+6, r1	; 0x06
     93e:	15 82       	std	Z+5, r1	; 0x05
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	1f 91       	pop	r17
     946:	0f 91       	pop	r16
     948:	ff 90       	pop	r15
     94a:	ef 90       	pop	r14
     94c:	df 90       	pop	r13
     94e:	cf 90       	pop	r12
     950:	bf 90       	pop	r11
     952:	af 90       	pop	r10
     954:	9f 90       	pop	r9
     956:	8f 90       	pop	r8
     958:	7f 90       	pop	r7
     95a:	6f 90       	pop	r6
     95c:	5f 90       	pop	r5
     95e:	4f 90       	pop	r4
     960:	3f 90       	pop	r3
     962:	2f 90       	pop	r2
     964:	08 95       	ret

00000966 <setAppSysTime>:
     966:	0f 93       	push	r16
     968:	1f 93       	push	r17
     96a:	cf 93       	push	r28
     96c:	df 93       	push	r29
     96e:	ec 01       	movw	r28, r24
     970:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <RX8564_get_Data>
     974:	8a 81       	ldd	r24, Y+2	; 0x02
     976:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <BcdToDec>
     97a:	8a 83       	std	Y+2, r24	; 0x02
     97c:	89 81       	ldd	r24, Y+1	; 0x01
     97e:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <BcdToDec>
     982:	89 83       	std	Y+1, r24	; 0x01
     984:	88 81       	ld	r24, Y
     986:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <BcdToDec>
     98a:	88 83       	st	Y, r24
     98c:	8e 01       	movw	r16, r28
     98e:	0e 5f       	subi	r16, 0xFE	; 254
     990:	1f 4f       	sbci	r17, 0xFF	; 255
     992:	86 ef       	ldi	r24, 0xF6	; 246
     994:	92 e0       	ldi	r25, 0x02	; 2
     996:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     99a:	9a 81       	ldd	r25, Y+2	; 0x02
     99c:	89 0f       	add	r24, r25
     99e:	8a 83       	std	Y+2, r24	; 0x02
     9a0:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     9a4:	47 e1       	ldi	r20, 0x17	; 23
     9a6:	50 e0       	ldi	r21, 0x00	; 0
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	c8 01       	movw	r24, r16
     9ae:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     9b2:	61 e0       	ldi	r22, 0x01	; 1
     9b4:	80 e0       	ldi	r24, 0x00	; 0
     9b6:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     9ba:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     9be:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     9c2:	01 96       	adiw	r24, 0x01	; 1
     9c4:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     9c8:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     9cc:	c2 97       	sbiw	r24, 0x32	; 50
     9ce:	40 f4       	brcc	.+16     	; 0x9e0 <setAppSysTime+0x7a>
     9d0:	27 e0       	ldi	r18, 0x07	; 7
     9d2:	48 81       	ld	r20, Y
     9d4:	69 81       	ldd	r22, Y+1	; 0x01
     9d6:	8a 81       	ldd	r24, Y+2	; 0x02
     9d8:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     9dc:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     9e0:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     9e4:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     9e8:	c3 97       	sbiw	r24, 0x33	; 51
     9ea:	40 f0       	brcs	.+16     	; 0x9fc <setAppSysTime+0x96>
     9ec:	26 e0       	ldi	r18, 0x06	; 6
     9ee:	48 81       	ld	r20, Y
     9f0:	69 81       	ldd	r22, Y+1	; 0x01
     9f2:	8a 81       	ldd	r24, Y+2	; 0x02
     9f4:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     9f8:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     9fc:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     a00:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     a04:	85 36       	cpi	r24, 0x65	; 101
     a06:	91 05       	cpc	r25, r1
     a08:	20 f0       	brcs	.+8      	; 0xa12 <setAppSysTime+0xac>
     a0a:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     a0e:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     a12:	80 e7       	ldi	r24, 0x70	; 112
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     a1a:	9b 99       	sbic	0x13, 3	; 19
     a1c:	ba cf       	rjmp	.-140    	; 0x992 <setAppSysTime+0x2c>
     a1e:	2f ef       	ldi	r18, 0xFF	; 255
     a20:	82 e5       	ldi	r24, 0x52	; 82
     a22:	97 e0       	ldi	r25, 0x07	; 7
     a24:	21 50       	subi	r18, 0x01	; 1
     a26:	80 40       	sbci	r24, 0x00	; 0
     a28:	90 40       	sbci	r25, 0x00	; 0
     a2a:	e1 f7       	brne	.-8      	; 0xa24 <setAppSysTime+0xbe>
     a2c:	00 c0       	rjmp	.+0      	; 0xa2e <setAppSysTime+0xc8>
     a2e:	00 00       	nop
     a30:	8e 01       	movw	r16, r28
     a32:	0f 5f       	subi	r16, 0xFF	; 255
     a34:	1f 4f       	sbci	r17, 0xFF	; 255
     a36:	86 ef       	ldi	r24, 0xF6	; 246
     a38:	92 e0       	ldi	r25, 0x02	; 2
     a3a:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     a3e:	99 81       	ldd	r25, Y+1	; 0x01
     a40:	89 0f       	add	r24, r25
     a42:	89 83       	std	Y+1, r24	; 0x01
     a44:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     a48:	4b e3       	ldi	r20, 0x3B	; 59
     a4a:	50 e0       	ldi	r21, 0x00	; 0
     a4c:	60 e0       	ldi	r22, 0x00	; 0
     a4e:	70 e0       	ldi	r23, 0x00	; 0
     a50:	c8 01       	movw	r24, r16
     a52:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     a56:	61 e0       	ldi	r22, 0x01	; 1
     a58:	80 e0       	ldi	r24, 0x00	; 0
     a5a:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     a5e:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     a62:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     a66:	01 96       	adiw	r24, 0x01	; 1
     a68:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     a6c:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     a70:	c2 97       	sbiw	r24, 0x32	; 50
     a72:	40 f4       	brcc	.+16     	; 0xa84 <setAppSysTime+0x11e>
     a74:	27 e0       	ldi	r18, 0x07	; 7
     a76:	48 81       	ld	r20, Y
     a78:	69 81       	ldd	r22, Y+1	; 0x01
     a7a:	8a 81       	ldd	r24, Y+2	; 0x02
     a7c:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     a80:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     a84:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     a88:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     a8c:	c3 97       	sbiw	r24, 0x33	; 51
     a8e:	40 f0       	brcs	.+16     	; 0xaa0 <setAppSysTime+0x13a>
     a90:	25 e0       	ldi	r18, 0x05	; 5
     a92:	48 81       	ld	r20, Y
     a94:	69 81       	ldd	r22, Y+1	; 0x01
     a96:	8a 81       	ldd	r24, Y+2	; 0x02
     a98:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     a9c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     aa0:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     aa4:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     aa8:	85 36       	cpi	r24, 0x65	; 101
     aaa:	91 05       	cpc	r25, r1
     aac:	20 f0       	brcs	.+8      	; 0xab6 <setAppSysTime+0x150>
     aae:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     ab2:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     ab6:	87 e8       	ldi	r24, 0x87	; 135
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     abe:	9b 99       	sbic	0x13, 3	; 19
     ac0:	ba cf       	rjmp	.-140    	; 0xa36 <setAppSysTime+0xd0>
     ac2:	2f ef       	ldi	r18, 0xFF	; 255
     ac4:	82 e5       	ldi	r24, 0x52	; 82
     ac6:	97 e0       	ldi	r25, 0x07	; 7
     ac8:	21 50       	subi	r18, 0x01	; 1
     aca:	80 40       	sbci	r24, 0x00	; 0
     acc:	90 40       	sbci	r25, 0x00	; 0
     ace:	e1 f7       	brne	.-8      	; 0xac8 <setAppSysTime+0x162>
     ad0:	00 c0       	rjmp	.+0      	; 0xad2 <setAppSysTime+0x16c>
     ad2:	00 00       	nop
     ad4:	86 ef       	ldi	r24, 0xF6	; 246
     ad6:	92 e0       	ldi	r25, 0x02	; 2
     ad8:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     adc:	98 81       	ld	r25, Y
     ade:	89 0f       	add	r24, r25
     ae0:	88 83       	st	Y, r24
     ae2:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     ae6:	4b e3       	ldi	r20, 0x3B	; 59
     ae8:	50 e0       	ldi	r21, 0x00	; 0
     aea:	60 e0       	ldi	r22, 0x00	; 0
     aec:	70 e0       	ldi	r23, 0x00	; 0
     aee:	ce 01       	movw	r24, r28
     af0:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     af4:	61 e0       	ldi	r22, 0x01	; 1
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     afc:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     b00:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     b04:	01 96       	adiw	r24, 0x01	; 1
     b06:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     b0a:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     b0e:	c2 97       	sbiw	r24, 0x32	; 50
     b10:	40 f4       	brcc	.+16     	; 0xb22 <setAppSysTime+0x1bc>
     b12:	27 e0       	ldi	r18, 0x07	; 7
     b14:	48 81       	ld	r20, Y
     b16:	69 81       	ldd	r22, Y+1	; 0x01
     b18:	8a 81       	ldd	r24, Y+2	; 0x02
     b1a:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     b1e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     b22:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     b26:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     b2a:	c3 97       	sbiw	r24, 0x33	; 51
     b2c:	40 f0       	brcs	.+16     	; 0xb3e <setAppSysTime+0x1d8>
     b2e:	23 e0       	ldi	r18, 0x03	; 3
     b30:	48 81       	ld	r20, Y
     b32:	69 81       	ldd	r22, Y+1	; 0x01
     b34:	8a 81       	ldd	r24, Y+2	; 0x02
     b36:	0e 94 3d 10 	call	0x207a	; 0x207a <dec_ttostr>
     b3a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     b3e:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     b42:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     b46:	85 36       	cpi	r24, 0x65	; 101
     b48:	91 05       	cpc	r25, r1
     b4a:	20 f0       	brcs	.+8      	; 0xb54 <setAppSysTime+0x1ee>
     b4c:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     b50:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     b54:	8d e8       	ldi	r24, 0x8D	; 141
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     b5c:	9b 99       	sbic	0x13, 3	; 19
     b5e:	ba cf       	rjmp	.-140    	; 0xad4 <setAppSysTime+0x16e>
     b60:	2f ef       	ldi	r18, 0xFF	; 255
     b62:	82 e5       	ldi	r24, 0x52	; 82
     b64:	97 e0       	ldi	r25, 0x07	; 7
     b66:	21 50       	subi	r18, 0x01	; 1
     b68:	80 40       	sbci	r24, 0x00	; 0
     b6a:	90 40       	sbci	r25, 0x00	; 0
     b6c:	e1 f7       	brne	.-8      	; 0xb66 <setAppSysTime+0x200>
     b6e:	00 c0       	rjmp	.+0      	; 0xb70 <setAppSysTime+0x20a>
     b70:	00 00       	nop
     b72:	48 81       	ld	r20, Y
     b74:	69 81       	ldd	r22, Y+1	; 0x01
     b76:	8a 81       	ldd	r24, Y+2	; 0x02
     b78:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <RX8564_set_Time>
     b7c:	61 e0       	ldi	r22, 0x01	; 1
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     b84:	86 e7       	ldi	r24, 0x76	; 118
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     b8c:	2f ef       	ldi	r18, 0xFF	; 255
     b8e:	82 e5       	ldi	r24, 0x52	; 82
     b90:	97 e0       	ldi	r25, 0x07	; 7
     b92:	21 50       	subi	r18, 0x01	; 1
     b94:	80 40       	sbci	r24, 0x00	; 0
     b96:	90 40       	sbci	r25, 0x00	; 0
     b98:	e1 f7       	brne	.-8      	; 0xb92 <setAppSysTime+0x22c>
     b9a:	00 c0       	rjmp	.+0      	; 0xb9c <setAppSysTime+0x236>
     b9c:	00 00       	nop
     b9e:	10 92 25 03 	sts	0x0325, r1	; 0x800325 <APP+0x2e>
     ba2:	df 91       	pop	r29
     ba4:	cf 91       	pop	r28
     ba6:	1f 91       	pop	r17
     ba8:	0f 91       	pop	r16
     baa:	08 95       	ret

00000bac <setAppSysDate>:
     bac:	cf 92       	push	r12
     bae:	df 92       	push	r13
     bb0:	ef 92       	push	r14
     bb2:	ff 92       	push	r15
     bb4:	0f 93       	push	r16
     bb6:	cf 93       	push	r28
     bb8:	df 93       	push	r29
     bba:	ec 01       	movw	r28, r24
     bbc:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <RX8564_get_Data>
     bc0:	8c 81       	ldd	r24, Y+4	; 0x04
     bc2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <BcdToDec>
     bc6:	8c 83       	std	Y+4, r24	; 0x04
     bc8:	8b 81       	ldd	r24, Y+3	; 0x03
     bca:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <BcdToDec>
     bce:	8b 83       	std	Y+3, r24	; 0x03
     bd0:	8e 81       	ldd	r24, Y+6	; 0x06
     bd2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <BcdToDec>
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	80 53       	subi	r24, 0x30	; 48
     bda:	98 4f       	sbci	r25, 0xF8	; 248
     bdc:	9f 83       	std	Y+7, r25	; 0x07
     bde:	8e 83       	std	Y+6, r24	; 0x06
     be0:	7e 01       	movw	r14, r28
     be2:	24 e0       	ldi	r18, 0x04	; 4
     be4:	e2 0e       	add	r14, r18
     be6:	f1 1c       	adc	r15, r1
     be8:	86 ef       	ldi	r24, 0xF6	; 246
     bea:	92 e0       	ldi	r25, 0x02	; 2
     bec:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     bf0:	9c 81       	ldd	r25, Y+4	; 0x04
     bf2:	89 0f       	add	r24, r25
     bf4:	8c 83       	std	Y+4, r24	; 0x04
     bf6:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     bfa:	4f e1       	ldi	r20, 0x1F	; 31
     bfc:	50 e0       	ldi	r21, 0x00	; 0
     bfe:	60 e0       	ldi	r22, 0x00	; 0
     c00:	70 e0       	ldi	r23, 0x00	; 0
     c02:	c7 01       	movw	r24, r14
     c04:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     c08:	61 e0       	ldi	r22, 0x01	; 1
     c0a:	80 e0       	ldi	r24, 0x00	; 0
     c0c:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     c10:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     c14:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     c18:	01 96       	adiw	r24, 0x01	; 1
     c1a:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     c1e:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     c22:	c2 97       	sbiw	r24, 0x32	; 50
     c24:	50 f4       	brcc	.+20     	; 0xc3a <setAppSysDate+0x8e>
     c26:	4e 81       	ldd	r20, Y+6	; 0x06
     c28:	5f 81       	ldd	r21, Y+7	; 0x07
     c2a:	0f e0       	ldi	r16, 0x0F	; 15
     c2c:	2d 81       	ldd	r18, Y+5	; 0x05
     c2e:	6b 81       	ldd	r22, Y+3	; 0x03
     c30:	8c 81       	ldd	r24, Y+4	; 0x04
     c32:	0e 94 3d 11 	call	0x227a	; 0x227a <dec_dtostr>
     c36:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     c3a:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     c3e:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     c42:	c3 97       	sbiw	r24, 0x33	; 51
     c44:	50 f0       	brcs	.+20     	; 0xc5a <setAppSysDate+0xae>
     c46:	4e 81       	ldd	r20, Y+6	; 0x06
     c48:	5f 81       	ldd	r21, Y+7	; 0x07
     c4a:	0e e0       	ldi	r16, 0x0E	; 14
     c4c:	2d 81       	ldd	r18, Y+5	; 0x05
     c4e:	6b 81       	ldd	r22, Y+3	; 0x03
     c50:	8c 81       	ldd	r24, Y+4	; 0x04
     c52:	0e 94 3d 11 	call	0x227a	; 0x227a <dec_dtostr>
     c56:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     c5a:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     c5e:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     c62:	85 36       	cpi	r24, 0x65	; 101
     c64:	91 05       	cpc	r25, r1
     c66:	20 f0       	brcs	.+8      	; 0xc70 <setAppSysDate+0xc4>
     c68:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     c6c:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     c70:	9b 99       	sbic	0x13, 3	; 19
     c72:	ba cf       	rjmp	.-140    	; 0xbe8 <setAppSysDate+0x3c>
     c74:	8f ef       	ldi	r24, 0xFF	; 255
     c76:	92 e5       	ldi	r25, 0x52	; 82
     c78:	27 e0       	ldi	r18, 0x07	; 7
     c7a:	81 50       	subi	r24, 0x01	; 1
     c7c:	90 40       	sbci	r25, 0x00	; 0
     c7e:	20 40       	sbci	r18, 0x00	; 0
     c80:	e1 f7       	brne	.-8      	; 0xc7a <setAppSysDate+0xce>
     c82:	00 c0       	rjmp	.+0      	; 0xc84 <setAppSysDate+0xd8>
     c84:	00 00       	nop
     c86:	7e 01       	movw	r14, r28
     c88:	83 e0       	ldi	r24, 0x03	; 3
     c8a:	e8 0e       	add	r14, r24
     c8c:	f1 1c       	adc	r15, r1
     c8e:	86 ef       	ldi	r24, 0xF6	; 246
     c90:	92 e0       	ldi	r25, 0x02	; 2
     c92:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     c96:	9b 81       	ldd	r25, Y+3	; 0x03
     c98:	89 0f       	add	r24, r25
     c9a:	8b 83       	std	Y+3, r24	; 0x03
     c9c:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     ca0:	4c e0       	ldi	r20, 0x0C	; 12
     ca2:	50 e0       	ldi	r21, 0x00	; 0
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	70 e0       	ldi	r23, 0x00	; 0
     ca8:	c7 01       	movw	r24, r14
     caa:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     cae:	61 e0       	ldi	r22, 0x01	; 1
     cb0:	80 e0       	ldi	r24, 0x00	; 0
     cb2:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     cb6:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     cba:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     cbe:	01 96       	adiw	r24, 0x01	; 1
     cc0:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     cc4:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     cc8:	c2 97       	sbiw	r24, 0x32	; 50
     cca:	50 f4       	brcc	.+20     	; 0xce0 <setAppSysDate+0x134>
     ccc:	4e 81       	ldd	r20, Y+6	; 0x06
     cce:	5f 81       	ldd	r21, Y+7	; 0x07
     cd0:	0f e0       	ldi	r16, 0x0F	; 15
     cd2:	2d 81       	ldd	r18, Y+5	; 0x05
     cd4:	6b 81       	ldd	r22, Y+3	; 0x03
     cd6:	8c 81       	ldd	r24, Y+4	; 0x04
     cd8:	0e 94 3d 11 	call	0x227a	; 0x227a <dec_dtostr>
     cdc:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     ce0:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     ce4:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     ce8:	c3 97       	sbiw	r24, 0x33	; 51
     cea:	50 f0       	brcs	.+20     	; 0xd00 <setAppSysDate+0x154>
     cec:	4e 81       	ldd	r20, Y+6	; 0x06
     cee:	5f 81       	ldd	r21, Y+7	; 0x07
     cf0:	0d e0       	ldi	r16, 0x0D	; 13
     cf2:	2d 81       	ldd	r18, Y+5	; 0x05
     cf4:	6b 81       	ldd	r22, Y+3	; 0x03
     cf6:	8c 81       	ldd	r24, Y+4	; 0x04
     cf8:	0e 94 3d 11 	call	0x227a	; 0x227a <dec_dtostr>
     cfc:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     d00:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     d04:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     d08:	85 36       	cpi	r24, 0x65	; 101
     d0a:	91 05       	cpc	r25, r1
     d0c:	20 f0       	brcs	.+8      	; 0xd16 <setAppSysDate+0x16a>
     d0e:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     d12:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     d16:	9b 99       	sbic	0x13, 3	; 19
     d18:	ba cf       	rjmp	.-140    	; 0xc8e <setAppSysDate+0xe2>
     d1a:	9f ef       	ldi	r25, 0xFF	; 255
     d1c:	22 e5       	ldi	r18, 0x52	; 82
     d1e:	87 e0       	ldi	r24, 0x07	; 7
     d20:	91 50       	subi	r25, 0x01	; 1
     d22:	20 40       	sbci	r18, 0x00	; 0
     d24:	80 40       	sbci	r24, 0x00	; 0
     d26:	e1 f7       	brne	.-8      	; 0xd20 <setAppSysDate+0x174>
     d28:	00 c0       	rjmp	.+0      	; 0xd2a <setAppSysDate+0x17e>
     d2a:	00 00       	nop
     d2c:	0f 2e       	mov	r0, r31
     d2e:	f3 e3       	ldi	r31, 0x33	; 51
     d30:	cf 2e       	mov	r12, r31
     d32:	f8 e0       	ldi	r31, 0x08	; 8
     d34:	df 2e       	mov	r13, r31
     d36:	f0 2d       	mov	r31, r0
     d38:	0f 2e       	mov	r0, r31
     d3a:	f1 ee       	ldi	r31, 0xE1	; 225
     d3c:	ef 2e       	mov	r14, r31
     d3e:	f7 e0       	ldi	r31, 0x07	; 7
     d40:	ff 2e       	mov	r15, r31
     d42:	f0 2d       	mov	r31, r0
     d44:	86 ef       	ldi	r24, 0xF6	; 246
     d46:	92 e0       	ldi	r25, 0x02	; 2
     d48:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     d4c:	2e 81       	ldd	r18, Y+6	; 0x06
     d4e:	3f 81       	ldd	r19, Y+7	; 0x07
     d50:	82 0f       	add	r24, r18
     d52:	93 1f       	adc	r25, r19
     d54:	9f 83       	std	Y+7, r25	; 0x07
     d56:	8e 83       	std	Y+6, r24	; 0x06
     d58:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     d5c:	81 3e       	cpi	r24, 0xE1	; 225
     d5e:	27 e0       	ldi	r18, 0x07	; 7
     d60:	92 07       	cpc	r25, r18
     d62:	18 f4       	brcc	.+6      	; 0xd6a <setAppSysDate+0x1be>
     d64:	ff 82       	std	Y+7, r15	; 0x07
     d66:	ee 82       	std	Y+6, r14	; 0x06
     d68:	05 c0       	rjmp	.+10     	; 0xd74 <setAppSysDate+0x1c8>
     d6a:	84 33       	cpi	r24, 0x34	; 52
     d6c:	98 40       	sbci	r25, 0x08	; 8
     d6e:	10 f0       	brcs	.+4      	; 0xd74 <setAppSysDate+0x1c8>
     d70:	df 82       	std	Y+7, r13	; 0x07
     d72:	ce 82       	std	Y+6, r12	; 0x06
     d74:	61 e0       	ldi	r22, 0x01	; 1
     d76:	80 e0       	ldi	r24, 0x00	; 0
     d78:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     d7c:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     d80:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     d84:	01 96       	adiw	r24, 0x01	; 1
     d86:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     d8a:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     d8e:	c2 97       	sbiw	r24, 0x32	; 50
     d90:	50 f4       	brcc	.+20     	; 0xda6 <setAppSysDate+0x1fa>
     d92:	4e 81       	ldd	r20, Y+6	; 0x06
     d94:	5f 81       	ldd	r21, Y+7	; 0x07
     d96:	0f e0       	ldi	r16, 0x0F	; 15
     d98:	2d 81       	ldd	r18, Y+5	; 0x05
     d9a:	6b 81       	ldd	r22, Y+3	; 0x03
     d9c:	8c 81       	ldd	r24, Y+4	; 0x04
     d9e:	0e 94 3d 11 	call	0x227a	; 0x227a <dec_dtostr>
     da2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     da6:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     daa:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     dae:	c3 97       	sbiw	r24, 0x33	; 51
     db0:	50 f0       	brcs	.+20     	; 0xdc6 <setAppSysDate+0x21a>
     db2:	4e 81       	ldd	r20, Y+6	; 0x06
     db4:	5f 81       	ldd	r21, Y+7	; 0x07
     db6:	0b e0       	ldi	r16, 0x0B	; 11
     db8:	2d 81       	ldd	r18, Y+5	; 0x05
     dba:	6b 81       	ldd	r22, Y+3	; 0x03
     dbc:	8c 81       	ldd	r24, Y+4	; 0x04
     dbe:	0e 94 3d 11 	call	0x227a	; 0x227a <dec_dtostr>
     dc2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     dc6:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     dca:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     dce:	85 36       	cpi	r24, 0x65	; 101
     dd0:	91 05       	cpc	r25, r1
     dd2:	20 f0       	brcs	.+8      	; 0xddc <setAppSysDate+0x230>
     dd4:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     dd8:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     ddc:	9b 99       	sbic	0x13, 3	; 19
     dde:	b2 cf       	rjmp	.-156    	; 0xd44 <setAppSysDate+0x198>
     de0:	8f ef       	ldi	r24, 0xFF	; 255
     de2:	92 e5       	ldi	r25, 0x52	; 82
     de4:	27 e0       	ldi	r18, 0x07	; 7
     de6:	81 50       	subi	r24, 0x01	; 1
     de8:	90 40       	sbci	r25, 0x00	; 0
     dea:	20 40       	sbci	r18, 0x00	; 0
     dec:	e1 f7       	brne	.-8      	; 0xde6 <setAppSysDate+0x23a>
     dee:	00 c0       	rjmp	.+0      	; 0xdf0 <setAppSysDate+0x244>
     df0:	00 00       	nop
     df2:	7e 01       	movw	r14, r28
     df4:	85 e0       	ldi	r24, 0x05	; 5
     df6:	e8 0e       	add	r14, r24
     df8:	f1 1c       	adc	r15, r1
     dfa:	86 ef       	ldi	r24, 0xF6	; 246
     dfc:	92 e0       	ldi	r25, 0x02	; 2
     dfe:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
     e02:	9d 81       	ldd	r25, Y+5	; 0x05
     e04:	89 0f       	add	r24, r25
     e06:	8d 83       	std	Y+5, r24	; 0x05
     e08:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
     e0c:	47 e0       	ldi	r20, 0x07	; 7
     e0e:	50 e0       	ldi	r21, 0x00	; 0
     e10:	60 e0       	ldi	r22, 0x00	; 0
     e12:	70 e0       	ldi	r23, 0x00	; 0
     e14:	c7 01       	movw	r24, r14
     e16:	0e 94 cb 01 	call	0x396	; 0x396 <checkOverflow>
     e1a:	61 e0       	ldi	r22, 0x01	; 1
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     e22:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     e26:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     e2a:	01 96       	adiw	r24, 0x01	; 1
     e2c:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <FlashX+0x1>
     e30:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <FlashX>
     e34:	c2 97       	sbiw	r24, 0x32	; 50
     e36:	50 f4       	brcc	.+20     	; 0xe4c <setAppSysDate+0x2a0>
     e38:	4e 81       	ldd	r20, Y+6	; 0x06
     e3a:	5f 81       	ldd	r21, Y+7	; 0x07
     e3c:	0f e0       	ldi	r16, 0x0F	; 15
     e3e:	2d 81       	ldd	r18, Y+5	; 0x05
     e40:	6b 81       	ldd	r22, Y+3	; 0x03
     e42:	8c 81       	ldd	r24, Y+4	; 0x04
     e44:	0e 94 3d 11 	call	0x227a	; 0x227a <dec_dtostr>
     e48:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     e4c:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     e50:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     e54:	c3 97       	sbiw	r24, 0x33	; 51
     e56:	50 f0       	brcs	.+20     	; 0xe6c <setAppSysDate+0x2c0>
     e58:	4e 81       	ldd	r20, Y+6	; 0x06
     e5a:	5f 81       	ldd	r21, Y+7	; 0x07
     e5c:	07 e0       	ldi	r16, 0x07	; 7
     e5e:	2d 81       	ldd	r18, Y+5	; 0x05
     e60:	6b 81       	ldd	r22, Y+3	; 0x03
     e62:	8c 81       	ldd	r24, Y+4	; 0x04
     e64:	0e 94 3d 11 	call	0x227a	; 0x227a <dec_dtostr>
     e68:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     e6c:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <FlashX>
     e70:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <FlashX+0x1>
     e74:	85 36       	cpi	r24, 0x65	; 101
     e76:	91 05       	cpc	r25, r1
     e78:	20 f0       	brcs	.+8      	; 0xe82 <setAppSysDate+0x2d6>
     e7a:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <FlashX+0x1>
     e7e:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <FlashX>
     e82:	9b 99       	sbic	0x13, 3	; 19
     e84:	ba cf       	rjmp	.-140    	; 0xdfa <setAppSysDate+0x24e>
     e86:	9f ef       	ldi	r25, 0xFF	; 255
     e88:	24 e3       	ldi	r18, 0x34	; 52
     e8a:	8c e0       	ldi	r24, 0x0C	; 12
     e8c:	91 50       	subi	r25, 0x01	; 1
     e8e:	20 40       	sbci	r18, 0x00	; 0
     e90:	80 40       	sbci	r24, 0x00	; 0
     e92:	e1 f7       	brne	.-8      	; 0xe8c <setAppSysDate+0x2e0>
     e94:	00 c0       	rjmp	.+0      	; 0xe96 <setAppSysDate+0x2ea>
     e96:	00 00       	nop
     e98:	2e 81       	ldd	r18, Y+6	; 0x06
     e9a:	3f 81       	ldd	r19, Y+7	; 0x07
     e9c:	4b 81       	ldd	r20, Y+3	; 0x03
     e9e:	6d 81       	ldd	r22, Y+5	; 0x05
     ea0:	8c 81       	ldd	r24, Y+4	; 0x04
     ea2:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <RX8564_set_Date>
     ea6:	61 e0       	ldi	r22, 0x01	; 1
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
     eae:	86 e7       	ldi	r24, 0x76	; 118
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
     eb6:	9f ef       	ldi	r25, 0xFF	; 255
     eb8:	22 e5       	ldi	r18, 0x52	; 82
     eba:	87 e0       	ldi	r24, 0x07	; 7
     ebc:	91 50       	subi	r25, 0x01	; 1
     ebe:	20 40       	sbci	r18, 0x00	; 0
     ec0:	80 40       	sbci	r24, 0x00	; 0
     ec2:	e1 f7       	brne	.-8      	; 0xebc <setAppSysDate+0x310>
     ec4:	00 c0       	rjmp	.+0      	; 0xec6 <setAppSysDate+0x31a>
     ec6:	00 00       	nop
     ec8:	10 92 25 03 	sts	0x0325, r1	; 0x800325 <APP+0x2e>
     ecc:	df 91       	pop	r29
     ece:	cf 91       	pop	r28
     ed0:	0f 91       	pop	r16
     ed2:	ff 90       	pop	r15
     ed4:	ef 90       	pop	r14
     ed6:	df 90       	pop	r13
     ed8:	cf 90       	pop	r12
     eda:	08 95       	ret

00000edc <CompareSwitchTime>:
     edc:	7f 92       	push	r7
     ede:	8f 92       	push	r8
     ee0:	9f 92       	push	r9
     ee2:	af 92       	push	r10
     ee4:	bf 92       	push	r11
     ee6:	cf 92       	push	r12
     ee8:	df 92       	push	r13
     eea:	ef 92       	push	r14
     eec:	ff 92       	push	r15
     eee:	0f 93       	push	r16
     ef0:	1f 93       	push	r17
     ef2:	cf 93       	push	r28
     ef4:	df 93       	push	r29
     ef6:	8c 01       	movw	r16, r24
     ef8:	7b 01       	movw	r14, r22
     efa:	fb 01       	movw	r30, r22
     efc:	b2 80       	ldd	r11, Z+2	; 0x02
     efe:	a0 90 e7 02 	lds	r10, 0x02E7	; 0x8002e7 <SwitchEnableOn.2713>
     f02:	6c 01       	movw	r12, r24
     f04:	f0 e1       	ldi	r31, 0x10	; 16
     f06:	cf 0e       	add	r12, r31
     f08:	d1 1c       	adc	r13, r1
     f0a:	c0 e0       	ldi	r28, 0x00	; 0
     f0c:	d0 e0       	ldi	r29, 0x00	; 0
     f0e:	88 24       	eor	r8, r8
     f10:	83 94       	inc	r8
     f12:	91 2c       	mov	r9, r1
     f14:	f6 01       	movw	r30, r12
     f16:	81 91       	ld	r24, Z+
     f18:	6f 01       	movw	r12, r30
     f1a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DecToBcd>
     f1e:	8b 11       	cpse	r24, r11
     f20:	18 c0       	rjmp	.+48     	; 0xf52 <CompareSwitchTime+0x76>
     f22:	f6 01       	movw	r30, r12
     f24:	81 85       	ldd	r24, Z+9	; 0x09
     f26:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DecToBcd>
     f2a:	f7 01       	movw	r30, r14
     f2c:	91 81       	ldd	r25, Z+1	; 0x01
     f2e:	89 13       	cpse	r24, r25
     f30:	10 c0       	rjmp	.+32     	; 0xf52 <CompareSwitchTime+0x76>
     f32:	f6 01       	movw	r30, r12
     f34:	83 89       	ldd	r24, Z+19	; 0x13
     f36:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DecToBcd>
     f3a:	f7 01       	movw	r30, r14
     f3c:	90 81       	ld	r25, Z
     f3e:	89 13       	cpse	r24, r25
     f40:	08 c0       	rjmp	.+16     	; 0xf52 <CompareSwitchTime+0x76>
     f42:	c4 01       	movw	r24, r8
     f44:	0c 2e       	mov	r0, r28
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <CompareSwitchTime+0x70>
     f48:	88 0f       	add	r24, r24
     f4a:	99 1f       	adc	r25, r25
     f4c:	0a 94       	dec	r0
     f4e:	e2 f7       	brpl	.-8      	; 0xf48 <CompareSwitchTime+0x6c>
     f50:	a8 2a       	or	r10, r24
     f52:	21 96       	adiw	r28, 0x01	; 1
     f54:	c3 30       	cpi	r28, 0x03	; 3
     f56:	d1 05       	cpc	r29, r1
     f58:	e9 f6       	brne	.-70     	; 0xf14 <CompareSwitchTime+0x38>
     f5a:	0b 5e       	subi	r16, 0xEB	; 235
     f5c:	1f 4f       	sbci	r17, 0xFF	; 255
     f5e:	c0 e0       	ldi	r28, 0x00	; 0
     f60:	d0 e0       	ldi	r29, 0x00	; 0
     f62:	cc 24       	eor	r12, r12
     f64:	c3 94       	inc	r12
     f66:	d1 2c       	mov	r13, r1
     f68:	f8 01       	movw	r30, r16
     f6a:	81 91       	ld	r24, Z+
     f6c:	8f 01       	movw	r16, r30
     f6e:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DecToBcd>
     f72:	b8 12       	cpse	r11, r24
     f74:	19 c0       	rjmp	.+50     	; 0xfa8 <CompareSwitchTime+0xcc>
     f76:	f8 01       	movw	r30, r16
     f78:	81 85       	ldd	r24, Z+9	; 0x09
     f7a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DecToBcd>
     f7e:	f7 01       	movw	r30, r14
     f80:	91 81       	ldd	r25, Z+1	; 0x01
     f82:	89 13       	cpse	r24, r25
     f84:	11 c0       	rjmp	.+34     	; 0xfa8 <CompareSwitchTime+0xcc>
     f86:	f8 01       	movw	r30, r16
     f88:	83 89       	ldd	r24, Z+19	; 0x13
     f8a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DecToBcd>
     f8e:	f7 01       	movw	r30, r14
     f90:	90 81       	ld	r25, Z
     f92:	89 13       	cpse	r24, r25
     f94:	09 c0       	rjmp	.+18     	; 0xfa8 <CompareSwitchTime+0xcc>
     f96:	c6 01       	movw	r24, r12
     f98:	0c 2e       	mov	r0, r28
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <CompareSwitchTime+0xc4>
     f9c:	88 0f       	add	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	0a 94       	dec	r0
     fa2:	e2 f7       	brpl	.-8      	; 0xf9c <CompareSwitchTime+0xc0>
     fa4:	80 95       	com	r24
     fa6:	a8 22       	and	r10, r24
     fa8:	21 96       	adiw	r28, 0x01	; 1
     faa:	c3 30       	cpi	r28, 0x03	; 3
     fac:	d1 05       	cpc	r29, r1
     fae:	e1 f6       	brne	.-72     	; 0xf68 <CompareSwitchTime+0x8c>
     fb0:	a0 92 e7 02 	sts	0x02E7, r10	; 0x8002e7 <SwitchEnableOn.2713>
     fb4:	8a 2d       	mov	r24, r10
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	ff 90       	pop	r15
     fc0:	ef 90       	pop	r14
     fc2:	df 90       	pop	r13
     fc4:	cf 90       	pop	r12
     fc6:	bf 90       	pop	r11
     fc8:	af 90       	pop	r10
     fca:	9f 90       	pop	r9
     fcc:	8f 90       	pop	r8
     fce:	7f 90       	pop	r7
     fd0:	08 95       	ret

00000fd2 <CompareSwitchTime_>:
     fd2:	fc 01       	movw	r30, r24
     fd4:	70 96       	adiw	r30, 0x10	; 16
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	80 e0       	ldi	r24, 0x00	; 0
     fdc:	61 e0       	ldi	r22, 0x01	; 1
     fde:	70 e0       	ldi	r23, 0x00	; 0
     fe0:	41 91       	ld	r20, Z+
     fe2:	94 81       	ldd	r25, Z+4	; 0x04
     fe4:	49 13       	cpse	r20, r25
     fe6:	10 c0       	rjmp	.+32     	; 0x1008 <CompareSwitchTime_+0x36>
     fe8:	41 85       	ldd	r20, Z+9	; 0x09
     fea:	96 85       	ldd	r25, Z+14	; 0x0e
     fec:	49 13       	cpse	r20, r25
     fee:	0c c0       	rjmp	.+24     	; 0x1008 <CompareSwitchTime_+0x36>
     ff0:	43 89       	ldd	r20, Z+19	; 0x13
     ff2:	90 8d       	ldd	r25, Z+24	; 0x18
     ff4:	49 13       	cpse	r20, r25
     ff6:	08 c0       	rjmp	.+16     	; 0x1008 <CompareSwitchTime_+0x36>
     ff8:	db 01       	movw	r26, r22
     ffa:	02 2e       	mov	r0, r18
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <CompareSwitchTime_+0x30>
     ffe:	aa 0f       	add	r26, r26
    1000:	bb 1f       	adc	r27, r27
    1002:	0a 94       	dec	r0
    1004:	e2 f7       	brpl	.-8      	; 0xffe <CompareSwitchTime_+0x2c>
    1006:	8a 2b       	or	r24, r26
    1008:	2f 5f       	subi	r18, 0xFF	; 255
    100a:	3f 4f       	sbci	r19, 0xFF	; 255
    100c:	23 30       	cpi	r18, 0x03	; 3
    100e:	31 05       	cpc	r19, r1
    1010:	39 f7       	brne	.-50     	; 0xfe0 <CompareSwitchTime_+0xe>
    1012:	08 95       	ret

00001014 <checkSwitchTime>:
    1014:	6f e2       	ldi	r22, 0x2F	; 47
    1016:	73 e0       	ldi	r23, 0x03	; 3
    1018:	87 ef       	ldi	r24, 0xF7	; 247
    101a:	92 e0       	ldi	r25, 0x02	; 2
    101c:	0e 94 6e 07 	call	0xedc	; 0xedc <CompareSwitchTime>
    1020:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <APP+0x31>
    1024:	80 fd       	sbrc	r24, 0
    1026:	04 c0       	rjmp	.+8      	; 0x1030 <checkSwitchTime+0x1c>
    1028:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <APP+0x34>
    102c:	85 ff       	sbrs	r24, 5
    102e:	05 c0       	rjmp	.+10     	; 0x103a <checkSwitchTime+0x26>
    1030:	85 e0       	ldi	r24, 0x05	; 5
    1032:	80 93 f1 02 	sts	0x02F1, r24	; 0x8002f1 <Pwm+0x2>
    1036:	c2 98       	cbi	0x18, 2	; 24
    1038:	03 c0       	rjmp	.+6      	; 0x1040 <checkSwitchTime+0x2c>
    103a:	10 92 f1 02 	sts	0x02F1, r1	; 0x8002f1 <Pwm+0x2>
    103e:	c2 9a       	sbi	0x18, 2	; 24
    1040:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <APP+0x31>
    1044:	81 fd       	sbrc	r24, 1
    1046:	04 c0       	rjmp	.+8      	; 0x1050 <checkSwitchTime+0x3c>
    1048:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <APP+0x34>
    104c:	86 ff       	sbrs	r24, 6
    104e:	05 c0       	rjmp	.+10     	; 0x105a <checkSwitchTime+0x46>
    1050:	85 e0       	ldi	r24, 0x05	; 5
    1052:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <Pwm+0x3>
    1056:	c3 98       	cbi	0x18, 3	; 24
    1058:	03 c0       	rjmp	.+6      	; 0x1060 <checkSwitchTime+0x4c>
    105a:	10 92 f2 02 	sts	0x02F2, r1	; 0x8002f2 <Pwm+0x3>
    105e:	c3 9a       	sbi	0x18, 3	; 24
    1060:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <APP+0x31>
    1064:	82 fd       	sbrc	r24, 2
    1066:	04 c0       	rjmp	.+8      	; 0x1070 <checkSwitchTime+0x5c>
    1068:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <APP+0x34>
    106c:	88 23       	and	r24, r24
    106e:	2c f4       	brge	.+10     	; 0x107a <checkSwitchTime+0x66>
    1070:	85 e0       	ldi	r24, 0x05	; 5
    1072:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <Pwm+0x4>
    1076:	c4 98       	cbi	0x18, 4	; 24
    1078:	08 95       	ret
    107a:	10 92 f3 02 	sts	0x02F3, r1	; 0x8002f3 <Pwm+0x4>
    107e:	c4 9a       	sbi	0x18, 4	; 24
    1080:	08 95       	ret

00001082 <lcdMenue>:
    1082:	df 92       	push	r13
    1084:	ef 92       	push	r14
    1086:	ff 92       	push	r15
    1088:	0f 93       	push	r16
    108a:	1f 93       	push	r17
    108c:	cf 93       	push	r28
    108e:	df 93       	push	r29
    1090:	eb 01       	movw	r28, r22
    1092:	dc 01       	movw	r26, r24
    1094:	ec 91       	ld	r30, X
    1096:	4e 2f       	mov	r20, r30
    1098:	ee 0f       	add	r30, r30
    109a:	55 0b       	sbc	r21, r21
    109c:	66 0b       	sbc	r22, r22
    109e:	77 0b       	sbc	r23, r23
    10a0:	49 30       	cpi	r20, 0x09	; 9
    10a2:	51 05       	cpc	r21, r1
    10a4:	08 f0       	brcs	.+2      	; 0x10a8 <lcdMenue+0x26>
    10a6:	7a c3       	rjmp	.+1780   	; 0x179c <lcdMenue+0x71a>
    10a8:	8c 01       	movw	r16, r24
    10aa:	fa 01       	movw	r30, r20
    10ac:	e6 5d       	subi	r30, 0xD6	; 214
    10ae:	ff 4f       	sbci	r31, 0xFF	; 255
    10b0:	0c 94 31 12 	jmp	0x2462	; 0x2462 <__tablejump2__>
    10b4:	60 e0       	ldi	r22, 0x00	; 0
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    10bc:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <APP+0x36>
    10c0:	86 30       	cpi	r24, 0x06	; 6
    10c2:	58 f4       	brcc	.+22     	; 0x10da <lcdMenue+0x58>
    10c4:	4e 81       	ldd	r20, Y+6	; 0x06
    10c6:	5f 81       	ldd	r21, Y+7	; 0x07
    10c8:	40 53       	subi	r20, 0x30	; 48
    10ca:	58 4f       	sbci	r21, 0xF8	; 248
    10cc:	2d 81       	ldd	r18, Y+5	; 0x05
    10ce:	6b 81       	ldd	r22, Y+3	; 0x03
    10d0:	8c 81       	ldd	r24, Y+4	; 0x04
    10d2:	0e 94 a6 10 	call	0x214c	; 0x214c <bcd_dtostr>
    10d6:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    10da:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <APP+0x36>
    10de:	8a 50       	subi	r24, 0x0A	; 10
    10e0:	82 30       	cpi	r24, 0x02	; 2
    10e2:	20 f4       	brcc	.+8      	; 0x10ec <lcdMenue+0x6a>
    10e4:	83 e9       	ldi	r24, 0x93	; 147
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    10ec:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <APP+0x36>
    10f0:	8c 50       	subi	r24, 0x0C	; 12
    10f2:	82 30       	cpi	r24, 0x02	; 2
    10f4:	20 f4       	brcc	.+8      	; 0x10fe <lcdMenue+0x7c>
    10f6:	84 ea       	ldi	r24, 0xA4	; 164
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    10fe:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <APP+0x36>
    1102:	8e 30       	cpi	r24, 0x0E	; 14
    1104:	10 f0       	brcs	.+4      	; 0x110a <lcdMenue+0x88>
    1106:	10 92 2d 03 	sts	0x032D, r1	; 0x80032d <APP+0x36>
    110a:	61 e0       	ldi	r22, 0x01	; 1
    110c:	80 e0       	ldi	r24, 0x00	; 0
    110e:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    1112:	48 81       	ld	r20, Y
    1114:	69 81       	ldd	r22, Y+1	; 0x01
    1116:	8a 81       	ldd	r24, Y+2	; 0x02
    1118:	0e 94 14 10 	call	0x2028	; 0x2028 <bcd_ttostr>
    111c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1120:	3d c3       	rjmp	.+1658   	; 0x179c <lcdMenue+0x71a>
    1122:	60 e0       	ldi	r22, 0x00	; 0
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    112a:	85 eb       	ldi	r24, 0xB5	; 181
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1132:	61 e0       	ldi	r22, 0x01	; 1
    1134:	80 e0       	ldi	r24, 0x00	; 0
    1136:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    113a:	86 ec       	ldi	r24, 0xC6	; 198
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1142:	9b 99       	sbic	0x13, 3	; 19
    1144:	2b c3       	rjmp	.+1622   	; 0x179c <lcdMenue+0x71a>
    1146:	bf ef       	ldi	r27, 0xFF	; 255
    1148:	e4 e3       	ldi	r30, 0x34	; 52
    114a:	fc e0       	ldi	r31, 0x0C	; 12
    114c:	b1 50       	subi	r27, 0x01	; 1
    114e:	e0 40       	sbci	r30, 0x00	; 0
    1150:	f0 40       	sbci	r31, 0x00	; 0
    1152:	e1 f7       	brne	.-8      	; 0x114c <lcdMenue+0xca>
    1154:	00 c0       	rjmp	.+0      	; 0x1156 <lcdMenue+0xd4>
    1156:	00 00       	nop
    1158:	ce 01       	movw	r24, r28
    115a:	0e 94 b3 04 	call	0x966	; 0x966 <setAppSysTime>
    115e:	d8 01       	movw	r26, r16
    1160:	1c 92       	st	X, r1
    1162:	1c c3       	rjmp	.+1592   	; 0x179c <lcdMenue+0x71a>
    1164:	60 e0       	ldi	r22, 0x00	; 0
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    116c:	85 eb       	ldi	r24, 0xB5	; 181
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1174:	61 e0       	ldi	r22, 0x01	; 1
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    117c:	87 ed       	ldi	r24, 0xD7	; 215
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1184:	9b 99       	sbic	0x13, 3	; 19
    1186:	0c c0       	rjmp	.+24     	; 0x11a0 <lcdMenue+0x11e>
    1188:	bf ef       	ldi	r27, 0xFF	; 255
    118a:	e4 e3       	ldi	r30, 0x34	; 52
    118c:	fc e0       	ldi	r31, 0x0C	; 12
    118e:	b1 50       	subi	r27, 0x01	; 1
    1190:	e0 40       	sbci	r30, 0x00	; 0
    1192:	f0 40       	sbci	r31, 0x00	; 0
    1194:	e1 f7       	brne	.-8      	; 0x118e <lcdMenue+0x10c>
    1196:	00 c0       	rjmp	.+0      	; 0x1198 <lcdMenue+0x116>
    1198:	00 00       	nop
    119a:	ce 01       	movw	r24, r28
    119c:	0e 94 d6 05 	call	0xbac	; 0xbac <setAppSysDate>
    11a0:	82 e0       	ldi	r24, 0x02	; 2
    11a2:	d8 01       	movw	r26, r16
    11a4:	8c 93       	st	X, r24
    11a6:	fa c2       	rjmp	.+1524   	; 0x179c <lcdMenue+0x71a>
    11a8:	60 e0       	ldi	r22, 0x00	; 0
    11aa:	80 e0       	ldi	r24, 0x00	; 0
    11ac:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    11b0:	85 eb       	ldi	r24, 0xB5	; 181
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    11b8:	61 e0       	ldi	r22, 0x01	; 1
    11ba:	80 e0       	ldi	r24, 0x00	; 0
    11bc:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    11c0:	88 ee       	ldi	r24, 0xE8	; 232
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    11c8:	9b 99       	sbic	0x13, 3	; 19
    11ca:	e8 c2       	rjmp	.+1488   	; 0x179c <lcdMenue+0x71a>
    11cc:	bf ef       	ldi	r27, 0xFF	; 255
    11ce:	e4 e3       	ldi	r30, 0x34	; 52
    11d0:	fc e0       	ldi	r31, 0x0C	; 12
    11d2:	b1 50       	subi	r27, 0x01	; 1
    11d4:	e0 40       	sbci	r30, 0x00	; 0
    11d6:	f0 40       	sbci	r31, 0x00	; 0
    11d8:	e1 f7       	brne	.-8      	; 0x11d2 <lcdMenue+0x150>
    11da:	00 c0       	rjmp	.+0      	; 0x11dc <lcdMenue+0x15a>
    11dc:	00 00       	nop
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <APP+0x35>
    11e4:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <Time+0x5>
    11e8:	c7 ef       	ldi	r28, 0xF7	; 247
    11ea:	d2 e0       	ldi	r29, 0x02	; 2
    11ec:	ff 24       	eor	r15, r15
    11ee:	f3 94       	inc	r15
    11f0:	0f 2e       	mov	r0, r31
    11f2:	f5 e0       	ldi	r31, 0x05	; 5
    11f4:	ef 2e       	mov	r14, r31
    11f6:	f0 2d       	mov	r31, r0
    11f8:	0e e3       	ldi	r16, 0x3E	; 62
    11fa:	13 e0       	ldi	r17, 0x03	; 3
    11fc:	68 94       	set
    11fe:	dd 24       	eor	r13, r13
    1200:	d5 f8       	bld	r13, 5
    1202:	86 ef       	ldi	r24, 0xF6	; 246
    1204:	92 e0       	ldi	r25, 0x02	; 2
    1206:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
    120a:	9d a9       	ldd	r25, Y+53	; 0x35
    120c:	89 0f       	add	r24, r25
    120e:	8d ab       	std	Y+53, r24	; 0x35
    1210:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
    1214:	86 30       	cpi	r24, 0x06	; 6
    1216:	14 f0       	brlt	.+4      	; 0x121c <lcdMenue+0x19a>
    1218:	ed aa       	std	Y+53, r14	; 0x35
    121a:	03 c0       	rjmp	.+6      	; 0x1222 <lcdMenue+0x1a0>
    121c:	18 16       	cp	r1, r24
    121e:	0c f0       	brlt	.+2      	; 0x1222 <lcdMenue+0x1a0>
    1220:	fd aa       	std	Y+53, r15	; 0x35
    1222:	6f 2d       	mov	r22, r15
    1224:	80 e0       	ldi	r24, 0x00	; 0
    1226:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    122a:	8d a9       	ldd	r24, Y+53	; 0x35
    122c:	81 30       	cpi	r24, 0x01	; 1
    122e:	b1 f4       	brne	.+44     	; 0x125c <lcdMenue+0x1da>
    1230:	89 ef       	ldi	r24, 0xF9	; 249
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1238:	9b 99       	sbic	0x13, 3	; 19
    123a:	10 c0       	rjmp	.+32     	; 0x125c <lcdMenue+0x1da>
    123c:	2f ef       	ldi	r18, 0xFF	; 255
    123e:	84 e3       	ldi	r24, 0x34	; 52
    1240:	9c e0       	ldi	r25, 0x0C	; 12
    1242:	21 50       	subi	r18, 0x01	; 1
    1244:	80 40       	sbci	r24, 0x00	; 0
    1246:	90 40       	sbci	r25, 0x00	; 0
    1248:	e1 f7       	brne	.-8      	; 0x1242 <lcdMenue+0x1c0>
    124a:	00 c0       	rjmp	.+0      	; 0x124c <lcdMenue+0x1ca>
    124c:	00 00       	nop
    124e:	6f 2d       	mov	r22, r15
    1250:	80 e0       	ldi	r24, 0x00	; 0
    1252:	0e 94 f7 01 	call	0x3ee	; 0x3ee <setSwitchTimeEEP>
    1256:	d8 01       	movw	r26, r16
    1258:	15 96       	adiw	r26, 0x05	; 5
    125a:	1c 92       	st	X, r1
    125c:	8d a9       	ldd	r24, Y+53	; 0x35
    125e:	82 30       	cpi	r24, 0x02	; 2
    1260:	b1 f4       	brne	.+44     	; 0x128e <lcdMenue+0x20c>
    1262:	8a e0       	ldi	r24, 0x0A	; 10
    1264:	91 e0       	ldi	r25, 0x01	; 1
    1266:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    126a:	9b 99       	sbic	0x13, 3	; 19
    126c:	10 c0       	rjmp	.+32     	; 0x128e <lcdMenue+0x20c>
    126e:	bf ef       	ldi	r27, 0xFF	; 255
    1270:	e4 e3       	ldi	r30, 0x34	; 52
    1272:	fc e0       	ldi	r31, 0x0C	; 12
    1274:	b1 50       	subi	r27, 0x01	; 1
    1276:	e0 40       	sbci	r30, 0x00	; 0
    1278:	f0 40       	sbci	r31, 0x00	; 0
    127a:	e1 f7       	brne	.-8      	; 0x1274 <lcdMenue+0x1f2>
    127c:	00 c0       	rjmp	.+0      	; 0x127e <lcdMenue+0x1fc>
    127e:	00 00       	nop
    1280:	60 e0       	ldi	r22, 0x00	; 0
    1282:	80 e0       	ldi	r24, 0x00	; 0
    1284:	0e 94 f7 01 	call	0x3ee	; 0x3ee <setSwitchTimeEEP>
    1288:	d8 01       	movw	r26, r16
    128a:	15 96       	adiw	r26, 0x05	; 5
    128c:	1c 92       	st	X, r1
    128e:	8d a9       	ldd	r24, Y+53	; 0x35
    1290:	83 30       	cpi	r24, 0x03	; 3
    1292:	01 f5       	brne	.+64     	; 0x12d4 <lcdMenue+0x252>
    1294:	9b 99       	sbic	0x13, 3	; 19
    1296:	12 c0       	rjmp	.+36     	; 0x12bc <lcdMenue+0x23a>
    1298:	bf ef       	ldi	r27, 0xFF	; 255
    129a:	e2 e5       	ldi	r30, 0x52	; 82
    129c:	f7 e0       	ldi	r31, 0x07	; 7
    129e:	b1 50       	subi	r27, 0x01	; 1
    12a0:	e0 40       	sbci	r30, 0x00	; 0
    12a2:	f0 40       	sbci	r31, 0x00	; 0
    12a4:	e1 f7       	brne	.-8      	; 0x129e <lcdMenue+0x21c>
    12a6:	00 c0       	rjmp	.+0      	; 0x12a8 <lcdMenue+0x226>
    12a8:	00 00       	nop
    12aa:	6f 2d       	mov	r22, r15
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    12b2:	8c a9       	ldd	r24, Y+52	; 0x34
    12b4:	8d 25       	eor	r24, r13
    12b6:	8c ab       	std	Y+52, r24	; 0x34
    12b8:	0e 94 0a 08 	call	0x1014	; 0x1014 <checkSwitchTime>
    12bc:	8c a9       	ldd	r24, Y+52	; 0x34
    12be:	85 ff       	sbrs	r24, 5
    12c0:	05 c0       	rjmp	.+10     	; 0x12cc <lcdMenue+0x24a>
    12c2:	8b e1       	ldi	r24, 0x1B	; 27
    12c4:	91 e0       	ldi	r25, 0x01	; 1
    12c6:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    12ca:	04 c0       	rjmp	.+8      	; 0x12d4 <lcdMenue+0x252>
    12cc:	8c e2       	ldi	r24, 0x2C	; 44
    12ce:	91 e0       	ldi	r25, 0x01	; 1
    12d0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    12d4:	8d a9       	ldd	r24, Y+53	; 0x35
    12d6:	84 30       	cpi	r24, 0x04	; 4
    12d8:	91 f4       	brne	.+36     	; 0x12fe <lcdMenue+0x27c>
    12da:	6f 2d       	mov	r22, r15
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    12e2:	ce 01       	movw	r24, r28
    12e4:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <CompareSwitchTime_>
    12e8:	80 ff       	sbrs	r24, 0
    12ea:	05 c0       	rjmp	.+10     	; 0x12f6 <lcdMenue+0x274>
    12ec:	8d e3       	ldi	r24, 0x3D	; 61
    12ee:	91 e0       	ldi	r25, 0x01	; 1
    12f0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    12f4:	04 c0       	rjmp	.+8      	; 0x12fe <lcdMenue+0x27c>
    12f6:	8e e4       	ldi	r24, 0x4E	; 78
    12f8:	91 e0       	ldi	r25, 0x01	; 1
    12fa:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    12fe:	8d a9       	ldd	r24, Y+53	; 0x35
    1300:	85 30       	cpi	r24, 0x05	; 5
    1302:	81 f4       	brne	.+32     	; 0x1324 <lcdMenue+0x2a2>
    1304:	8f e5       	ldi	r24, 0x5F	; 95
    1306:	91 e0       	ldi	r25, 0x01	; 1
    1308:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    130c:	9b 99       	sbic	0x13, 3	; 19
    130e:	0a c0       	rjmp	.+20     	; 0x1324 <lcdMenue+0x2a2>
    1310:	2f ef       	ldi	r18, 0xFF	; 255
    1312:	84 e3       	ldi	r24, 0x34	; 52
    1314:	9c e0       	ldi	r25, 0x0C	; 12
    1316:	21 50       	subi	r18, 0x01	; 1
    1318:	80 40       	sbci	r24, 0x00	; 0
    131a:	90 40       	sbci	r25, 0x00	; 0
    131c:	e1 f7       	brne	.-8      	; 0x1316 <lcdMenue+0x294>
    131e:	00 c0       	rjmp	.+0      	; 0x1320 <lcdMenue+0x29e>
    1320:	00 00       	nop
    1322:	3c c2       	rjmp	.+1144   	; 0x179c <lcdMenue+0x71a>
    1324:	d8 01       	movw	r26, r16
    1326:	15 96       	adiw	r26, 0x05	; 5
    1328:	8c 91       	ld	r24, X
    132a:	8f 30       	cpi	r24, 0x0F	; 15
    132c:	08 f4       	brcc	.+2      	; 0x1330 <lcdMenue+0x2ae>
    132e:	69 cf       	rjmp	.-302    	; 0x1202 <lcdMenue+0x180>
    1330:	35 c2       	rjmp	.+1130   	; 0x179c <lcdMenue+0x71a>
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	80 e0       	ldi	r24, 0x00	; 0
    1336:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    133a:	85 eb       	ldi	r24, 0xB5	; 181
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1342:	61 e0       	ldi	r22, 0x01	; 1
    1344:	80 e0       	ldi	r24, 0x00	; 0
    1346:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    134a:	80 e7       	ldi	r24, 0x70	; 112
    134c:	91 e0       	ldi	r25, 0x01	; 1
    134e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1352:	9b 99       	sbic	0x13, 3	; 19
    1354:	23 c2       	rjmp	.+1094   	; 0x179c <lcdMenue+0x71a>
    1356:	bf ef       	ldi	r27, 0xFF	; 255
    1358:	e4 e3       	ldi	r30, 0x34	; 52
    135a:	fc e0       	ldi	r31, 0x0C	; 12
    135c:	b1 50       	subi	r27, 0x01	; 1
    135e:	e0 40       	sbci	r30, 0x00	; 0
    1360:	f0 40       	sbci	r31, 0x00	; 0
    1362:	e1 f7       	brne	.-8      	; 0x135c <lcdMenue+0x2da>
    1364:	00 c0       	rjmp	.+0      	; 0x1366 <lcdMenue+0x2e4>
    1366:	00 00       	nop
    1368:	81 e0       	ldi	r24, 0x01	; 1
    136a:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <APP+0x35>
    136e:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <Time+0x5>
    1372:	c7 ef       	ldi	r28, 0xF7	; 247
    1374:	d2 e0       	ldi	r29, 0x02	; 2
    1376:	ff 24       	eor	r15, r15
    1378:	f3 94       	inc	r15
    137a:	0f 2e       	mov	r0, r31
    137c:	f5 e0       	ldi	r31, 0x05	; 5
    137e:	ef 2e       	mov	r14, r31
    1380:	f0 2d       	mov	r31, r0
    1382:	0e e3       	ldi	r16, 0x3E	; 62
    1384:	13 e0       	ldi	r17, 0x03	; 3
    1386:	68 94       	set
    1388:	dd 24       	eor	r13, r13
    138a:	d6 f8       	bld	r13, 6
    138c:	86 ef       	ldi	r24, 0xF6	; 246
    138e:	92 e0       	ldi	r25, 0x02	; 2
    1390:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
    1394:	9d a9       	ldd	r25, Y+53	; 0x35
    1396:	89 0f       	add	r24, r25
    1398:	8d ab       	std	Y+53, r24	; 0x35
    139a:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
    139e:	86 30       	cpi	r24, 0x06	; 6
    13a0:	14 f0       	brlt	.+4      	; 0x13a6 <lcdMenue+0x324>
    13a2:	ed aa       	std	Y+53, r14	; 0x35
    13a4:	03 c0       	rjmp	.+6      	; 0x13ac <lcdMenue+0x32a>
    13a6:	18 16       	cp	r1, r24
    13a8:	0c f0       	brlt	.+2      	; 0x13ac <lcdMenue+0x32a>
    13aa:	fd aa       	std	Y+53, r15	; 0x35
    13ac:	6f 2d       	mov	r22, r15
    13ae:	80 e0       	ldi	r24, 0x00	; 0
    13b0:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    13b4:	8d a9       	ldd	r24, Y+53	; 0x35
    13b6:	81 30       	cpi	r24, 0x01	; 1
    13b8:	b1 f4       	brne	.+44     	; 0x13e6 <lcdMenue+0x364>
    13ba:	89 ef       	ldi	r24, 0xF9	; 249
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    13c2:	9b 99       	sbic	0x13, 3	; 19
    13c4:	10 c0       	rjmp	.+32     	; 0x13e6 <lcdMenue+0x364>
    13c6:	2f ef       	ldi	r18, 0xFF	; 255
    13c8:	84 e3       	ldi	r24, 0x34	; 52
    13ca:	9c e0       	ldi	r25, 0x0C	; 12
    13cc:	21 50       	subi	r18, 0x01	; 1
    13ce:	80 40       	sbci	r24, 0x00	; 0
    13d0:	90 40       	sbci	r25, 0x00	; 0
    13d2:	e1 f7       	brne	.-8      	; 0x13cc <lcdMenue+0x34a>
    13d4:	00 c0       	rjmp	.+0      	; 0x13d6 <lcdMenue+0x354>
    13d6:	00 00       	nop
    13d8:	6f 2d       	mov	r22, r15
    13da:	8f 2d       	mov	r24, r15
    13dc:	0e 94 f7 01 	call	0x3ee	; 0x3ee <setSwitchTimeEEP>
    13e0:	d8 01       	movw	r26, r16
    13e2:	15 96       	adiw	r26, 0x05	; 5
    13e4:	1c 92       	st	X, r1
    13e6:	8d a9       	ldd	r24, Y+53	; 0x35
    13e8:	82 30       	cpi	r24, 0x02	; 2
    13ea:	b1 f4       	brne	.+44     	; 0x1418 <lcdMenue+0x396>
    13ec:	8a e0       	ldi	r24, 0x0A	; 10
    13ee:	91 e0       	ldi	r25, 0x01	; 1
    13f0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    13f4:	9b 99       	sbic	0x13, 3	; 19
    13f6:	10 c0       	rjmp	.+32     	; 0x1418 <lcdMenue+0x396>
    13f8:	bf ef       	ldi	r27, 0xFF	; 255
    13fa:	e4 e3       	ldi	r30, 0x34	; 52
    13fc:	fc e0       	ldi	r31, 0x0C	; 12
    13fe:	b1 50       	subi	r27, 0x01	; 1
    1400:	e0 40       	sbci	r30, 0x00	; 0
    1402:	f0 40       	sbci	r31, 0x00	; 0
    1404:	e1 f7       	brne	.-8      	; 0x13fe <lcdMenue+0x37c>
    1406:	00 c0       	rjmp	.+0      	; 0x1408 <lcdMenue+0x386>
    1408:	00 00       	nop
    140a:	60 e0       	ldi	r22, 0x00	; 0
    140c:	8f 2d       	mov	r24, r15
    140e:	0e 94 f7 01 	call	0x3ee	; 0x3ee <setSwitchTimeEEP>
    1412:	d8 01       	movw	r26, r16
    1414:	15 96       	adiw	r26, 0x05	; 5
    1416:	1c 92       	st	X, r1
    1418:	8d a9       	ldd	r24, Y+53	; 0x35
    141a:	83 30       	cpi	r24, 0x03	; 3
    141c:	01 f5       	brne	.+64     	; 0x145e <lcdMenue+0x3dc>
    141e:	9b 99       	sbic	0x13, 3	; 19
    1420:	12 c0       	rjmp	.+36     	; 0x1446 <lcdMenue+0x3c4>
    1422:	bf ef       	ldi	r27, 0xFF	; 255
    1424:	e2 e5       	ldi	r30, 0x52	; 82
    1426:	f7 e0       	ldi	r31, 0x07	; 7
    1428:	b1 50       	subi	r27, 0x01	; 1
    142a:	e0 40       	sbci	r30, 0x00	; 0
    142c:	f0 40       	sbci	r31, 0x00	; 0
    142e:	e1 f7       	brne	.-8      	; 0x1428 <lcdMenue+0x3a6>
    1430:	00 c0       	rjmp	.+0      	; 0x1432 <lcdMenue+0x3b0>
    1432:	00 00       	nop
    1434:	6f 2d       	mov	r22, r15
    1436:	80 e0       	ldi	r24, 0x00	; 0
    1438:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    143c:	8c a9       	ldd	r24, Y+52	; 0x34
    143e:	8d 25       	eor	r24, r13
    1440:	8c ab       	std	Y+52, r24	; 0x34
    1442:	0e 94 0a 08 	call	0x1014	; 0x1014 <checkSwitchTime>
    1446:	8c a9       	ldd	r24, Y+52	; 0x34
    1448:	86 ff       	sbrs	r24, 6
    144a:	05 c0       	rjmp	.+10     	; 0x1456 <lcdMenue+0x3d4>
    144c:	8b e1       	ldi	r24, 0x1B	; 27
    144e:	91 e0       	ldi	r25, 0x01	; 1
    1450:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1454:	04 c0       	rjmp	.+8      	; 0x145e <lcdMenue+0x3dc>
    1456:	8c e2       	ldi	r24, 0x2C	; 44
    1458:	91 e0       	ldi	r25, 0x01	; 1
    145a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    145e:	8d a9       	ldd	r24, Y+53	; 0x35
    1460:	84 30       	cpi	r24, 0x04	; 4
    1462:	91 f4       	brne	.+36     	; 0x1488 <lcdMenue+0x406>
    1464:	6f 2d       	mov	r22, r15
    1466:	80 e0       	ldi	r24, 0x00	; 0
    1468:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    146c:	ce 01       	movw	r24, r28
    146e:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <CompareSwitchTime_>
    1472:	81 ff       	sbrs	r24, 1
    1474:	05 c0       	rjmp	.+10     	; 0x1480 <lcdMenue+0x3fe>
    1476:	8d e3       	ldi	r24, 0x3D	; 61
    1478:	91 e0       	ldi	r25, 0x01	; 1
    147a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    147e:	04 c0       	rjmp	.+8      	; 0x1488 <lcdMenue+0x406>
    1480:	8e e4       	ldi	r24, 0x4E	; 78
    1482:	91 e0       	ldi	r25, 0x01	; 1
    1484:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1488:	8d a9       	ldd	r24, Y+53	; 0x35
    148a:	85 30       	cpi	r24, 0x05	; 5
    148c:	81 f4       	brne	.+32     	; 0x14ae <lcdMenue+0x42c>
    148e:	8f e5       	ldi	r24, 0x5F	; 95
    1490:	91 e0       	ldi	r25, 0x01	; 1
    1492:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1496:	9b 99       	sbic	0x13, 3	; 19
    1498:	0a c0       	rjmp	.+20     	; 0x14ae <lcdMenue+0x42c>
    149a:	2f ef       	ldi	r18, 0xFF	; 255
    149c:	84 e3       	ldi	r24, 0x34	; 52
    149e:	9c e0       	ldi	r25, 0x0C	; 12
    14a0:	21 50       	subi	r18, 0x01	; 1
    14a2:	80 40       	sbci	r24, 0x00	; 0
    14a4:	90 40       	sbci	r25, 0x00	; 0
    14a6:	e1 f7       	brne	.-8      	; 0x14a0 <lcdMenue+0x41e>
    14a8:	00 c0       	rjmp	.+0      	; 0x14aa <lcdMenue+0x428>
    14aa:	00 00       	nop
    14ac:	77 c1       	rjmp	.+750    	; 0x179c <lcdMenue+0x71a>
    14ae:	d8 01       	movw	r26, r16
    14b0:	15 96       	adiw	r26, 0x05	; 5
    14b2:	8c 91       	ld	r24, X
    14b4:	8f 30       	cpi	r24, 0x0F	; 15
    14b6:	08 f4       	brcc	.+2      	; 0x14ba <lcdMenue+0x438>
    14b8:	69 cf       	rjmp	.-302    	; 0x138c <lcdMenue+0x30a>
    14ba:	70 c1       	rjmp	.+736    	; 0x179c <lcdMenue+0x71a>
    14bc:	60 e0       	ldi	r22, 0x00	; 0
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    14c4:	85 eb       	ldi	r24, 0xB5	; 181
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    14cc:	61 e0       	ldi	r22, 0x01	; 1
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    14d4:	81 e8       	ldi	r24, 0x81	; 129
    14d6:	91 e0       	ldi	r25, 0x01	; 1
    14d8:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    14dc:	9b 99       	sbic	0x13, 3	; 19
    14de:	5e c1       	rjmp	.+700    	; 0x179c <lcdMenue+0x71a>
    14e0:	bf ef       	ldi	r27, 0xFF	; 255
    14e2:	e4 e3       	ldi	r30, 0x34	; 52
    14e4:	fc e0       	ldi	r31, 0x0C	; 12
    14e6:	b1 50       	subi	r27, 0x01	; 1
    14e8:	e0 40       	sbci	r30, 0x00	; 0
    14ea:	f0 40       	sbci	r31, 0x00	; 0
    14ec:	e1 f7       	brne	.-8      	; 0x14e6 <lcdMenue+0x464>
    14ee:	00 c0       	rjmp	.+0      	; 0x14f0 <lcdMenue+0x46e>
    14f0:	00 00       	nop
    14f2:	81 e0       	ldi	r24, 0x01	; 1
    14f4:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <APP+0x35>
    14f8:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <Time+0x5>
    14fc:	c7 ef       	ldi	r28, 0xF7	; 247
    14fe:	d2 e0       	ldi	r29, 0x02	; 2
    1500:	ff 24       	eor	r15, r15
    1502:	f3 94       	inc	r15
    1504:	0f 2e       	mov	r0, r31
    1506:	f5 e0       	ldi	r31, 0x05	; 5
    1508:	ef 2e       	mov	r14, r31
    150a:	f0 2d       	mov	r31, r0
    150c:	0e e3       	ldi	r16, 0x3E	; 62
    150e:	13 e0       	ldi	r17, 0x03	; 3
    1510:	86 ef       	ldi	r24, 0xF6	; 246
    1512:	92 e0       	ldi	r25, 0x02	; 2
    1514:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
    1518:	9d a9       	ldd	r25, Y+53	; 0x35
    151a:	89 0f       	add	r24, r25
    151c:	8d ab       	std	Y+53, r24	; 0x35
    151e:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>
    1522:	86 30       	cpi	r24, 0x06	; 6
    1524:	14 f0       	brlt	.+4      	; 0x152a <lcdMenue+0x4a8>
    1526:	ed aa       	std	Y+53, r14	; 0x35
    1528:	03 c0       	rjmp	.+6      	; 0x1530 <lcdMenue+0x4ae>
    152a:	18 16       	cp	r1, r24
    152c:	0c f0       	brlt	.+2      	; 0x1530 <lcdMenue+0x4ae>
    152e:	fd aa       	std	Y+53, r15	; 0x35
    1530:	6f 2d       	mov	r22, r15
    1532:	80 e0       	ldi	r24, 0x00	; 0
    1534:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    1538:	8d a9       	ldd	r24, Y+53	; 0x35
    153a:	81 30       	cpi	r24, 0x01	; 1
    153c:	b1 f4       	brne	.+44     	; 0x156a <lcdMenue+0x4e8>
    153e:	89 ef       	ldi	r24, 0xF9	; 249
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1546:	9b 99       	sbic	0x13, 3	; 19
    1548:	10 c0       	rjmp	.+32     	; 0x156a <lcdMenue+0x4e8>
    154a:	2f ef       	ldi	r18, 0xFF	; 255
    154c:	84 e3       	ldi	r24, 0x34	; 52
    154e:	9c e0       	ldi	r25, 0x0C	; 12
    1550:	21 50       	subi	r18, 0x01	; 1
    1552:	80 40       	sbci	r24, 0x00	; 0
    1554:	90 40       	sbci	r25, 0x00	; 0
    1556:	e1 f7       	brne	.-8      	; 0x1550 <lcdMenue+0x4ce>
    1558:	00 c0       	rjmp	.+0      	; 0x155a <lcdMenue+0x4d8>
    155a:	00 00       	nop
    155c:	6f 2d       	mov	r22, r15
    155e:	82 e0       	ldi	r24, 0x02	; 2
    1560:	0e 94 f7 01 	call	0x3ee	; 0x3ee <setSwitchTimeEEP>
    1564:	d8 01       	movw	r26, r16
    1566:	15 96       	adiw	r26, 0x05	; 5
    1568:	1c 92       	st	X, r1
    156a:	8d a9       	ldd	r24, Y+53	; 0x35
    156c:	82 30       	cpi	r24, 0x02	; 2
    156e:	b1 f4       	brne	.+44     	; 0x159c <lcdMenue+0x51a>
    1570:	8a e0       	ldi	r24, 0x0A	; 10
    1572:	91 e0       	ldi	r25, 0x01	; 1
    1574:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1578:	9b 99       	sbic	0x13, 3	; 19
    157a:	10 c0       	rjmp	.+32     	; 0x159c <lcdMenue+0x51a>
    157c:	bf ef       	ldi	r27, 0xFF	; 255
    157e:	e4 e3       	ldi	r30, 0x34	; 52
    1580:	fc e0       	ldi	r31, 0x0C	; 12
    1582:	b1 50       	subi	r27, 0x01	; 1
    1584:	e0 40       	sbci	r30, 0x00	; 0
    1586:	f0 40       	sbci	r31, 0x00	; 0
    1588:	e1 f7       	brne	.-8      	; 0x1582 <lcdMenue+0x500>
    158a:	00 c0       	rjmp	.+0      	; 0x158c <lcdMenue+0x50a>
    158c:	00 00       	nop
    158e:	60 e0       	ldi	r22, 0x00	; 0
    1590:	82 e0       	ldi	r24, 0x02	; 2
    1592:	0e 94 f7 01 	call	0x3ee	; 0x3ee <setSwitchTimeEEP>
    1596:	d8 01       	movw	r26, r16
    1598:	15 96       	adiw	r26, 0x05	; 5
    159a:	1c 92       	st	X, r1
    159c:	8d a9       	ldd	r24, Y+53	; 0x35
    159e:	83 30       	cpi	r24, 0x03	; 3
    15a0:	01 f5       	brne	.+64     	; 0x15e2 <lcdMenue+0x560>
    15a2:	9b 99       	sbic	0x13, 3	; 19
    15a4:	12 c0       	rjmp	.+36     	; 0x15ca <lcdMenue+0x548>
    15a6:	bf ef       	ldi	r27, 0xFF	; 255
    15a8:	e2 e5       	ldi	r30, 0x52	; 82
    15aa:	f7 e0       	ldi	r31, 0x07	; 7
    15ac:	b1 50       	subi	r27, 0x01	; 1
    15ae:	e0 40       	sbci	r30, 0x00	; 0
    15b0:	f0 40       	sbci	r31, 0x00	; 0
    15b2:	e1 f7       	brne	.-8      	; 0x15ac <lcdMenue+0x52a>
    15b4:	00 c0       	rjmp	.+0      	; 0x15b6 <lcdMenue+0x534>
    15b6:	00 00       	nop
    15b8:	6f 2d       	mov	r22, r15
    15ba:	80 e0       	ldi	r24, 0x00	; 0
    15bc:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    15c0:	8c a9       	ldd	r24, Y+52	; 0x34
    15c2:	80 58       	subi	r24, 0x80	; 128
    15c4:	8c ab       	std	Y+52, r24	; 0x34
    15c6:	0e 94 0a 08 	call	0x1014	; 0x1014 <checkSwitchTime>
    15ca:	8c a9       	ldd	r24, Y+52	; 0x34
    15cc:	88 23       	and	r24, r24
    15ce:	2c f4       	brge	.+10     	; 0x15da <lcdMenue+0x558>
    15d0:	8b e1       	ldi	r24, 0x1B	; 27
    15d2:	91 e0       	ldi	r25, 0x01	; 1
    15d4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    15d8:	04 c0       	rjmp	.+8      	; 0x15e2 <lcdMenue+0x560>
    15da:	8c e2       	ldi	r24, 0x2C	; 44
    15dc:	91 e0       	ldi	r25, 0x01	; 1
    15de:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    15e2:	8d a9       	ldd	r24, Y+53	; 0x35
    15e4:	84 30       	cpi	r24, 0x04	; 4
    15e6:	91 f4       	brne	.+36     	; 0x160c <lcdMenue+0x58a>
    15e8:	6f 2d       	mov	r22, r15
    15ea:	80 e0       	ldi	r24, 0x00	; 0
    15ec:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    15f0:	ce 01       	movw	r24, r28
    15f2:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <CompareSwitchTime_>
    15f6:	82 ff       	sbrs	r24, 2
    15f8:	05 c0       	rjmp	.+10     	; 0x1604 <lcdMenue+0x582>
    15fa:	8d e3       	ldi	r24, 0x3D	; 61
    15fc:	91 e0       	ldi	r25, 0x01	; 1
    15fe:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1602:	04 c0       	rjmp	.+8      	; 0x160c <lcdMenue+0x58a>
    1604:	8e e4       	ldi	r24, 0x4E	; 78
    1606:	91 e0       	ldi	r25, 0x01	; 1
    1608:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    160c:	8d a9       	ldd	r24, Y+53	; 0x35
    160e:	85 30       	cpi	r24, 0x05	; 5
    1610:	81 f4       	brne	.+32     	; 0x1632 <lcdMenue+0x5b0>
    1612:	8f e5       	ldi	r24, 0x5F	; 95
    1614:	91 e0       	ldi	r25, 0x01	; 1
    1616:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    161a:	9b 99       	sbic	0x13, 3	; 19
    161c:	0a c0       	rjmp	.+20     	; 0x1632 <lcdMenue+0x5b0>
    161e:	2f ef       	ldi	r18, 0xFF	; 255
    1620:	84 e3       	ldi	r24, 0x34	; 52
    1622:	9c e0       	ldi	r25, 0x0C	; 12
    1624:	21 50       	subi	r18, 0x01	; 1
    1626:	80 40       	sbci	r24, 0x00	; 0
    1628:	90 40       	sbci	r25, 0x00	; 0
    162a:	e1 f7       	brne	.-8      	; 0x1624 <lcdMenue+0x5a2>
    162c:	00 c0       	rjmp	.+0      	; 0x162e <lcdMenue+0x5ac>
    162e:	00 00       	nop
    1630:	b5 c0       	rjmp	.+362    	; 0x179c <lcdMenue+0x71a>
    1632:	d8 01       	movw	r26, r16
    1634:	15 96       	adiw	r26, 0x05	; 5
    1636:	8c 91       	ld	r24, X
    1638:	8f 30       	cpi	r24, 0x0F	; 15
    163a:	08 f4       	brcc	.+2      	; 0x163e <lcdMenue+0x5bc>
    163c:	69 cf       	rjmp	.-302    	; 0x1510 <lcdMenue+0x48e>
    163e:	ae c0       	rjmp	.+348    	; 0x179c <lcdMenue+0x71a>
    1640:	60 e0       	ldi	r22, 0x00	; 0
    1642:	80 e0       	ldi	r24, 0x00	; 0
    1644:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    1648:	82 e9       	ldi	r24, 0x92	; 146
    164a:	91 e0       	ldi	r25, 0x01	; 1
    164c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1650:	61 e0       	ldi	r22, 0x01	; 1
    1652:	80 e0       	ldi	r24, 0x00	; 0
    1654:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    1658:	e7 ef       	ldi	r30, 0xF7	; 247
    165a:	f2 e0       	ldi	r31, 0x02	; 2
    165c:	91 a9       	ldd	r25, Z+49	; 0x31
    165e:	84 a9       	ldd	r24, Z+52	; 0x34
    1660:	89 2b       	or	r24, r25
    1662:	81 ab       	std	Z+49, r24	; 0x31
    1664:	9d e2       	ldi	r25, 0x2D	; 45
    1666:	90 83       	st	Z, r25
    1668:	9e e3       	ldi	r25, 0x3E	; 62
    166a:	91 83       	std	Z+1, r25	; 0x01
    166c:	94 e5       	ldi	r25, 0x54	; 84
    166e:	92 83       	std	Z+2, r25	; 0x02
    1670:	92 e7       	ldi	r25, 0x72	; 114
    1672:	93 83       	std	Z+3, r25	; 0x03
    1674:	99 e6       	ldi	r25, 0x69	; 105
    1676:	94 83       	std	Z+4, r25	; 0x04
    1678:	91 e6       	ldi	r25, 0x61	; 97
    167a:	95 83       	std	Z+5, r25	; 0x05
    167c:	93 e6       	ldi	r25, 0x63	; 99
    167e:	96 83       	std	Z+6, r25	; 0x06
    1680:	9b e5       	ldi	r25, 0x5B	; 91
    1682:	97 83       	std	Z+7, r25	; 0x07
    1684:	98 2f       	mov	r25, r24
    1686:	91 72       	andi	r25, 0x21	; 33
    1688:	21 f0       	breq	.+8      	; 0x1692 <lcdMenue+0x610>
    168a:	91 e3       	ldi	r25, 0x31	; 49
    168c:	90 93 ff 02 	sts	0x02FF, r25	; 0x8002ff <APP+0x8>
    1690:	03 c0       	rjmp	.+6      	; 0x1698 <lcdMenue+0x616>
    1692:	9d e2       	ldi	r25, 0x2D	; 45
    1694:	90 93 ff 02 	sts	0x02FF, r25	; 0x8002ff <APP+0x8>
    1698:	e7 ef       	ldi	r30, 0xF7	; 247
    169a:	f2 e0       	ldi	r31, 0x02	; 2
    169c:	9d e5       	ldi	r25, 0x5D	; 93
    169e:	91 87       	std	Z+9, r25	; 0x09
    16a0:	9b e5       	ldi	r25, 0x5B	; 91
    16a2:	92 87       	std	Z+10, r25	; 0x0a
    16a4:	98 2f       	mov	r25, r24
    16a6:	92 74       	andi	r25, 0x42	; 66
    16a8:	21 f0       	breq	.+8      	; 0x16b2 <lcdMenue+0x630>
    16aa:	92 e3       	ldi	r25, 0x32	; 50
    16ac:	90 93 02 03 	sts	0x0302, r25	; 0x800302 <APP+0xb>
    16b0:	03 c0       	rjmp	.+6      	; 0x16b8 <lcdMenue+0x636>
    16b2:	9d e2       	ldi	r25, 0x2D	; 45
    16b4:	90 93 02 03 	sts	0x0302, r25	; 0x800302 <APP+0xb>
    16b8:	e7 ef       	ldi	r30, 0xF7	; 247
    16ba:	f2 e0       	ldi	r31, 0x02	; 2
    16bc:	9d e5       	ldi	r25, 0x5D	; 93
    16be:	94 87       	std	Z+12, r25	; 0x0c
    16c0:	9b e5       	ldi	r25, 0x5B	; 91
    16c2:	95 87       	std	Z+13, r25	; 0x0d
    16c4:	83 fd       	sbrc	r24, 3
    16c6:	02 c0       	rjmp	.+4      	; 0x16cc <lcdMenue+0x64a>
    16c8:	88 23       	and	r24, r24
    16ca:	24 f4       	brge	.+8      	; 0x16d4 <lcdMenue+0x652>
    16cc:	83 e3       	ldi	r24, 0x33	; 51
    16ce:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <APP+0xe>
    16d2:	03 c0       	rjmp	.+6      	; 0x16da <lcdMenue+0x658>
    16d4:	8d e2       	ldi	r24, 0x2D	; 45
    16d6:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <APP+0xe>
    16da:	e7 ef       	ldi	r30, 0xF7	; 247
    16dc:	f2 e0       	ldi	r31, 0x02	; 2
    16de:	8d e5       	ldi	r24, 0x5D	; 93
    16e0:	87 87       	std	Z+15, r24	; 0x0f
    16e2:	10 8a       	std	Z+16, r1	; 0x10
    16e4:	cf 01       	movw	r24, r30
    16e6:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    16ea:	58 c0       	rjmp	.+176    	; 0x179c <lcdMenue+0x71a>
    16ec:	10 92 2e 03 	sts	0x032E, r1	; 0x80032e <APP+0x37>
    16f0:	60 e0       	ldi	r22, 0x00	; 0
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    16f8:	83 ea       	ldi	r24, 0xA3	; 163
    16fa:	91 e0       	ldi	r25, 0x01	; 1
    16fc:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1700:	61 e0       	ldi	r22, 0x01	; 1
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    1708:	9b 99       	sbic	0x13, 3	; 19
    170a:	15 c0       	rjmp	.+42     	; 0x1736 <lcdMenue+0x6b4>
    170c:	bf ef       	ldi	r27, 0xFF	; 255
    170e:	e4 e3       	ldi	r30, 0x34	; 52
    1710:	fc e0       	ldi	r31, 0x0C	; 12
    1712:	b1 50       	subi	r27, 0x01	; 1
    1714:	e0 40       	sbci	r30, 0x00	; 0
    1716:	f0 40       	sbci	r31, 0x00	; 0
    1718:	e1 f7       	brne	.-8      	; 0x1712 <lcdMenue+0x690>
    171a:	00 c0       	rjmp	.+0      	; 0x171c <lcdMenue+0x69a>
    171c:	00 00       	nop
    171e:	90 91 ec 02 	lds	r25, 0x02EC	; 0x8002ec <DispAlwaysOn>
    1722:	81 e0       	ldi	r24, 0x01	; 1
    1724:	89 27       	eor	r24, r25
    1726:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <DispAlwaysOn>
    172a:	60 91 ec 02 	lds	r22, 0x02EC	; 0x8002ec <DispAlwaysOn>
    172e:	80 e0       	ldi	r24, 0x00	; 0
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	0e 94 4e 12 	call	0x249c	; 0x249c <eeprom_update_byte>
    1736:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <DispAlwaysOn>
    173a:	80 ff       	sbrs	r24, 0
    173c:	04 c0       	rjmp	.+8      	; 0x1746 <lcdMenue+0x6c4>
    173e:	84 eb       	ldi	r24, 0xB4	; 180
    1740:	91 e0       	ldi	r25, 0x01	; 1
    1742:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1746:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <DispAlwaysOn>
    174a:	80 fd       	sbrc	r24, 0
    174c:	27 c0       	rjmp	.+78     	; 0x179c <lcdMenue+0x71a>
    174e:	85 ec       	ldi	r24, 0xC5	; 197
    1750:	91 e0       	ldi	r25, 0x01	; 1
    1752:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1756:	22 c0       	rjmp	.+68     	; 0x179c <lcdMenue+0x71a>
    1758:	60 e0       	ldi	r22, 0x00	; 0
    175a:	80 e0       	ldi	r24, 0x00	; 0
    175c:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    1760:	86 ed       	ldi	r24, 0xD6	; 214
    1762:	91 e0       	ldi	r25, 0x01	; 1
    1764:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1768:	61 e0       	ldi	r22, 0x01	; 1
    176a:	80 e0       	ldi	r24, 0x00	; 0
    176c:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
    1770:	80 91 2e 03 	lds	r24, 0x032E	; 0x80032e <APP+0x37>
    1774:	82 30       	cpi	r24, 0x02	; 2
    1776:	20 f4       	brcc	.+8      	; 0x1780 <lcdMenue+0x6fe>
    1778:	83 e9       	ldi	r24, 0x93	; 147
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1780:	80 91 2e 03 	lds	r24, 0x032E	; 0x80032e <APP+0x37>
    1784:	84 30       	cpi	r24, 0x04	; 4
    1786:	20 f0       	brcs	.+8      	; 0x1790 <lcdMenue+0x70e>
    1788:	84 ea       	ldi	r24, 0xA4	; 164
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    1790:	80 91 2e 03 	lds	r24, 0x032E	; 0x80032e <APP+0x37>
    1794:	87 30       	cpi	r24, 0x07	; 7
    1796:	10 f0       	brcs	.+4      	; 0x179c <lcdMenue+0x71a>
    1798:	10 92 2e 03 	sts	0x032E, r1	; 0x80032e <APP+0x37>
    179c:	df 91       	pop	r29
    179e:	cf 91       	pop	r28
    17a0:	1f 91       	pop	r17
    17a2:	0f 91       	pop	r16
    17a4:	ff 90       	pop	r15
    17a6:	ef 90       	pop	r14
    17a8:	df 90       	pop	r13
    17aa:	08 95       	ret

000017ac <reloadEEP>:
    17ac:	df 92       	push	r13
    17ae:	ef 92       	push	r14
    17b0:	ff 92       	push	r15
    17b2:	0f 93       	push	r16
    17b4:	1f 93       	push	r17
    17b6:	cf 93       	push	r28
    17b8:	df 93       	push	r29
    17ba:	c1 e0       	ldi	r28, 0x01	; 1
    17bc:	d0 e0       	ldi	r29, 0x00	; 0
    17be:	0f 2e       	mov	r0, r31
    17c0:	f7 ef       	ldi	r31, 0xF7	; 247
    17c2:	ef 2e       	mov	r14, r31
    17c4:	f2 e0       	ldi	r31, 0x02	; 2
    17c6:	ff 2e       	mov	r15, r31
    17c8:	f0 2d       	mov	r31, r0
    17ca:	d1 2c       	mov	r13, r1
    17cc:	ce 01       	movw	r24, r28
    17ce:	0e 94 46 12 	call	0x248c	; 0x248c <eeprom_read_byte>
    17d2:	87 01       	movw	r16, r14
    17d4:	f7 01       	movw	r30, r14
    17d6:	80 8b       	std	Z+16, r24	; 0x10
    17d8:	e1 99       	sbic	0x1c, 1	; 28
    17da:	fe cf       	rjmp	.-4      	; 0x17d8 <reloadEEP+0x2c>
    17dc:	ce 01       	movw	r24, r28
    17de:	05 96       	adiw	r24, 0x05	; 5
    17e0:	0e 94 46 12 	call	0x248c	; 0x248c <eeprom_read_byte>
    17e4:	f8 01       	movw	r30, r16
    17e6:	85 8b       	std	Z+21, r24	; 0x15
    17e8:	e1 99       	sbic	0x1c, 1	; 28
    17ea:	fe cf       	rjmp	.-4      	; 0x17e8 <reloadEEP+0x3c>
    17ec:	ce 01       	movw	r24, r28
    17ee:	0a 96       	adiw	r24, 0x0a	; 10
    17f0:	0e 94 46 12 	call	0x248c	; 0x248c <eeprom_read_byte>
    17f4:	f8 01       	movw	r30, r16
    17f6:	82 8f       	std	Z+26, r24	; 0x1a
    17f8:	e1 99       	sbic	0x1c, 1	; 28
    17fa:	fe cf       	rjmp	.-4      	; 0x17f8 <reloadEEP+0x4c>
    17fc:	ce 01       	movw	r24, r28
    17fe:	0f 96       	adiw	r24, 0x0f	; 15
    1800:	0e 94 46 12 	call	0x248c	; 0x248c <eeprom_read_byte>
    1804:	f8 01       	movw	r30, r16
    1806:	87 8f       	std	Z+31, r24	; 0x1f
    1808:	e1 99       	sbic	0x1c, 1	; 28
    180a:	fe cf       	rjmp	.-4      	; 0x1808 <reloadEEP+0x5c>
    180c:	ce 01       	movw	r24, r28
    180e:	44 96       	adiw	r24, 0x14	; 20
    1810:	0e 94 46 12 	call	0x248c	; 0x248c <eeprom_read_byte>
    1814:	f8 01       	movw	r30, r16
    1816:	84 a3       	std	Z+36, r24	; 0x24
    1818:	e1 99       	sbic	0x1c, 1	; 28
    181a:	fe cf       	rjmp	.-4      	; 0x1818 <reloadEEP+0x6c>
    181c:	ce 01       	movw	r24, r28
    181e:	49 96       	adiw	r24, 0x19	; 25
    1820:	0e 94 46 12 	call	0x248c	; 0x248c <eeprom_read_byte>
    1824:	f8 01       	movw	r30, r16
    1826:	81 a7       	std	Z+41, r24	; 0x29
    1828:	d3 94       	inc	r13
    182a:	21 96       	adiw	r28, 0x01	; 1
    182c:	ff ef       	ldi	r31, 0xFF	; 255
    182e:	ef 1a       	sub	r14, r31
    1830:	ff 0a       	sbc	r15, r31
    1832:	83 e0       	ldi	r24, 0x03	; 3
    1834:	d8 12       	cpse	r13, r24
    1836:	ca cf       	rjmp	.-108    	; 0x17cc <reloadEEP+0x20>
    1838:	80 e0       	ldi	r24, 0x00	; 0
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	0e 94 46 12 	call	0x248c	; 0x248c <eeprom_read_byte>
    1840:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <DispAlwaysOn>
    1844:	df 91       	pop	r29
    1846:	cf 91       	pop	r28
    1848:	1f 91       	pop	r17
    184a:	0f 91       	pop	r16
    184c:	ff 90       	pop	r15
    184e:	ef 90       	pop	r14
    1850:	df 90       	pop	r13
    1852:	08 95       	ret

00001854 <initHardware>:
    1854:	8a b3       	in	r24, 0x1a	; 26
    1856:	8f 60       	ori	r24, 0x0F	; 15
    1858:	8a bb       	out	0x1a, r24	; 26
    185a:	8d 9a       	sbi	0x11, 5	; 17
    185c:	8c 9a       	sbi	0x11, 4	; 17
    185e:	84 b3       	in	r24, 0x14	; 20
    1860:	8f 7c       	andi	r24, 0xCF	; 207
    1862:	84 bb       	out	0x14, r24	; 20
    1864:	a3 98       	cbi	0x14, 3	; 20
    1866:	ab 9a       	sbi	0x15, 3	; 21
    1868:	87 b3       	in	r24, 0x17	; 23
    186a:	8c 61       	ori	r24, 0x1C	; 28
    186c:	87 bb       	out	0x17, r24	; 23
    186e:	83 b7       	in	r24, 0x33	; 51
    1870:	81 60       	ori	r24, 0x01	; 1
    1872:	83 bf       	out	0x33, r24	; 51
    1874:	12 be       	out	0x32, r1	; 50
    1876:	89 b7       	in	r24, 0x39	; 57
    1878:	81 60       	ori	r24, 0x01	; 1
    187a:	89 bf       	out	0x39, r24	; 57
    187c:	8e b5       	in	r24, 0x2e	; 46
    187e:	82 60       	ori	r24, 0x02	; 2
    1880:	8e bd       	out	0x2e, r24	; 46
    1882:	8e b5       	in	r24, 0x2e	; 46
    1884:	88 60       	ori	r24, 0x08	; 8
    1886:	8e bd       	out	0x2e, r24	; 46
    1888:	83 e6       	ldi	r24, 0x63	; 99
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	9b bd       	out	0x2b, r25	; 43
    188e:	8a bd       	out	0x2a, r24	; 42
    1890:	89 b7       	in	r24, 0x39	; 57
    1892:	80 61       	ori	r24, 0x10	; 16
    1894:	89 bf       	out	0x39, r24	; 57
    1896:	08 95       	ret

00001898 <Welcome>:


void Welcome(void)
{
    1898:	cf 93       	push	r28
    189a:	df 93       	push	r29
	Pwm.Channel[LED_2] = 255;
    189c:	cf ee       	ldi	r28, 0xEF	; 239
    189e:	d2 e0       	ldi	r29, 0x02	; 2
    18a0:	8f ef       	ldi	r24, 0xFF	; 255
    18a2:	8a 83       	std	Y+2, r24	; 0x02
	Pwm.Channel[LED_3] = 255;
    18a4:	8b 83       	std	Y+3, r24	; 0x03
	Pwm.Channel[LED_4] = 255;
    18a6:	8c 83       	std	Y+4, r24	; 0x04
	
	lcd_gotoxy(0,0);
    18a8:	60 e0       	ldi	r22, 0x00	; 0
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts("Welcome to..    ");
    18b0:	87 ee       	ldi	r24, 0xE7	; 231
    18b2:	91 e0       	ldi	r25, 0x01	; 1
    18b4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	lcd_gotoxy(0,1);
    18b8:	61 e0       	ldi	r22, 0x01	; 1
    18ba:	80 e0       	ldi	r24, 0x00	; 0
    18bc:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts(Strings.SWV);
    18c0:	83 e9       	ldi	r24, 0x93	; 147
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	
	while(Pwm.Channel[LED_2]>0)
    18c8:	8a 81       	ldd	r24, Y+2	; 0x02
    18ca:	88 23       	and	r24, r24
    18cc:	b1 f0       	breq	.+44     	; 0x18fa <Welcome+0x62>
	{
		if (Pwm.Channel[LED_2]>0)
    18ce:	fe 01       	movw	r30, r28
    18d0:	82 81       	ldd	r24, Z+2	; 0x02
    18d2:	88 23       	and	r24, r24
    18d4:	49 f0       	breq	.+18     	; 0x18e8 <Welcome+0x50>
		{
			Pwm.Channel[LED_2]--;
    18d6:	82 81       	ldd	r24, Z+2	; 0x02
    18d8:	81 50       	subi	r24, 0x01	; 1
    18da:	82 83       	std	Z+2, r24	; 0x02
			Pwm.Channel[LED_3]--;
    18dc:	83 81       	ldd	r24, Z+3	; 0x03
    18de:	81 50       	subi	r24, 0x01	; 1
    18e0:	83 83       	std	Z+3, r24	; 0x03
			Pwm.Channel[LED_4]--;			
    18e2:	84 81       	ldd	r24, Z+4	; 0x04
    18e4:	81 50       	subi	r24, 0x01	; 1
    18e6:	84 83       	std	Z+4, r24	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    18e8:	8f e3       	ldi	r24, 0x3F	; 63
    18ea:	9f e1       	ldi	r25, 0x1F	; 31
    18ec:	01 97       	sbiw	r24, 0x01	; 1
    18ee:	f1 f7       	brne	.-4      	; 0x18ec <Welcome+0x54>
    18f0:	00 c0       	rjmp	.+0      	; 0x18f2 <Welcome+0x5a>
    18f2:	00 00       	nop
	lcd_gotoxy(0,0);
	lcd_puts("Welcome to..    ");
	lcd_gotoxy(0,1);
	lcd_puts(Strings.SWV);
	
	while(Pwm.Channel[LED_2]>0)
    18f4:	82 81       	ldd	r24, Z+2	; 0x02
    18f6:	81 11       	cpse	r24, r1
    18f8:	eb cf       	rjmp	.-42     	; 0x18d0 <Welcome+0x38>
			Pwm.Channel[LED_4]--;			
		}
		_delay_ms(2);
	}
	
	lcd_gotoxy(0,0);
    18fa:	60 e0       	ldi	r22, 0x00	; 0
    18fc:	80 e0       	ldi	r24, 0x00	; 0
    18fe:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts("This is..       ");
    1902:	88 ef       	ldi	r24, 0xF8	; 248
    1904:	91 e0       	ldi	r25, 0x01	; 1
    1906:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	lcd_gotoxy(0,1);
    190a:	61 e0       	ldi	r22, 0x01	; 1
    190c:	80 e0       	ldi	r24, 0x00	; 0
    190e:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts(Strings.HWV);
    1912:	84 ea       	ldi	r24, 0xA4	; 164
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>

	while(Pwm.Channel[LED_2]<255)
    191a:	80 91 f1 02 	lds	r24, 0x02F1	; 0x8002f1 <Pwm+0x2>
    191e:	8f 3f       	cpi	r24, 0xFF	; 255
    1920:	89 f0       	breq	.+34     	; 0x1944 <Welcome+0xac>
	{
		if (Pwm.Channel[LED_2]<255)
    1922:	ef ee       	ldi	r30, 0xEF	; 239
    1924:	f2 e0       	ldi	r31, 0x02	; 2
    1926:	82 81       	ldd	r24, Z+2	; 0x02
    1928:	8f 3f       	cpi	r24, 0xFF	; 255
    192a:	19 f0       	breq	.+6      	; 0x1932 <Welcome+0x9a>
		{
			Pwm.Channel[LED_2]++;
    192c:	82 81       	ldd	r24, Z+2	; 0x02
    192e:	8f 5f       	subi	r24, 0xFF	; 255
    1930:	82 83       	std	Z+2, r24	; 0x02
    1932:	8f e3       	ldi	r24, 0x3F	; 63
    1934:	9f e1       	ldi	r25, 0x1F	; 31
    1936:	01 97       	sbiw	r24, 0x01	; 1
    1938:	f1 f7       	brne	.-4      	; 0x1936 <Welcome+0x9e>
    193a:	00 c0       	rjmp	.+0      	; 0x193c <Welcome+0xa4>
    193c:	00 00       	nop
	lcd_gotoxy(0,0);
	lcd_puts("This is..       ");
	lcd_gotoxy(0,1);
	lcd_puts(Strings.HWV);

	while(Pwm.Channel[LED_2]<255)
    193e:	82 81       	ldd	r24, Z+2	; 0x02
    1940:	8f 3f       	cpi	r24, 0xFF	; 255
    1942:	89 f7       	brne	.-30     	; 0x1926 <Welcome+0x8e>
			//Pwm.Channel[LED_4]--;
		}
		_delay_ms(2);
	}
	
	lcd_gotoxy(0,0);
    1944:	60 e0       	ldi	r22, 0x00	; 0
    1946:	80 e0       	ldi	r24, 0x00	; 0
    1948:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts("Build @         ");
    194c:	89 e0       	ldi	r24, 0x09	; 9
    194e:	92 e0       	ldi	r25, 0x02	; 2
    1950:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	lcd_gotoxy(0,1);
    1954:	61 e0       	ldi	r22, 0x01	; 1
    1956:	80 e0       	ldi	r24, 0x00	; 0
    1958:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts(Strings.Build);
    195c:	8a e1       	ldi	r24, 0x1A	; 26
    195e:	92 e0       	ldi	r25, 0x02	; 2
    1960:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	
	while(Pwm.Channel[LED_3]<255)
    1964:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <Pwm+0x3>
    1968:	8f 3f       	cpi	r24, 0xFF	; 255
    196a:	89 f0       	breq	.+34     	; 0x198e <Welcome+0xf6>
	{
		if (Pwm.Channel[LED_3]<255)
    196c:	ef ee       	ldi	r30, 0xEF	; 239
    196e:	f2 e0       	ldi	r31, 0x02	; 2
    1970:	83 81       	ldd	r24, Z+3	; 0x03
    1972:	8f 3f       	cpi	r24, 0xFF	; 255
    1974:	19 f0       	breq	.+6      	; 0x197c <Welcome+0xe4>
		{
			//Pwm.Channel[LED_2]++;
			Pwm.Channel[LED_3]++;
    1976:	83 81       	ldd	r24, Z+3	; 0x03
    1978:	8f 5f       	subi	r24, 0xFF	; 255
    197a:	83 83       	std	Z+3, r24	; 0x03
    197c:	8f e3       	ldi	r24, 0x3F	; 63
    197e:	9f e1       	ldi	r25, 0x1F	; 31
    1980:	01 97       	sbiw	r24, 0x01	; 1
    1982:	f1 f7       	brne	.-4      	; 0x1980 <Welcome+0xe8>
    1984:	00 c0       	rjmp	.+0      	; 0x1986 <Welcome+0xee>
    1986:	00 00       	nop
	lcd_gotoxy(0,0);
	lcd_puts("Build @         ");
	lcd_gotoxy(0,1);
	lcd_puts(Strings.Build);
	
	while(Pwm.Channel[LED_3]<255)
    1988:	83 81       	ldd	r24, Z+3	; 0x03
    198a:	8f 3f       	cpi	r24, 0xFF	; 255
    198c:	89 f7       	brne	.-30     	; 0x1970 <Welcome+0xd8>
			//Pwm.Channel[LED_4]--;
		}
		_delay_ms(2);
	}

	lcd_gotoxy(0,0);
    198e:	60 e0       	ldi	r22, 0x00	; 0
    1990:	80 e0       	ldi	r24, 0x00	; 0
    1992:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts("Build by        ");
    1996:	8b e2       	ldi	r24, 0x2B	; 43
    1998:	92 e0       	ldi	r25, 0x02	; 2
    199a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	lcd_gotoxy(0,1);
    199e:	61 e0       	ldi	r22, 0x01	; 1
    19a0:	80 e0       	ldi	r24, 0x00	; 0
    19a2:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts(Strings.Author);
    19a6:	8c e3       	ldi	r24, 0x3C	; 60
    19a8:	92 e0       	ldi	r25, 0x02	; 2
    19aa:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	
	while(Pwm.Channel[LED_4]<255)
    19ae:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <Pwm+0x4>
    19b2:	8f 3f       	cpi	r24, 0xFF	; 255
    19b4:	89 f0       	breq	.+34     	; 0x19d8 <Welcome+0x140>
	{
		if (Pwm.Channel[LED_4]<255)
    19b6:	ef ee       	ldi	r30, 0xEF	; 239
    19b8:	f2 e0       	ldi	r31, 0x02	; 2
    19ba:	84 81       	ldd	r24, Z+4	; 0x04
    19bc:	8f 3f       	cpi	r24, 0xFF	; 255
    19be:	19 f0       	breq	.+6      	; 0x19c6 <Welcome+0x12e>
		{
			//Pwm.Channel[LED_2]++;
			//Pwm.Channel[LED_3]++;
			Pwm.Channel[LED_4]++;
    19c0:	84 81       	ldd	r24, Z+4	; 0x04
    19c2:	8f 5f       	subi	r24, 0xFF	; 255
    19c4:	84 83       	std	Z+4, r24	; 0x04
    19c6:	8f e3       	ldi	r24, 0x3F	; 63
    19c8:	9f e1       	ldi	r25, 0x1F	; 31
    19ca:	01 97       	sbiw	r24, 0x01	; 1
    19cc:	f1 f7       	brne	.-4      	; 0x19ca <Welcome+0x132>
    19ce:	00 c0       	rjmp	.+0      	; 0x19d0 <Welcome+0x138>
    19d0:	00 00       	nop
	lcd_gotoxy(0,0);
	lcd_puts("Build by        ");
	lcd_gotoxy(0,1);
	lcd_puts(Strings.Author);
	
	while(Pwm.Channel[LED_4]<255)
    19d2:	84 81       	ldd	r24, Z+4	; 0x04
    19d4:	8f 3f       	cpi	r24, 0xFF	; 255
    19d6:	89 f7       	brne	.-30     	; 0x19ba <Welcome+0x122>
			Pwm.Channel[LED_4]++;
		}		
		_delay_ms(2);
	}
	
	lcd_gotoxy(0,0);
    19d8:	60 e0       	ldi	r22, 0x00	; 0
    19da:	80 e0       	ldi	r24, 0x00	; 0
    19dc:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts("Contact -> Jan.");
    19e0:	8d e4       	ldi	r24, 0x4D	; 77
    19e2:	92 e0       	ldi	r25, 0x02	; 2
    19e4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	lcd_gotoxy(0,1);
    19e8:	61 e0       	ldi	r22, 0x01	; 1
    19ea:	80 e0       	ldi	r24, 0x00	; 0
    19ec:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts("Homann@yahoo.de");
    19f0:	8d e5       	ldi	r24, 0x5D	; 93
    19f2:	92 e0       	ldi	r25, 0x02	; 2
    19f4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
    19f8:	9f ef       	ldi	r25, 0xFF	; 255
    19fa:	2d e3       	ldi	r18, 0x3D	; 61
    19fc:	89 e4       	ldi	r24, 0x49	; 73
    19fe:	91 50       	subi	r25, 0x01	; 1
    1a00:	20 40       	sbci	r18, 0x00	; 0
    1a02:	80 40       	sbci	r24, 0x00	; 0
    1a04:	e1 f7       	brne	.-8      	; 0x19fe <Welcome+0x166>
    1a06:	00 c0       	rjmp	.+0      	; 0x1a08 <Welcome+0x170>
    1a08:	00 00       	nop
	
	_delay_ms(1500);
	
	lcd_gotoxy(0,0);
    1a0a:	60 e0       	ldi	r22, 0x00	; 0
    1a0c:	80 e0       	ldi	r24, 0x00	; 0
    1a0e:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts("Start Now..     ");
    1a12:	8d e6       	ldi	r24, 0x6D	; 109
    1a14:	92 e0       	ldi	r25, 0x02	; 2
    1a16:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	lcd_gotoxy(0,1);
    1a1a:	61 e0       	ldi	r22, 0x01	; 1
    1a1c:	80 e0       	ldi	r24, 0x00	; 0
    1a1e:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_gotoxy>
	lcd_puts("Enjoy it!       ");	
    1a22:	8e e7       	ldi	r24, 0x7E	; 126
    1a24:	92 e0       	ldi	r25, 0x02	; 2
    1a26:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_puts>
	
	while(Pwm.Channel[LED_4]>0)
    1a2a:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <Pwm+0x4>
    1a2e:	88 23       	and	r24, r24
    1a30:	b9 f0       	breq	.+46     	; 0x1a60 <Welcome+0x1c8>
	{
		if (Pwm.Channel[LED_4]>0)
    1a32:	ef ee       	ldi	r30, 0xEF	; 239
    1a34:	f2 e0       	ldi	r31, 0x02	; 2
    1a36:	84 81       	ldd	r24, Z+4	; 0x04
    1a38:	88 23       	and	r24, r24
    1a3a:	49 f0       	breq	.+18     	; 0x1a4e <Welcome+0x1b6>
		{
			Pwm.Channel[LED_2]--;
    1a3c:	82 81       	ldd	r24, Z+2	; 0x02
    1a3e:	81 50       	subi	r24, 0x01	; 1
    1a40:	82 83       	std	Z+2, r24	; 0x02
			Pwm.Channel[LED_3]--;
    1a42:	83 81       	ldd	r24, Z+3	; 0x03
    1a44:	81 50       	subi	r24, 0x01	; 1
    1a46:	83 83       	std	Z+3, r24	; 0x03
			Pwm.Channel[LED_4]--;
    1a48:	84 81       	ldd	r24, Z+4	; 0x04
    1a4a:	81 50       	subi	r24, 0x01	; 1
    1a4c:	84 83       	std	Z+4, r24	; 0x04
    1a4e:	8f e3       	ldi	r24, 0x3F	; 63
    1a50:	9f e1       	ldi	r25, 0x1F	; 31
    1a52:	01 97       	sbiw	r24, 0x01	; 1
    1a54:	f1 f7       	brne	.-4      	; 0x1a52 <Welcome+0x1ba>
    1a56:	00 c0       	rjmp	.+0      	; 0x1a58 <Welcome+0x1c0>
    1a58:	00 00       	nop
	lcd_gotoxy(0,0);
	lcd_puts("Start Now..     ");
	lcd_gotoxy(0,1);
	lcd_puts("Enjoy it!       ");	
	
	while(Pwm.Channel[LED_4]>0)
    1a5a:	84 81       	ldd	r24, Z+4	; 0x04
    1a5c:	81 11       	cpse	r24, r1
    1a5e:	eb cf       	rjmp	.-42     	; 0x1a36 <Welcome+0x19e>
			Pwm.Channel[LED_3]--;
			Pwm.Channel[LED_4]--;
		}
		_delay_ms(2);
	}
}
    1a60:	df 91       	pop	r29
    1a62:	cf 91       	pop	r28
    1a64:	08 95       	ret

00001a66 <main>:
uint8_t LCD_PowerUp =0;

int main(void)
{	
	/* init hardware */
	initHardware();
    1a66:	0e 94 2a 0c 	call	0x1854	; 0x1854 <initHardware>
	
	/* reload settings */
	reloadEEP();
    1a6a:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <reloadEEP>

	/* lcd init */
	lcd_init(LCD_DISP_ON);
    1a6e:	8c e0       	ldi	r24, 0x0C	; 12
    1a70:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_init>

	/* init I2C */
	i2c_init();
    1a74:	0e 94 68 00 	call	0xd0	; 0xd0 <i2c_init>

	/* set 1Hz output */
	RX8564_set_CLKOUT(F_1Hz);
    1a78:	83 e8       	ldi	r24, 0x83	; 131
    1a7a:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <RX8564_set_CLKOUT>

	/* interrupt enable */
	sei();
    1a7e:	78 94       	sei

	/* default pwm settings */
	Pwm.Channel[LCD_CONTRAST]	= 35;
    1a80:	ef ee       	ldi	r30, 0xEF	; 239
    1a82:	f2 e0       	ldi	r31, 0x02	; 2
    1a84:	83 e2       	ldi	r24, 0x23	; 35
    1a86:	80 83       	st	Z, r24
	Pwm.Channel[LCD_BRIGHTNESS] = 100;
    1a88:	84 e6       	ldi	r24, 0x64	; 100
    1a8a:	85 83       	std	Z+5, r24	; 0x05
	Pwm.Channel[LED_1]			= 0;
    1a8c:	11 82       	std	Z+1, r1	; 0x01
	Pwm.Channel[LED_2]			= 0;
    1a8e:	12 82       	std	Z+2, r1	; 0x02
	Pwm.Channel[LED_3]			= 0;
    1a90:	13 82       	std	Z+3, r1	; 0x03
	Pwm.Channel[LED_4]			= 0;
    1a92:	14 82       	std	Z+4, r1	; 0x04

	/* read first time from rtc */
	RX8564_get_Data(&RX8564_Buffer);
    1a94:	8f e2       	ldi	r24, 0x2F	; 47
    1a96:	93 e0       	ldi	r25, 0x03	; 3
    1a98:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <RX8564_get_Data>
	
	/* show welcome message */
	Welcome();
    1a9c:	0e 94 4c 0c 	call	0x1898	; 0x1898 <Welcome>

    while (1) 
    {	
		/* Auto Exit from x MenuePoint */
		if (Time.TmeOutSec >= MENUE_TIMEOUT){
    1aa0:	0e e3       	ldi	r16, 0x3E	; 62
    1aa2:	13 e0       	ldi	r17, 0x03	; 3

			Time.TmeOutSec = 0;
			APP.Menue = 0 ;
    1aa4:	c7 ef       	ldi	r28, 0xF7	; 247
    1aa6:	d2 e0       	ldi	r29, 0x02	; 2
		}
		
		if (Time.DispTmeOut >= DISPLAY_AUTO_OFF && (!(DispAlwaysOn & 1<<0)) && DisplayFade >= 10){

			DisplayFade = 0;
			if (Pwm.Channel[LCD_BRIGHTNESS] > 0){
    1aa8:	0f 2e       	mov	r0, r31
    1aaa:	ff ee       	ldi	r31, 0xEF	; 239
    1aac:	ef 2e       	mov	r14, r31
    1aae:	f2 e0       	ldi	r31, 0x02	; 2
    1ab0:	ff 2e       	mov	r15, r31
    1ab2:	f0 2d       	mov	r31, r0

		}

		if (Encoder.Cnt){
		
			LCD_PowerUp = 0xA5;
    1ab4:	0f 2e       	mov	r0, r31
    1ab6:	f5 ea       	ldi	r31, 0xA5	; 165
    1ab8:	bf 2e       	mov	r11, r31
    1aba:	f0 2d       	mov	r31, r0
		/* Press "Enter" and Reset Light_Auto_Off */
		if(!(PINC & ENTER)){

			Time.TmeOutSec				= 0;
			Time.DispTmeOut				= 0;
			Pwm.Channel[LCD_BRIGHTNESS] = 100;
    1abc:	0f 2e       	mov	r0, r31
    1abe:	f4 e6       	ldi	r31, 0x64	; 100
    1ac0:	cf 2e       	mov	r12, r31
    1ac2:	f0 2d       	mov	r31, r0
			CompareSwitchTime(&APP,&RX8564_Buffer);
		}
		
		/* check menue overflow */
		if (APP.Menue>8)
		APP.Menue=8;
    1ac4:	68 94       	set
    1ac6:	dd 24       	eor	r13, r13
    1ac8:	d3 f8       	bld	r13, 3
	Welcome();

    while (1) 
    {	
		/* Auto Exit from x MenuePoint */
		if (Time.TmeOutSec >= MENUE_TIMEOUT){
    1aca:	f8 01       	movw	r30, r16
    1acc:	85 81       	ldd	r24, Z+5	; 0x05
    1ace:	8f 30       	cpi	r24, 0x0F	; 15
    1ad0:	10 f0       	brcs	.+4      	; 0x1ad6 <main+0x70>

			Time.TmeOutSec = 0;
    1ad2:	15 82       	std	Z+5, r1	; 0x05
			APP.Menue = 0 ;
    1ad4:	1e a6       	std	Y+46, r1	; 0x2e
		}
		
		if (Time.DispTmeOut >= DISPLAY_AUTO_OFF && (!(DispAlwaysOn & 1<<0)) && DisplayFade >= 10){
    1ad6:	f8 01       	movw	r30, r16
    1ad8:	86 81       	ldd	r24, Z+6	; 0x06
    1ada:	81 31       	cpi	r24, 0x11	; 17
    1adc:	a8 f0       	brcs	.+42     	; 0x1b08 <main+0xa2>
    1ade:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <DispAlwaysOn>
    1ae2:	80 fd       	sbrc	r24, 0
    1ae4:	11 c0       	rjmp	.+34     	; 0x1b08 <main+0xa2>
    1ae6:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <DisplayFade>
    1aea:	90 91 eb 02 	lds	r25, 0x02EB	; 0x8002eb <DisplayFade+0x1>
    1aee:	0a 97       	sbiw	r24, 0x0a	; 10
    1af0:	58 f0       	brcs	.+22     	; 0x1b08 <main+0xa2>

			DisplayFade = 0;
    1af2:	10 92 eb 02 	sts	0x02EB, r1	; 0x8002eb <DisplayFade+0x1>
    1af6:	10 92 ea 02 	sts	0x02EA, r1	; 0x8002ea <DisplayFade>
			if (Pwm.Channel[LCD_BRIGHTNESS] > 0){
    1afa:	f7 01       	movw	r30, r14
    1afc:	85 81       	ldd	r24, Z+5	; 0x05
    1afe:	88 23       	and	r24, r24
    1b00:	19 f0       	breq	.+6      	; 0x1b08 <main+0xa2>
				Pwm.Channel[LCD_BRIGHTNESS]--;
    1b02:	85 81       	ldd	r24, Z+5	; 0x05
    1b04:	81 50       	subi	r24, 0x01	; 1
    1b06:	85 83       	std	Z+5, r24	; 0x05
			}

		}

		if (Encoder.Cnt){
    1b08:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <Encoder>
    1b0c:	81 11       	cpse	r24, r1
		
			LCD_PowerUp = 0xA5;
    1b0e:	b0 92 e9 02 	sts	0x02E9, r11	; 0x8002e9 <LCD_PowerUp>
		}
		if ((Pwm.Channel[LCD_BRIGHTNESS] < 100) && (DisplayFade >= 10) && LCD_PowerUp == 0xA5){
    1b12:	f7 01       	movw	r30, r14
    1b14:	85 81       	ldd	r24, Z+5	; 0x05
    1b16:	84 36       	cpi	r24, 0x64	; 100
    1b18:	88 f4       	brcc	.+34     	; 0x1b3c <main+0xd6>
    1b1a:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <DisplayFade>
    1b1e:	90 91 eb 02 	lds	r25, 0x02EB	; 0x8002eb <DisplayFade+0x1>
    1b22:	0a 97       	sbiw	r24, 0x0a	; 10
    1b24:	58 f0       	brcs	.+22     	; 0x1b3c <main+0xd6>
    1b26:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <LCD_PowerUp>
    1b2a:	85 3a       	cpi	r24, 0xA5	; 165
    1b2c:	39 f4       	brne	.+14     	; 0x1b3c <main+0xd6>
					
			DisplayFade = 0;
    1b2e:	10 92 eb 02 	sts	0x02EB, r1	; 0x8002eb <DisplayFade+0x1>
    1b32:	10 92 ea 02 	sts	0x02EA, r1	; 0x8002ea <DisplayFade>
			Pwm.Channel[LCD_BRIGHTNESS]++;
    1b36:	85 81       	ldd	r24, Z+5	; 0x05
    1b38:	8f 5f       	subi	r24, 0xFF	; 255
    1b3a:	85 83       	std	Z+5, r24	; 0x05
		}
		if (Pwm.Channel[LCD_BRIGHTNESS]>=100){
    1b3c:	f7 01       	movw	r30, r14
    1b3e:	85 81       	ldd	r24, Z+5	; 0x05
    1b40:	84 36       	cpi	r24, 0x64	; 100
    1b42:	10 f0       	brcs	.+4      	; 0x1b48 <main+0xe2>
			LCD_PowerUp=0;
    1b44:	10 92 e9 02 	sts	0x02E9, r1	; 0x8002e9 <LCD_PowerUp>
		}
			
		/* New MenuePoint? Clear AutoExit Counter */
		APP.newState = APP.Menue;
    1b48:	8e a5       	ldd	r24, Y+46	; 0x2e
    1b4a:	88 ab       	std	Y+48, r24	; 0x30
		if (APP.oldState != APP.newState){
    1b4c:	9f a5       	ldd	r25, Y+47	; 0x2f
    1b4e:	89 17       	cp	r24, r25
    1b50:	21 f0       	breq	.+8      	; 0x1b5a <main+0xf4>
			
			Time.TmeOutSec				= 0;
    1b52:	f8 01       	movw	r30, r16
    1b54:	15 82       	std	Z+5, r1	; 0x05
			Time.DispTmeOut				= 0;
    1b56:	16 82       	std	Z+6, r1	; 0x06
			APP.oldState = APP.newState;
    1b58:	8f a7       	std	Y+47, r24	; 0x2f
		}
		
		/* Press "Enter" and Reset Light_Auto_Off */
		if(!(PINC & ENTER)){
    1b5a:	9b 99       	sbic	0x13, 3	; 19
    1b5c:	05 c0       	rjmp	.+10     	; 0x1b68 <main+0x102>

			Time.TmeOutSec				= 0;
    1b5e:	f8 01       	movw	r30, r16
    1b60:	15 82       	std	Z+5, r1	; 0x05
			Time.DispTmeOut				= 0;
    1b62:	16 82       	std	Z+6, r1	; 0x06
			Pwm.Channel[LCD_BRIGHTNESS] = 100;
    1b64:	f7 01       	movw	r30, r14
    1b66:	c5 82       	std	Z+5, r12	; 0x05
		}
	
		/* Refresh MenuePoint */
		APP.Menue += checkEnc(&Encoder);
    1b68:	86 ef       	ldi	r24, 0xF6	; 246
    1b6a:	92 e0       	ldi	r25, 0x02	; 2
    1b6c:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
    1b70:	9e a5       	ldd	r25, Y+46	; 0x2e
    1b72:	89 0f       	add	r24, r25
    1b74:	8e a7       	std	Y+46, r24	; 0x2e
		Encoder.Cnt = 0;
    1b76:	10 92 f6 02 	sts	0x02F6, r1	; 0x8002f6 <Encoder>

		if (ReadRTC >= 250){
    1b7a:	80 91 ed 02 	lds	r24, 0x02ED	; 0x8002ed <ReadRTC>
    1b7e:	90 91 ee 02 	lds	r25, 0x02EE	; 0x8002ee <ReadRTC+0x1>
    1b82:	8a 3f       	cpi	r24, 0xFA	; 250
    1b84:	91 05       	cpc	r25, r1
    1b86:	68 f0       	brcs	.+26     	; 0x1ba2 <main+0x13c>
			
			ReadRTC = 0;
    1b88:	10 92 ee 02 	sts	0x02EE, r1	; 0x8002ee <ReadRTC+0x1>
    1b8c:	10 92 ed 02 	sts	0x02ED, r1	; 0x8002ed <ReadRTC>
			RX8564_get_Data(&RX8564_Buffer);
    1b90:	8f e2       	ldi	r24, 0x2F	; 47
    1b92:	93 e0       	ldi	r25, 0x03	; 3
    1b94:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <RX8564_get_Data>
			CompareSwitchTime(&APP,&RX8564_Buffer);
    1b98:	6f e2       	ldi	r22, 0x2F	; 47
    1b9a:	73 e0       	ldi	r23, 0x03	; 3
    1b9c:	ce 01       	movw	r24, r28
    1b9e:	0e 94 6e 07 	call	0xedc	; 0xedc <CompareSwitchTime>
		}
		
		/* check menue overflow */
		if (APP.Menue>8)
    1ba2:	8e a5       	ldd	r24, Y+46	; 0x2e
    1ba4:	89 30       	cpi	r24, 0x09	; 9
    1ba6:	14 f0       	brlt	.+4      	; 0x1bac <main+0x146>
		APP.Menue=8;
    1ba8:	de a6       	std	Y+46, r13	; 0x2e
    1baa:	03 c0       	rjmp	.+6      	; 0x1bb2 <main+0x14c>
		if (APP.Menue<=0)
    1bac:	18 16       	cp	r1, r24
    1bae:	0c f0       	brlt	.+2      	; 0x1bb2 <main+0x14c>
		APP.Menue=0;
    1bb0:	1e a6       	std	Y+46, r1	; 0x2e
		
		lcdMenue(&APP.Menue,&RX8564_Buffer);
    1bb2:	6f e2       	ldi	r22, 0x2F	; 47
    1bb4:	73 e0       	ldi	r23, 0x03	; 3
    1bb6:	85 e2       	ldi	r24, 0x25	; 37
    1bb8:	93 e0       	ldi	r25, 0x03	; 3
    1bba:	0e 94 41 08 	call	0x1082	; 0x1082 <lcdMenue>
		checkSwitchTime();
    1bbe:	0e 94 0a 08 	call	0x1014	; 0x1014 <checkSwitchTime>
	}	
    1bc2:	83 cf       	rjmp	.-250    	; 0x1aca <main+0x64>

00001bc4 <__vector_11>:
}

ISR(TIMER0_OVF_vect)
{	
    1bc4:	1f 92       	push	r1
    1bc6:	0f 92       	push	r0
    1bc8:	0f b6       	in	r0, 0x3f	; 63
    1bca:	0f 92       	push	r0
    1bcc:	11 24       	eor	r1, r1
    1bce:	8f 93       	push	r24
    1bd0:	9f 93       	push	r25
	static uint8_t pwm_cnt = 0;

	if (pwm_cnt >= 100)
    1bd2:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <pwm_cnt.2827>
    1bd6:	84 36       	cpi	r24, 0x64	; 100
    1bd8:	18 f0       	brcs	.+6      	; 0x1be0 <__vector_11+0x1c>
	pwm_cnt = 0;
    1bda:	10 92 e6 02 	sts	0x02E6, r1	; 0x8002e6 <pwm_cnt.2827>
    1bde:	03 c0       	rjmp	.+6      	; 0x1be6 <__vector_11+0x22>
	else
	pwm_cnt++;
    1be0:	8f 5f       	subi	r24, 0xFF	; 255
    1be2:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <pwm_cnt.2827>

	if (pwm_cnt >= Pwm.Channel[0])
    1be6:	90 91 ef 02 	lds	r25, 0x02EF	; 0x8002ef <Pwm>
    1bea:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <pwm_cnt.2827>
    1bee:	89 17       	cp	r24, r25
    1bf0:	10 f0       	brcs	.+4      	; 0x1bf6 <__vector_11+0x32>
	LCD_PORT &= ~(CONTRAST);	
    1bf2:	95 98       	cbi	0x12, 5	; 18
    1bf4:	01 c0       	rjmp	.+2      	; 0x1bf8 <__vector_11+0x34>
	else
	LCD_PORT |= CONTRAST;
    1bf6:	95 9a       	sbi	0x12, 5	; 18

	if (pwm_cnt >= Pwm.Channel[LED_1])
    1bf8:	90 91 f0 02 	lds	r25, 0x02F0	; 0x8002f0 <Pwm+0x1>
    1bfc:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <pwm_cnt.2827>
    1c00:	89 17       	cp	r24, r25
    1c02:	10 f0       	brcs	.+4      	; 0x1c08 <__vector_11+0x44>
	LED_PORT	|=  (STATE_LED1);
    1c04:	d8 9a       	sbi	0x1b, 0	; 27
    1c06:	01 c0       	rjmp	.+2      	; 0x1c0a <__vector_11+0x46>
	else
	LED_PORT	&=   ~(STATE_LED1);
    1c08:	d8 98       	cbi	0x1b, 0	; 27

	if (pwm_cnt >= Pwm.Channel[LED_2])
    1c0a:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <Pwm+0x2>
    1c0e:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <pwm_cnt.2827>
    1c12:	89 17       	cp	r24, r25
    1c14:	10 f0       	brcs	.+4      	; 0x1c1a <__vector_11+0x56>
	LED_PORT	|=  (STATE_LED2);
    1c16:	d9 9a       	sbi	0x1b, 1	; 27
    1c18:	01 c0       	rjmp	.+2      	; 0x1c1c <__vector_11+0x58>
	else
	LED_PORT	&=  ~(STATE_LED2);
    1c1a:	d9 98       	cbi	0x1b, 1	; 27
	
	if (pwm_cnt >= Pwm.Channel[LED_3])
    1c1c:	90 91 f2 02 	lds	r25, 0x02F2	; 0x8002f2 <Pwm+0x3>
    1c20:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <pwm_cnt.2827>
    1c24:	89 17       	cp	r24, r25
    1c26:	10 f0       	brcs	.+4      	; 0x1c2c <__vector_11+0x68>
	LED_PORT	|=  (STATE_LED3);
    1c28:	da 9a       	sbi	0x1b, 2	; 27
    1c2a:	01 c0       	rjmp	.+2      	; 0x1c2e <__vector_11+0x6a>
	else
	LED_PORT	&=  ~(STATE_LED3);
    1c2c:	da 98       	cbi	0x1b, 2	; 27

	if (pwm_cnt >= Pwm.Channel[LED_4])
    1c2e:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <Pwm+0x4>
    1c32:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <pwm_cnt.2827>
    1c36:	89 17       	cp	r24, r25
    1c38:	10 f0       	brcs	.+4      	; 0x1c3e <__vector_11+0x7a>
	LED_PORT	|=   (STATE_LED4);
    1c3a:	db 9a       	sbi	0x1b, 3	; 27
    1c3c:	01 c0       	rjmp	.+2      	; 0x1c40 <__vector_11+0x7c>
	else
	LED_PORT	&=  ~(STATE_LED4);
    1c3e:	db 98       	cbi	0x1b, 3	; 27

	if (pwm_cnt >= Pwm.Channel[LCD_BRIGHTNESS])
    1c40:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <Pwm+0x5>
    1c44:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <pwm_cnt.2827>
    1c48:	89 17       	cp	r24, r25
    1c4a:	10 f0       	brcs	.+4      	; 0x1c50 <__vector_11+0x8c>
	LCD_PORT	&=  ~(ILLUMINATION);
    1c4c:	94 98       	cbi	0x12, 4	; 18
    1c4e:	01 c0       	rjmp	.+2      	; 0x1c52 <__vector_11+0x8e>
	else
	LCD_PORT	|=   (ILLUMINATION);	
    1c50:	94 9a       	sbi	0x12, 4	; 18
	
	TCNT0 = 0xA0;
    1c52:	80 ea       	ldi	r24, 0xA0	; 160
    1c54:	82 bf       	out	0x32, r24	; 50
}
    1c56:	9f 91       	pop	r25
    1c58:	8f 91       	pop	r24
    1c5a:	0f 90       	pop	r0
    1c5c:	0f be       	out	0x3f, r0	; 63
    1c5e:	0f 90       	pop	r0
    1c60:	1f 90       	pop	r1
    1c62:	18 95       	reti

00001c64 <__vector_7>:

ISR(TIMER1_COMPA_vect)
{
    1c64:	1f 92       	push	r1
    1c66:	0f 92       	push	r0
    1c68:	0f b6       	in	r0, 0x3f	; 63
    1c6a:	0f 92       	push	r0
    1c6c:	11 24       	eor	r1, r1
    1c6e:	2f 93       	push	r18
    1c70:	3f 93       	push	r19
    1c72:	4f 93       	push	r20
    1c74:	5f 93       	push	r21
    1c76:	6f 93       	push	r22
    1c78:	7f 93       	push	r23
    1c7a:	8f 93       	push	r24
    1c7c:	9f 93       	push	r25
    1c7e:	af 93       	push	r26
    1c80:	bf 93       	push	r27
    1c82:	ef 93       	push	r30
    1c84:	ff 93       	push	r31
	#define HEARTBEAT_BRIGHT	15
	#define HEARTBEAT_ZYKLUS	1500
	
	Time.Us++;
    1c86:	ee e3       	ldi	r30, 0x3E	; 62
    1c88:	f3 e0       	ldi	r31, 0x03	; 3
    1c8a:	80 81       	ld	r24, Z
    1c8c:	91 81       	ldd	r25, Z+1	; 0x01
    1c8e:	01 96       	adiw	r24, 0x01	; 1
    1c90:	91 83       	std	Z+1, r25	; 0x01
    1c92:	80 83       	st	Z, r24
	static uint16_t Heartbeat = 0;
	Heartbeat++;
    1c94:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <__data_end>
    1c98:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <__data_end+0x1>
    1c9c:	9c 01       	movw	r18, r24
    1c9e:	2f 5f       	subi	r18, 0xFF	; 255
    1ca0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ca2:	30 93 e5 02 	sts	0x02E5, r19	; 0x8002e5 <__data_end+0x1>
    1ca6:	20 93 e4 02 	sts	0x02E4, r18	; 0x8002e4 <__data_end>
	if (Heartbeat < HEARTBEAT_ZYKLUS)
    1caa:	2c 3d       	cpi	r18, 0xDC	; 220
    1cac:	45 e0       	ldi	r20, 0x05	; 5
    1cae:	34 07       	cpc	r19, r20
    1cb0:	18 f4       	brcc	.+6      	; 0x1cb8 <__vector_7+0x54>
	{
		Pwm.Channel[LED_1] = HEARTBEAT_BRIGHT;
    1cb2:	4f e0       	ldi	r20, 0x0F	; 15
    1cb4:	40 93 f0 02 	sts	0x02F0, r20	; 0x8002f0 <Pwm+0x1>
	}
	if (Heartbeat > HEARTBEAT_ZYKLUS)
    1cb8:	2d 3d       	cpi	r18, 0xDD	; 221
    1cba:	65 e0       	ldi	r22, 0x05	; 5
    1cbc:	36 07       	cpc	r19, r22
    1cbe:	10 f0       	brcs	.+4      	; 0x1cc4 <__vector_7+0x60>
	{
		Pwm.Channel[LED_1] = 0;
    1cc0:	10 92 f0 02 	sts	0x02F0, r1	; 0x8002f0 <Pwm+0x1>
	}
	if(Heartbeat > (HEARTBEAT_ZYKLUS*2) && Heartbeat < (HEARTBEAT_ZYKLUS*3))
    1cc4:	ac 01       	movw	r20, r24
    1cc6:	48 5b       	subi	r20, 0xB8	; 184
    1cc8:	5b 40       	sbci	r21, 0x0B	; 11
    1cca:	4b 3d       	cpi	r20, 0xDB	; 219
    1ccc:	55 40       	sbci	r21, 0x05	; 5
    1cce:	18 f4       	brcc	.+6      	; 0x1cd6 <__vector_7+0x72>
	{
		Pwm.Channel[LED_1] = HEARTBEAT_BRIGHT;
    1cd0:	4f e0       	ldi	r20, 0x0F	; 15
    1cd2:	40 93 f0 02 	sts	0x02F0, r20	; 0x8002f0 <Pwm+0x1>
	}
	if (Heartbeat > (HEARTBEAT_ZYKLUS*3) && Heartbeat < (HEARTBEAT_ZYKLUS*4))
    1cd6:	ac 01       	movw	r20, r24
    1cd8:	44 59       	subi	r20, 0x94	; 148
    1cda:	51 41       	sbci	r21, 0x11	; 17
    1cdc:	4b 3d       	cpi	r20, 0xDB	; 219
    1cde:	55 40       	sbci	r21, 0x05	; 5
    1ce0:	10 f4       	brcc	.+4      	; 0x1ce6 <__vector_7+0x82>
	{
		Pwm.Channel[LED_1] = 0;
    1ce2:	10 92 f0 02 	sts	0x02F0, r1	; 0x8002f0 <Pwm+0x1>
	}
	if (Heartbeat > (HEARTBEAT_ZYKLUS*4) && Heartbeat < (HEARTBEAT_ZYKLUS*5))
    1ce6:	80 57       	subi	r24, 0x70	; 112
    1ce8:	97 41       	sbci	r25, 0x17	; 23
    1cea:	8b 3d       	cpi	r24, 0xDB	; 219
    1cec:	95 40       	sbci	r25, 0x05	; 5
    1cee:	18 f4       	brcc	.+6      	; 0x1cf6 <__vector_7+0x92>
	{
		Pwm.Channel[LED_1] = HEARTBEAT_BRIGHT;
    1cf0:	8f e0       	ldi	r24, 0x0F	; 15
    1cf2:	80 93 f0 02 	sts	0x02F0, r24	; 0x8002f0 <Pwm+0x1>
	}
	if (Heartbeat > ((uint16_t)HEARTBEAT_ZYKLUS*42))
    1cf6:	29 31       	cpi	r18, 0x19	; 25
    1cf8:	36 4f       	sbci	r19, 0xF6	; 246
    1cfa:	20 f0       	brcs	.+8      	; 0x1d04 <__vector_7+0xa0>
	{
		Heartbeat = 0;
    1cfc:	10 92 e5 02 	sts	0x02E5, r1	; 0x8002e5 <__data_end+0x1>
    1d00:	10 92 e4 02 	sts	0x02E4, r1	; 0x8002e4 <__data_end>
	}
	
	if (Time.Us >= 10)
    1d04:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <Time>
    1d08:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <Time+0x1>
    1d0c:	0a 97       	sbiw	r24, 0x0a	; 10
    1d0e:	f8 f0       	brcs	.+62     	; 0x1d4e <__vector_7+0xea>
	{
		Time.Us = 0;
    1d10:	ee e3       	ldi	r30, 0x3E	; 62
    1d12:	f3 e0       	ldi	r31, 0x03	; 3
    1d14:	11 82       	std	Z+1, r1	; 0x01
    1d16:	10 82       	st	Z, r1
		Time.Ms++;
    1d18:	82 81       	ldd	r24, Z+2	; 0x02
    1d1a:	93 81       	ldd	r25, Z+3	; 0x03
    1d1c:	01 96       	adiw	r24, 0x01	; 1
    1d1e:	93 83       	std	Z+3, r25	; 0x03
    1d20:	82 83       	std	Z+2, r24	; 0x02
		ReadRTC++;
    1d22:	80 91 ed 02 	lds	r24, 0x02ED	; 0x8002ed <ReadRTC>
    1d26:	90 91 ee 02 	lds	r25, 0x02EE	; 0x8002ee <ReadRTC+0x1>
    1d2a:	01 96       	adiw	r24, 0x01	; 1
    1d2c:	90 93 ee 02 	sts	0x02EE, r25	; 0x8002ee <ReadRTC+0x1>
    1d30:	80 93 ed 02 	sts	0x02ED, r24	; 0x8002ed <ReadRTC>
		DisplayFade++;
    1d34:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <DisplayFade>
    1d38:	90 91 eb 02 	lds	r25, 0x02EB	; 0x8002eb <DisplayFade+0x1>
    1d3c:	01 96       	adiw	r24, 0x01	; 1
    1d3e:	90 93 eb 02 	sts	0x02EB, r25	; 0x8002eb <DisplayFade+0x1>
    1d42:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <DisplayFade>
		checkEnc(&Encoder);
    1d46:	86 ef       	ldi	r24, 0xF6	; 246
    1d48:	92 e0       	ldi	r25, 0x02	; 2
    1d4a:	0e 94 a7 01 	call	0x34e	; 0x34e <checkEnc>
	}
	if (Time.Ms >= 1000)
    1d4e:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <Time+0x2>
    1d52:	90 91 41 03 	lds	r25, 0x0341	; 0x800341 <Time+0x3>
    1d56:	88 3e       	cpi	r24, 0xE8	; 232
    1d58:	93 40       	sbci	r25, 0x03	; 3
    1d5a:	18 f1       	brcs	.+70     	; 0x1da2 <__vector_7+0x13e>
	{
		APP.ChangeSystemInfo++;
    1d5c:	a7 ef       	ldi	r26, 0xF7	; 247
    1d5e:	b2 e0       	ldi	r27, 0x02	; 2
    1d60:	d7 96       	adiw	r26, 0x37	; 55
    1d62:	8c 91       	ld	r24, X
    1d64:	d7 97       	sbiw	r26, 0x37	; 55
    1d66:	8f 5f       	subi	r24, 0xFF	; 255
    1d68:	d7 96       	adiw	r26, 0x37	; 55
    1d6a:	8c 93       	st	X, r24
    1d6c:	d7 97       	sbiw	r26, 0x37	; 55
		Time.Ms = 0;
    1d6e:	ee e3       	ldi	r30, 0x3E	; 62
    1d70:	f3 e0       	ldi	r31, 0x03	; 3
    1d72:	13 82       	std	Z+3, r1	; 0x03
    1d74:	12 82       	std	Z+2, r1	; 0x02
		Time.Sec++;
    1d76:	84 81       	ldd	r24, Z+4	; 0x04
    1d78:	8f 5f       	subi	r24, 0xFF	; 255
    1d7a:	84 83       	std	Z+4, r24	; 0x04
		Time.TmeOutSec++;
    1d7c:	85 81       	ldd	r24, Z+5	; 0x05
    1d7e:	8f 5f       	subi	r24, 0xFF	; 255
    1d80:	85 83       	std	Z+5, r24	; 0x05
		Time.DispTmeOut++;
    1d82:	86 81       	ldd	r24, Z+6	; 0x06
    1d84:	8f 5f       	subi	r24, 0xFF	; 255
    1d86:	86 83       	std	Z+6, r24	; 0x06
		APP.TriacSecComp++;
    1d88:	d3 96       	adiw	r26, 0x33	; 51
    1d8a:	8c 91       	ld	r24, X
    1d8c:	d3 97       	sbiw	r26, 0x33	; 51
    1d8e:	8f 5f       	subi	r24, 0xFF	; 255
    1d90:	d3 96       	adiw	r26, 0x33	; 51
    1d92:	8c 93       	st	X, r24
    1d94:	d3 97       	sbiw	r26, 0x33	; 51
		APP.ChangeDisplay++;
    1d96:	d6 96       	adiw	r26, 0x36	; 54
    1d98:	8c 91       	ld	r24, X
    1d9a:	d6 97       	sbiw	r26, 0x36	; 54
    1d9c:	8f 5f       	subi	r24, 0xFF	; 255
    1d9e:	d6 96       	adiw	r26, 0x36	; 54
    1da0:	8c 93       	st	X, r24
	}
	
	if (Time.Sec > 59)
    1da2:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <Time+0x4>
    1da6:	8c 33       	cpi	r24, 0x3C	; 60
    1da8:	10 f0       	brcs	.+4      	; 0x1dae <__vector_7+0x14a>
	Time.Sec = 0;
    1daa:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <Time+0x4>
    1dae:	ff 91       	pop	r31
    1db0:	ef 91       	pop	r30
    1db2:	bf 91       	pop	r27
    1db4:	af 91       	pop	r26
    1db6:	9f 91       	pop	r25
    1db8:	8f 91       	pop	r24
    1dba:	7f 91       	pop	r23
    1dbc:	6f 91       	pop	r22
    1dbe:	5f 91       	pop	r21
    1dc0:	4f 91       	pop	r20
    1dc2:	3f 91       	pop	r19
    1dc4:	2f 91       	pop	r18
    1dc6:	0f 90       	pop	r0
    1dc8:	0f be       	out	0x3f, r0	; 63
    1dca:	0f 90       	pop	r0
    1dcc:	1f 90       	pop	r1
    1dce:	18 95       	reti

00001dd0 <RX8564_set_Time>:
    i2c_write(tmp_minutes); // minutes alert
    i2c_write(tmp_hour); // hour alert
    i2c_write(tmp_day); // day alert
    i2c_write(tmp_week_day); // weekday alert
    i2c_stop();  
 }
    1dd0:	1f 93       	push	r17
    1dd2:	cf 93       	push	r28
    1dd4:	df 93       	push	r29
    1dd6:	89 31       	cpi	r24, 0x19	; 25
    1dd8:	08 f0       	brcs	.+2      	; 0x1ddc <RX8564_set_Time+0xc>
    1dda:	45 c0       	rjmp	.+138    	; 0x1e66 <RX8564_set_Time+0x96>
    1ddc:	6c 33       	cpi	r22, 0x3C	; 60
    1dde:	08 f0       	brcs	.+2      	; 0x1de2 <RX8564_set_Time+0x12>
    1de0:	42 c0       	rjmp	.+132    	; 0x1e66 <RX8564_set_Time+0x96>
    1de2:	9d ec       	ldi	r25, 0xCD	; 205
    1de4:	89 9f       	mul	r24, r25
    1de6:	21 2d       	mov	r18, r1
    1de8:	11 24       	eor	r1, r1
    1dea:	26 95       	lsr	r18
    1dec:	26 95       	lsr	r18
    1dee:	26 95       	lsr	r18
    1df0:	c2 2f       	mov	r28, r18
    1df2:	c2 95       	swap	r28
    1df4:	c0 7f       	andi	r28, 0xF0	; 240
    1df6:	22 0f       	add	r18, r18
    1df8:	32 2f       	mov	r19, r18
    1dfa:	33 0f       	add	r19, r19
    1dfc:	33 0f       	add	r19, r19
    1dfe:	23 0f       	add	r18, r19
    1e00:	82 1b       	sub	r24, r18
    1e02:	c8 2b       	or	r28, r24
    1e04:	69 9f       	mul	r22, r25
    1e06:	81 2d       	mov	r24, r1
    1e08:	11 24       	eor	r1, r1
    1e0a:	86 95       	lsr	r24
    1e0c:	86 95       	lsr	r24
    1e0e:	86 95       	lsr	r24
    1e10:	d8 2f       	mov	r29, r24
    1e12:	d2 95       	swap	r29
    1e14:	d0 7f       	andi	r29, 0xF0	; 240
    1e16:	88 0f       	add	r24, r24
    1e18:	28 2f       	mov	r18, r24
    1e1a:	22 0f       	add	r18, r18
    1e1c:	22 0f       	add	r18, r18
    1e1e:	82 0f       	add	r24, r18
    1e20:	68 1b       	sub	r22, r24
    1e22:	d6 2b       	or	r29, r22
    1e24:	49 9f       	mul	r20, r25
    1e26:	91 2d       	mov	r25, r1
    1e28:	11 24       	eor	r1, r1
    1e2a:	96 95       	lsr	r25
    1e2c:	96 95       	lsr	r25
    1e2e:	96 95       	lsr	r25
    1e30:	19 2f       	mov	r17, r25
    1e32:	12 95       	swap	r17
    1e34:	10 7f       	andi	r17, 0xF0	; 240
    1e36:	99 0f       	add	r25, r25
    1e38:	89 2f       	mov	r24, r25
    1e3a:	88 0f       	add	r24, r24
    1e3c:	88 0f       	add	r24, r24
    1e3e:	98 0f       	add	r25, r24
    1e40:	49 1b       	sub	r20, r25
    1e42:	14 2b       	or	r17, r20
    1e44:	82 ea       	ldi	r24, 0xA2	; 162
    1e46:	0e 94 7b 00 	call	0xf6	; 0xf6 <i2c_start_wait>
    1e4a:	82 e0       	ldi	r24, 0x02	; 2
    1e4c:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1e50:	81 2f       	mov	r24, r17
    1e52:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1e56:	8d 2f       	mov	r24, r29
    1e58:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1e5c:	8c 2f       	mov	r24, r28
    1e5e:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1e62:	0e 94 85 00 	call	0x10a	; 0x10a <i2c_stop>
    1e66:	df 91       	pop	r29
    1e68:	cf 91       	pop	r28
    1e6a:	1f 91       	pop	r17
    1e6c:	08 95       	ret

00001e6e <RX8564_set_Date>:
    1e6e:	0f 93       	push	r16
    1e70:	1f 93       	push	r17
    1e72:	cf 93       	push	r28
    1e74:	df 93       	push	r29
    1e76:	9f ef       	ldi	r25, 0xFF	; 255
    1e78:	98 0f       	add	r25, r24
    1e7a:	9f 31       	cpi	r25, 0x1F	; 31
    1e7c:	08 f0       	brcs	.+2      	; 0x1e80 <RX8564_set_Date+0x12>
    1e7e:	61 c0       	rjmp	.+194    	; 0x1f42 <RX8564_set_Date+0xd4>
    1e80:	67 30       	cpi	r22, 0x07	; 7
    1e82:	08 f0       	brcs	.+2      	; 0x1e86 <RX8564_set_Date+0x18>
    1e84:	5e c0       	rjmp	.+188    	; 0x1f42 <RX8564_set_Date+0xd4>
    1e86:	4d 30       	cpi	r20, 0x0D	; 13
    1e88:	08 f0       	brcs	.+2      	; 0x1e8c <RX8564_set_Date+0x1e>
    1e8a:	5b c0       	rjmp	.+182    	; 0x1f42 <RX8564_set_Date+0xd4>
    1e8c:	2f 3d       	cpi	r18, 0xDF	; 223
    1e8e:	97 e0       	ldi	r25, 0x07	; 7
    1e90:	39 07       	cpc	r19, r25
    1e92:	08 f4       	brcc	.+2      	; 0x1e96 <RX8564_set_Date+0x28>
    1e94:	56 c0       	rjmp	.+172    	; 0x1f42 <RX8564_set_Date+0xd4>
    1e96:	9d ec       	ldi	r25, 0xCD	; 205
    1e98:	89 9f       	mul	r24, r25
    1e9a:	31 2d       	mov	r19, r1
    1e9c:	11 24       	eor	r1, r1
    1e9e:	36 95       	lsr	r19
    1ea0:	36 95       	lsr	r19
    1ea2:	36 95       	lsr	r19
    1ea4:	c3 2f       	mov	r28, r19
    1ea6:	c2 95       	swap	r28
    1ea8:	c0 7f       	andi	r28, 0xF0	; 240
    1eaa:	33 0f       	add	r19, r19
    1eac:	53 2f       	mov	r21, r19
    1eae:	55 0f       	add	r21, r21
    1eb0:	55 0f       	add	r21, r21
    1eb2:	35 0f       	add	r19, r21
    1eb4:	83 1b       	sub	r24, r19
    1eb6:	c8 2b       	or	r28, r24
    1eb8:	69 9f       	mul	r22, r25
    1eba:	81 2d       	mov	r24, r1
    1ebc:	11 24       	eor	r1, r1
    1ebe:	86 95       	lsr	r24
    1ec0:	86 95       	lsr	r24
    1ec2:	86 95       	lsr	r24
    1ec4:	d8 2f       	mov	r29, r24
    1ec6:	d2 95       	swap	r29
    1ec8:	d0 7f       	andi	r29, 0xF0	; 240
    1eca:	88 0f       	add	r24, r24
    1ecc:	38 2f       	mov	r19, r24
    1ece:	33 0f       	add	r19, r19
    1ed0:	33 0f       	add	r19, r19
    1ed2:	83 0f       	add	r24, r19
    1ed4:	68 1b       	sub	r22, r24
    1ed6:	d6 2b       	or	r29, r22
    1ed8:	49 9f       	mul	r20, r25
    1eda:	81 2d       	mov	r24, r1
    1edc:	11 24       	eor	r1, r1
    1ede:	86 95       	lsr	r24
    1ee0:	86 95       	lsr	r24
    1ee2:	86 95       	lsr	r24
    1ee4:	18 2f       	mov	r17, r24
    1ee6:	12 95       	swap	r17
    1ee8:	10 7f       	andi	r17, 0xF0	; 240
    1eea:	88 0f       	add	r24, r24
    1eec:	38 2f       	mov	r19, r24
    1eee:	33 0f       	add	r19, r19
    1ef0:	33 0f       	add	r19, r19
    1ef2:	83 0f       	add	r24, r19
    1ef4:	48 1b       	sub	r20, r24
    1ef6:	14 2b       	or	r17, r20
    1ef8:	20 5d       	subi	r18, 0xD0	; 208
    1efa:	29 9f       	mul	r18, r25
    1efc:	91 2d       	mov	r25, r1
    1efe:	11 24       	eor	r1, r1
    1f00:	96 95       	lsr	r25
    1f02:	96 95       	lsr	r25
    1f04:	96 95       	lsr	r25
    1f06:	09 2f       	mov	r16, r25
    1f08:	02 95       	swap	r16
    1f0a:	00 7f       	andi	r16, 0xF0	; 240
    1f0c:	99 0f       	add	r25, r25
    1f0e:	89 2f       	mov	r24, r25
    1f10:	88 0f       	add	r24, r24
    1f12:	88 0f       	add	r24, r24
    1f14:	98 0f       	add	r25, r24
    1f16:	29 1b       	sub	r18, r25
    1f18:	02 2b       	or	r16, r18
    1f1a:	82 ea       	ldi	r24, 0xA2	; 162
    1f1c:	0e 94 7b 00 	call	0xf6	; 0xf6 <i2c_start_wait>
    1f20:	85 e0       	ldi	r24, 0x05	; 5
    1f22:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1f26:	8c 2f       	mov	r24, r28
    1f28:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1f2c:	8d 2f       	mov	r24, r29
    1f2e:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1f32:	81 2f       	mov	r24, r17
    1f34:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1f38:	80 2f       	mov	r24, r16
    1f3a:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    1f3e:	0e 94 85 00 	call	0x10a	; 0x10a <i2c_stop>
    1f42:	df 91       	pop	r29
    1f44:	cf 91       	pop	r28
    1f46:	1f 91       	pop	r17
    1f48:	0f 91       	pop	r16
    1f4a:	08 95       	ret

00001f4c <RX8564_set_CLKOUT>:
  
void RX8564_set_CLKOUT(uint8_t frequency)
{    
    1f4c:	cf 93       	push	r28
    1f4e:	c8 2f       	mov	r28, r24
    i2c_start_wait(RX8564+I2C_WRITE);
    1f50:	82 ea       	ldi	r24, 0xA2	; 162
    1f52:	0e 94 7b 00 	call	0xf6	; 0xf6 <i2c_start_wait>
    i2c_write(CLKOUT_frequency_register);
    1f56:	8d e0       	ldi	r24, 0x0D	; 13
    1f58:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    i2c_write(frequency);
    1f5c:	8c 2f       	mov	r24, r28
    1f5e:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    i2c_stop();
    1f62:	0e 94 85 00 	call	0x10a	; 0x10a <i2c_stop>
}
    1f66:	cf 91       	pop	r28
    1f68:	08 95       	ret

00001f6a <RX8564_get_Data>:
 
void RX8564_get_Data(RX8564_t *Buffer)          
{   
    1f6a:	cf 93       	push	r28
    1f6c:	df 93       	push	r29
    1f6e:	ec 01       	movw	r28, r24
    sei();
    1f70:	78 94       	sei
    i2c_start_wait(RX8564+I2C_WRITE);
    1f72:	82 ea       	ldi	r24, 0xA2	; 162
    1f74:	0e 94 7b 00 	call	0xf6	; 0xf6 <i2c_start_wait>
    i2c_write(0x02);
    1f78:	82 e0       	ldi	r24, 0x02	; 2
    1f7a:	0e 94 8d 00 	call	0x11a	; 0x11a <i2c_write>
    i2c_rep_start(RX8564+I2C_READ);
    1f7e:	83 ea       	ldi	r24, 0xA3	; 163
    1f80:	0e 94 71 00 	call	0xe2	; 0xe2 <i2c_rep_start>
    Buffer->Sec         = i2c_readAck();
    1f84:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1f88:	88 83       	st	Y, r24
    Buffer->Min         = i2c_readAck();   
    1f8a:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1f8e:	89 83       	std	Y+1, r24	; 0x01
    Buffer->Std         = i2c_readAck();
    1f90:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1f94:	8a 83       	std	Y+2, r24	; 0x02
    Buffer->Day         = i2c_readAck();
    1f96:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1f9a:	8c 83       	std	Y+4, r24	; 0x04
    Buffer->DayN        = i2c_readAck();
    1f9c:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1fa0:	8d 83       	std	Y+5, r24	; 0x05
    Buffer->Mon         = i2c_readAck();
    1fa2:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1fa6:	8b 83       	std	Y+3, r24	; 0x03
    Buffer->Yea         = i2c_readAck();
    1fa8:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1fac:	90 e0       	ldi	r25, 0x00	; 0
    1fae:	9f 83       	std	Y+7, r25	; 0x07
    1fb0:	8e 83       	std	Y+6, r24	; 0x06
    Buffer->Alrt_Min    = i2c_readAck();
    1fb2:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1fb6:	88 87       	std	Y+8, r24	; 0x08
    Buffer->Alrt_Std    = i2c_readAck();
    1fb8:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1fbc:	89 87       	std	Y+9, r24	; 0x09
    Buffer->Alrt_Day    = i2c_readAck();
    1fbe:	0e 94 ab 00 	call	0x156	; 0x156 <i2c_readAck>
    1fc2:	8a 87       	std	Y+10, r24	; 0x0a
    Buffer->Alrt_Dayn   = i2c_readNak();
    1fc4:	0e 94 a9 00 	call	0x152	; 0x152 <i2c_readNak>
    1fc8:	8b 87       	std	Y+11, r24	; 0x0b
    i2c_stop();
    1fca:	0e 94 85 00 	call	0x10a	; 0x10a <i2c_stop>
 
    Buffer->Sec			&= 0x7F;
    1fce:	28 81       	ld	r18, Y
    1fd0:	2f 77       	andi	r18, 0x7F	; 127
    1fd2:	28 83       	st	Y, r18
    Buffer->Min			&= 0x7F;
    1fd4:	99 81       	ldd	r25, Y+1	; 0x01
    1fd6:	9f 77       	andi	r25, 0x7F	; 127
    1fd8:	99 83       	std	Y+1, r25	; 0x01
    Buffer->Std			&= 0x3F;
    1fda:	8a 81       	ldd	r24, Y+2	; 0x02
    1fdc:	8f 73       	andi	r24, 0x3F	; 63
    1fde:	8a 83       	std	Y+2, r24	; 0x02
          
    Buffer->Day			&= 0x3F;
    1fe0:	3c 81       	ldd	r19, Y+4	; 0x04
    1fe2:	3f 73       	andi	r19, 0x3F	; 63
    1fe4:	3c 83       	std	Y+4, r19	; 0x04
    Buffer->Mon			&= 0x1F;
    1fe6:	3b 81       	ldd	r19, Y+3	; 0x03
    1fe8:	3f 71       	andi	r19, 0x1F	; 31
    1fea:	3b 83       	std	Y+3, r19	; 0x03
    Buffer->DayN		&= 0x07;
    1fec:	3d 81       	ldd	r19, Y+5	; 0x05
    1fee:	37 70       	andi	r19, 0x07	; 7
    1ff0:	3d 83       	std	Y+5, r19	; 0x05
     
    /* mask the msb from byte ( Alert Flag! ) */
    Buffer->Alrt_Min	&= 0x7F;
    1ff2:	38 85       	ldd	r19, Y+8	; 0x08
    1ff4:	3f 77       	andi	r19, 0x7F	; 127
    1ff6:	38 87       	std	Y+8, r19	; 0x08
    Buffer->Alrt_Std	&= 0x7F;
    1ff8:	39 85       	ldd	r19, Y+9	; 0x09
    1ffa:	3f 77       	andi	r19, 0x7F	; 127
    1ffc:	39 87       	std	Y+9, r19	; 0x09
    Buffer->Alrt_Day    &= 0x7F;
    1ffe:	3a 85       	ldd	r19, Y+10	; 0x0a
    2000:	3f 77       	andi	r19, 0x7F	; 127
    2002:	3a 87       	std	Y+10, r19	; 0x0a
    Buffer->Alrt_Dayn	&= 0x7F;
    2004:	3b 85       	ldd	r19, Y+11	; 0x0b
    2006:	3f 77       	andi	r19, 0x7F	; 127
    2008:	3b 87       	std	Y+11, r19	; 0x0b

	volatile static uint8_t new_hour_old;
     
    /* begin a new hour */
	if ((Buffer->Std != new_hour_old) && (Buffer->Min == 0x00) && (Buffer->Sec <= 0x01))
    200a:	30 91 f5 02 	lds	r19, 0x02F5	; 0x8002f5 <new_hour_old.1981>
    200e:	83 17       	cp	r24, r19
    2010:	41 f0       	breq	.+16     	; 0x2022 <RX8564_get_Data+0xb8>
    2012:	91 11       	cpse	r25, r1
    2014:	06 c0       	rjmp	.+12     	; 0x2022 <RX8564_get_Data+0xb8>
    2016:	22 30       	cpi	r18, 0x02	; 2
    2018:	20 f4       	brcc	.+8      	; 0x2022 <RX8564_get_Data+0xb8>
	{
		new_hour_old = Buffer->Std;
    201a:	80 93 f5 02 	sts	0x02F5, r24	; 0x8002f5 <new_hour_old.1981>
		Buffer->New_Std = 0x01;
    201e:	81 e0       	ldi	r24, 0x01	; 1
    2020:	8c 87       	std	Y+12, r24	; 0x0c
	}

	      
}
    2022:	df 91       	pop	r29
    2024:	cf 91       	pop	r28
    2026:	08 95       	ret

00002028 <bcd_ttostr>:


char *bcd_ttostr(uint8_t hour, uint8_t min, uint8_t sec)
{
	/* BCD to ASCII */
	time[0] = ' ';
    2028:	e5 e4       	ldi	r30, 0x45	; 69
    202a:	f3 e0       	ldi	r31, 0x03	; 3
    202c:	90 e2       	ldi	r25, 0x20	; 32
    202e:	90 83       	st	Z, r25
	time[1] = ' ';
    2030:	91 83       	std	Z+1, r25	; 0x01
	time[2] = ' ';
    2032:	92 83       	std	Z+2, r25	; 0x02
	time[3] = ' ';
    2034:	93 83       	std	Z+3, r25	; 0x03
	time[4] = (hour >> 4) + 48;
    2036:	28 2f       	mov	r18, r24
    2038:	22 95       	swap	r18
    203a:	2f 70       	andi	r18, 0x0F	; 15
    203c:	20 5d       	subi	r18, 0xD0	; 208
    203e:	24 83       	std	Z+4, r18	; 0x04
	time[5] = (hour & 0x0F) + 48;
    2040:	8f 70       	andi	r24, 0x0F	; 15
    2042:	80 5d       	subi	r24, 0xD0	; 208
    2044:	85 83       	std	Z+5, r24	; 0x05
	time[6] = ':';
    2046:	2a e3       	ldi	r18, 0x3A	; 58
    2048:	26 83       	std	Z+6, r18	; 0x06
	time[7] = (min >> 4) + 48;
    204a:	86 2f       	mov	r24, r22
    204c:	82 95       	swap	r24
    204e:	8f 70       	andi	r24, 0x0F	; 15
    2050:	80 5d       	subi	r24, 0xD0	; 208
    2052:	87 83       	std	Z+7, r24	; 0x07
	time[8] = (min & 0x0F) + 48;
    2054:	6f 70       	andi	r22, 0x0F	; 15
    2056:	60 5d       	subi	r22, 0xD0	; 208
    2058:	60 87       	std	Z+8, r22	; 0x08
	time[9] = ':';
    205a:	21 87       	std	Z+9, r18	; 0x09
	time[10] = (sec >> 4) + 48;
    205c:	84 2f       	mov	r24, r20
    205e:	82 95       	swap	r24
    2060:	8f 70       	andi	r24, 0x0F	; 15
    2062:	80 5d       	subi	r24, 0xD0	; 208
    2064:	82 87       	std	Z+10, r24	; 0x0a
	time[11] = (sec & 0x0F) + 48;
    2066:	4f 70       	andi	r20, 0x0F	; 15
    2068:	40 5d       	subi	r20, 0xD0	; 208
    206a:	43 87       	std	Z+11, r20	; 0x0b
	time[12] = ' ';
    206c:	94 87       	std	Z+12, r25	; 0x0c
	time[13] = ' ';
    206e:	95 87       	std	Z+13, r25	; 0x0d
	time[14] = ' ';
    2070:	96 87       	std	Z+14, r25	; 0x0e
	time[15] = ' ';
    2072:	97 87       	std	Z+15, r25	; 0x0f
	time[16] = '\0';
    2074:	10 8a       	std	Z+16, r1	; 0x10
	
	return time;
}
    2076:	cf 01       	movw	r24, r30
    2078:	08 95       	ret

0000207a <dec_ttostr>:

char *dec_ttostr(uint8_t hour, uint8_t min, uint8_t sec, uint8_t blink_)
{
	/* DEC to ASCII */
	time[0] = ' ';
    207a:	e5 e4       	ldi	r30, 0x45	; 69
    207c:	f3 e0       	ldi	r31, 0x03	; 3
    207e:	90 e2       	ldi	r25, 0x20	; 32
    2080:	90 83       	st	Z, r25
	time[1]  = ' ';
    2082:	91 83       	std	Z+1, r25	; 0x01
	time[2]  = ' ';
    2084:	92 83       	std	Z+2, r25	; 0x02
	time[3] = ' ';
    2086:	93 83       	std	Z+3, r25	; 0x03

	if (blink_ & 1<<0)
    2088:	20 ff       	sbrs	r18, 0
    208a:	13 c0       	rjmp	.+38     	; 0x20b2 <dec_ttostr+0x38>
	{
		time[4]  = ((hour / 10)) + 48;
    208c:	9d ec       	ldi	r25, 0xCD	; 205
    208e:	89 9f       	mul	r24, r25
    2090:	91 2d       	mov	r25, r1
    2092:	11 24       	eor	r1, r1
    2094:	96 95       	lsr	r25
    2096:	96 95       	lsr	r25
    2098:	96 95       	lsr	r25
    209a:	30 e3       	ldi	r19, 0x30	; 48
    209c:	39 0f       	add	r19, r25
    209e:	34 83       	std	Z+4, r19	; 0x04
		time[5]  = (hour % 10) + 48;
    20a0:	99 0f       	add	r25, r25
    20a2:	39 2f       	mov	r19, r25
    20a4:	33 0f       	add	r19, r19
    20a6:	33 0f       	add	r19, r19
    20a8:	93 0f       	add	r25, r19
    20aa:	89 1b       	sub	r24, r25
    20ac:	80 5d       	subi	r24, 0xD0	; 208
    20ae:	85 83       	std	Z+5, r24	; 0x05
    20b0:	05 c0       	rjmp	.+10     	; 0x20bc <dec_ttostr+0x42>
	}
	else
	{
		time[4] = ' ';
    20b2:	e5 e4       	ldi	r30, 0x45	; 69
    20b4:	f3 e0       	ldi	r31, 0x03	; 3
    20b6:	80 e2       	ldi	r24, 0x20	; 32
    20b8:	84 83       	std	Z+4, r24	; 0x04
		time[5] = ' ';
    20ba:	85 83       	std	Z+5, r24	; 0x05
	}

	time[6]  = ':';
    20bc:	8a e3       	ldi	r24, 0x3A	; 58
    20be:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <time+0x6>

	if(blink_ & 1<<1)
    20c2:	21 ff       	sbrs	r18, 1
    20c4:	15 c0       	rjmp	.+42     	; 0x20f0 <dec_ttostr+0x76>
	{
		time[7]  = ((min / 10)) + 48;
    20c6:	e5 e4       	ldi	r30, 0x45	; 69
    20c8:	f3 e0       	ldi	r31, 0x03	; 3
    20ca:	8d ec       	ldi	r24, 0xCD	; 205
    20cc:	68 9f       	mul	r22, r24
    20ce:	81 2d       	mov	r24, r1
    20d0:	11 24       	eor	r1, r1
    20d2:	86 95       	lsr	r24
    20d4:	86 95       	lsr	r24
    20d6:	86 95       	lsr	r24
    20d8:	90 e3       	ldi	r25, 0x30	; 48
    20da:	98 0f       	add	r25, r24
    20dc:	97 83       	std	Z+7, r25	; 0x07
		time[8]  = (min % 10) + 48;
    20de:	88 0f       	add	r24, r24
    20e0:	98 2f       	mov	r25, r24
    20e2:	99 0f       	add	r25, r25
    20e4:	99 0f       	add	r25, r25
    20e6:	89 0f       	add	r24, r25
    20e8:	68 1b       	sub	r22, r24
    20ea:	60 5d       	subi	r22, 0xD0	; 208
    20ec:	60 87       	std	Z+8, r22	; 0x08
    20ee:	05 c0       	rjmp	.+10     	; 0x20fa <dec_ttostr+0x80>
	}
	else
	{
		time[7] = ' ';
    20f0:	e5 e4       	ldi	r30, 0x45	; 69
    20f2:	f3 e0       	ldi	r31, 0x03	; 3
    20f4:	80 e2       	ldi	r24, 0x20	; 32
    20f6:	87 83       	std	Z+7, r24	; 0x07
		time[8] = ' ';
    20f8:	80 87       	std	Z+8, r24	; 0x08
	}

	time[9]  = ':';
    20fa:	8a e3       	ldi	r24, 0x3A	; 58
    20fc:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <time+0x9>

	if (blink_ & 1<<2)
    2100:	22 ff       	sbrs	r18, 2
    2102:	15 c0       	rjmp	.+42     	; 0x212e <dec_ttostr+0xb4>
	{
		time[10]  = ((sec / 10)) + 48;
    2104:	e5 e4       	ldi	r30, 0x45	; 69
    2106:	f3 e0       	ldi	r31, 0x03	; 3
    2108:	8d ec       	ldi	r24, 0xCD	; 205
    210a:	48 9f       	mul	r20, r24
    210c:	81 2d       	mov	r24, r1
    210e:	11 24       	eor	r1, r1
    2110:	86 95       	lsr	r24
    2112:	86 95       	lsr	r24
    2114:	86 95       	lsr	r24
    2116:	90 e3       	ldi	r25, 0x30	; 48
    2118:	98 0f       	add	r25, r24
    211a:	92 87       	std	Z+10, r25	; 0x0a
		time[11]  = (sec % 10) + 48;
    211c:	88 0f       	add	r24, r24
    211e:	98 2f       	mov	r25, r24
    2120:	99 0f       	add	r25, r25
    2122:	99 0f       	add	r25, r25
    2124:	89 0f       	add	r24, r25
    2126:	48 1b       	sub	r20, r24
    2128:	40 5d       	subi	r20, 0xD0	; 208
    212a:	43 87       	std	Z+11, r20	; 0x0b
    212c:	05 c0       	rjmp	.+10     	; 0x2138 <dec_ttostr+0xbe>
	}
	else
	{
		time[10] = ' ';
    212e:	e5 e4       	ldi	r30, 0x45	; 69
    2130:	f3 e0       	ldi	r31, 0x03	; 3
    2132:	80 e2       	ldi	r24, 0x20	; 32
    2134:	82 87       	std	Z+10, r24	; 0x0a
		time[11] = ' ';
    2136:	83 87       	std	Z+11, r24	; 0x0b
	}


	time[12] = ' ';
    2138:	e5 e4       	ldi	r30, 0x45	; 69
    213a:	f3 e0       	ldi	r31, 0x03	; 3
    213c:	80 e2       	ldi	r24, 0x20	; 32
    213e:	84 87       	std	Z+12, r24	; 0x0c
	time[13] = ' ';
    2140:	85 87       	std	Z+13, r24	; 0x0d
	time[14] = ' ';
    2142:	86 87       	std	Z+14, r24	; 0x0e
	time[15] = ' ';
    2144:	87 87       	std	Z+15, r24	; 0x0f
	time[16] = '\0';
    2146:	10 8a       	std	Z+16, r1	; 0x10
	
	return time;
}
    2148:	cf 01       	movw	r24, r30
    214a:	08 95       	ret

0000214c <bcd_dtostr>:

char *bcd_dtostr(uint8_t day, uint8_t month, uint16_t year, char Day_Name)
{
    214c:	cf 93       	push	r28
    214e:	df 93       	push	r29
    2150:	e2 2f       	mov	r30, r18
	uint8_t tmp;
	
	/* BCD  to ASCII */
	date[0]		= ' ';
    2152:	c0 e5       	ldi	r28, 0x50	; 80
    2154:	d3 e0       	ldi	r29, 0x03	; 3
    2156:	f0 e2       	ldi	r31, 0x20	; 32
    2158:	f8 83       	st	Y, r31
	date[1]		= ' ';
    215a:	f9 83       	std	Y+1, r31	; 0x01
	date[2]		= (day >> 4) + 48; // ten
    215c:	98 2f       	mov	r25, r24
    215e:	92 95       	swap	r25
    2160:	9f 70       	andi	r25, 0x0F	; 15
    2162:	90 5d       	subi	r25, 0xD0	; 208
    2164:	9a 83       	std	Y+2, r25	; 0x02
	date[3]		= (day & 0x0F) + 48; // ones
    2166:	8f 70       	andi	r24, 0x0F	; 15
    2168:	80 5d       	subi	r24, 0xD0	; 208
    216a:	8b 83       	std	Y+3, r24	; 0x03
	date[4]		= '.'; // point
    216c:	9e e2       	ldi	r25, 0x2E	; 46
    216e:	9c 83       	std	Y+4, r25	; 0x04
	date[5]		= (month >> 4) + 48; // ten
    2170:	86 2f       	mov	r24, r22
    2172:	82 95       	swap	r24
    2174:	8f 70       	andi	r24, 0x0F	; 15
    2176:	80 5d       	subi	r24, 0xD0	; 208
    2178:	8d 83       	std	Y+5, r24	; 0x05
	date[6]		= (month & 0x0F) + 48; // ones
    217a:	6f 70       	andi	r22, 0x0F	; 15
    217c:	60 5d       	subi	r22, 0xD0	; 208
    217e:	6e 83       	std	Y+6, r22	; 0x06
	date[7]		= '.'; // point
    2180:	9f 83       	std	Y+7, r25	; 0x07
	
	date[8]		= (year / 1000) + 48; // thousand 
    2182:	9a 01       	movw	r18, r20
    2184:	36 95       	lsr	r19
    2186:	27 95       	ror	r18
    2188:	36 95       	lsr	r19
    218a:	27 95       	ror	r18
    218c:	36 95       	lsr	r19
    218e:	27 95       	ror	r18
    2190:	a5 ec       	ldi	r26, 0xC5	; 197
    2192:	b0 e2       	ldi	r27, 0x20	; 32
    2194:	0e 94 37 12 	call	0x246e	; 0x246e <__umulhisi3>
    2198:	92 95       	swap	r25
    219a:	82 95       	swap	r24
    219c:	8f 70       	andi	r24, 0x0F	; 15
    219e:	89 27       	eor	r24, r25
    21a0:	9f 70       	andi	r25, 0x0F	; 15
    21a2:	89 27       	eor	r24, r25
    21a4:	20 e3       	ldi	r18, 0x30	; 48
    21a6:	28 0f       	add	r18, r24
    21a8:	28 87       	std	Y+8, r18	; 0x08
	tmp			= year % 1000;
    21aa:	68 ee       	ldi	r22, 0xE8	; 232
    21ac:	73 e0       	ldi	r23, 0x03	; 3
    21ae:	86 9f       	mul	r24, r22
    21b0:	90 01       	movw	r18, r0
    21b2:	87 9f       	mul	r24, r23
    21b4:	30 0d       	add	r19, r0
    21b6:	96 9f       	mul	r25, r22
    21b8:	30 0d       	add	r19, r0
    21ba:	11 24       	eor	r1, r1
    21bc:	42 1b       	sub	r20, r18
    21be:	53 0b       	sbc	r21, r19
	
	date[9]		= (tmp / 100) + 48; // hounder
    21c0:	89 e2       	ldi	r24, 0x29	; 41
    21c2:	48 9f       	mul	r20, r24
    21c4:	81 2d       	mov	r24, r1
    21c6:	11 24       	eor	r1, r1
    21c8:	82 95       	swap	r24
    21ca:	8f 70       	andi	r24, 0x0F	; 15
    21cc:	90 e3       	ldi	r25, 0x30	; 48
    21ce:	98 0f       	add	r25, r24
    21d0:	99 87       	std	Y+9, r25	; 0x09
	tmp			= tmp % 100;
    21d2:	94 e6       	ldi	r25, 0x64	; 100
    21d4:	89 9f       	mul	r24, r25
    21d6:	40 19       	sub	r20, r0
    21d8:	11 24       	eor	r1, r1
	
	year -= 2000;
	
	date[10]		=  (tmp >> 4) + 48; // tens
    21da:	84 2f       	mov	r24, r20
    21dc:	82 95       	swap	r24
    21de:	8f 70       	andi	r24, 0x0F	; 15
    21e0:	80 5d       	subi	r24, 0xD0	; 208
    21e2:	8a 87       	std	Y+10, r24	; 0x0a
	date[11]		=  (tmp & 0x0F) + 48;
    21e4:	4f 70       	andi	r20, 0x0F	; 15
    21e6:	40 5d       	subi	r20, 0xD0	; 208
    21e8:	4b 87       	std	Y+11, r20	; 0x0b
	date[12]	= ' '; // empty 
    21ea:	fc 87       	std	Y+12, r31	; 0x0c

	switch(Day_Name)
    21ec:	8e 2f       	mov	r24, r30
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	fc 01       	movw	r30, r24
    21f2:	31 97       	sbiw	r30, 0x01	; 1
    21f4:	e7 30       	cpi	r30, 0x07	; 7
    21f6:	f1 05       	cpc	r31, r1
    21f8:	a8 f5       	brcc	.+106    	; 0x2264 <bcd_dtostr+0x118>
    21fa:	ed 5c       	subi	r30, 0xCD	; 205
    21fc:	ff 4f       	sbci	r31, 0xFF	; 255
    21fe:	0c 94 31 12 	jmp	0x2462	; 0x2462 <__tablejump2__>
	{
		case 1 :{date[13] = 'S'; date[14] = 'o';}break; // So
    2202:	e0 e5       	ldi	r30, 0x50	; 80
    2204:	f3 e0       	ldi	r31, 0x03	; 3
    2206:	83 e5       	ldi	r24, 0x53	; 83
    2208:	85 87       	std	Z+13, r24	; 0x0d
    220a:	8f e6       	ldi	r24, 0x6F	; 111
    220c:	86 87       	std	Z+14, r24	; 0x0e
    220e:	2c c0       	rjmp	.+88     	; 0x2268 <bcd_dtostr+0x11c>
		case 2 :{date[13] = 'M'; date[14] = 'o';}break; // Mo
    2210:	e0 e5       	ldi	r30, 0x50	; 80
    2212:	f3 e0       	ldi	r31, 0x03	; 3
    2214:	8d e4       	ldi	r24, 0x4D	; 77
    2216:	85 87       	std	Z+13, r24	; 0x0d
    2218:	8f e6       	ldi	r24, 0x6F	; 111
    221a:	86 87       	std	Z+14, r24	; 0x0e
    221c:	25 c0       	rjmp	.+74     	; 0x2268 <bcd_dtostr+0x11c>
		case 3 :{date[13] = 'D'; date[14] = 'i';}break; // Di
    221e:	e0 e5       	ldi	r30, 0x50	; 80
    2220:	f3 e0       	ldi	r31, 0x03	; 3
    2222:	84 e4       	ldi	r24, 0x44	; 68
    2224:	85 87       	std	Z+13, r24	; 0x0d
    2226:	89 e6       	ldi	r24, 0x69	; 105
    2228:	86 87       	std	Z+14, r24	; 0x0e
    222a:	1e c0       	rjmp	.+60     	; 0x2268 <bcd_dtostr+0x11c>
		case 4 :{date[13] = 'M'; date[14] = 'i';}break; // Mi
    222c:	e0 e5       	ldi	r30, 0x50	; 80
    222e:	f3 e0       	ldi	r31, 0x03	; 3
    2230:	8d e4       	ldi	r24, 0x4D	; 77
    2232:	85 87       	std	Z+13, r24	; 0x0d
    2234:	89 e6       	ldi	r24, 0x69	; 105
    2236:	86 87       	std	Z+14, r24	; 0x0e
    2238:	17 c0       	rjmp	.+46     	; 0x2268 <bcd_dtostr+0x11c>
		case 5 :{date[13] = 'D'; date[14] = 'o';}break; // Do
    223a:	e0 e5       	ldi	r30, 0x50	; 80
    223c:	f3 e0       	ldi	r31, 0x03	; 3
    223e:	84 e4       	ldi	r24, 0x44	; 68
    2240:	85 87       	std	Z+13, r24	; 0x0d
    2242:	8f e6       	ldi	r24, 0x6F	; 111
    2244:	86 87       	std	Z+14, r24	; 0x0e
    2246:	10 c0       	rjmp	.+32     	; 0x2268 <bcd_dtostr+0x11c>
		case 6 :{date[13] = 'F'; date[14] = 'r';}break; // Fr
    2248:	e0 e5       	ldi	r30, 0x50	; 80
    224a:	f3 e0       	ldi	r31, 0x03	; 3
    224c:	86 e4       	ldi	r24, 0x46	; 70
    224e:	85 87       	std	Z+13, r24	; 0x0d
    2250:	82 e7       	ldi	r24, 0x72	; 114
    2252:	86 87       	std	Z+14, r24	; 0x0e
    2254:	09 c0       	rjmp	.+18     	; 0x2268 <bcd_dtostr+0x11c>
		case 7 :{date[13] = 'S'; date[14] = 'a';}break;	// Sa
    2256:	e0 e5       	ldi	r30, 0x50	; 80
    2258:	f3 e0       	ldi	r31, 0x03	; 3
    225a:	83 e5       	ldi	r24, 0x53	; 83
    225c:	85 87       	std	Z+13, r24	; 0x0d
    225e:	81 e6       	ldi	r24, 0x61	; 97
    2260:	86 87       	std	Z+14, r24	; 0x0e
    2262:	02 c0       	rjmp	.+4      	; 0x2268 <bcd_dtostr+0x11c>
		
		default :{date[13] = '\0';}break; // string termination
    2264:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <date+0xd>
	}
	
	date[15] = ' ';
    2268:	e0 e5       	ldi	r30, 0x50	; 80
    226a:	f3 e0       	ldi	r31, 0x03	; 3
    226c:	80 e2       	ldi	r24, 0x20	; 32
    226e:	87 87       	std	Z+15, r24	; 0x0f
	date[16] = '\0'; // string termination
    2270:	10 8a       	std	Z+16, r1	; 0x10

	
	
	return date;
}
    2272:	cf 01       	movw	r24, r30
    2274:	df 91       	pop	r29
    2276:	cf 91       	pop	r28
    2278:	08 95       	ret

0000227a <dec_dtostr>:

char *dec_dtostr(uint8_t day, uint8_t month, uint16_t year, char Day_Name, uint8_t blink_)
{
    227a:	0f 93       	push	r16
    227c:	cf 93       	push	r28
    227e:	df 93       	push	r29
    2280:	e2 2f       	mov	r30, r18
	uint8_t tmp;
	
	date[0] = ' ';
    2282:	a0 e5       	ldi	r26, 0x50	; 80
    2284:	b3 e0       	ldi	r27, 0x03	; 3
    2286:	90 e2       	ldi	r25, 0x20	; 32
    2288:	9c 93       	st	X, r25
	date[1] = ' ';
    228a:	11 96       	adiw	r26, 0x01	; 1
    228c:	9c 93       	st	X, r25
    228e:	11 97       	sbiw	r26, 0x01	; 1
	
	
	/* DEC  to ASCII */
	if (blink_ & 1<<0)
    2290:	00 ff       	sbrs	r16, 0
    2292:	16 c0       	rjmp	.+44     	; 0x22c0 <dec_dtostr+0x46>
	{
			date[2]		= (day / 10) + 48; // ten
    2294:	9d ec       	ldi	r25, 0xCD	; 205
    2296:	89 9f       	mul	r24, r25
    2298:	91 2d       	mov	r25, r1
    229a:	11 24       	eor	r1, r1
    229c:	96 95       	lsr	r25
    229e:	96 95       	lsr	r25
    22a0:	96 95       	lsr	r25
    22a2:	20 e3       	ldi	r18, 0x30	; 48
    22a4:	29 0f       	add	r18, r25
    22a6:	12 96       	adiw	r26, 0x02	; 2
    22a8:	2c 93       	st	X, r18
    22aa:	12 97       	sbiw	r26, 0x02	; 2
			date[3]		= (day % 10) + 48; // ones
    22ac:	99 0f       	add	r25, r25
    22ae:	29 2f       	mov	r18, r25
    22b0:	22 0f       	add	r18, r18
    22b2:	22 0f       	add	r18, r18
    22b4:	92 0f       	add	r25, r18
    22b6:	89 1b       	sub	r24, r25
    22b8:	80 5d       	subi	r24, 0xD0	; 208
    22ba:	13 96       	adiw	r26, 0x03	; 3
    22bc:	8c 93       	st	X, r24
    22be:	08 c0       	rjmp	.+16     	; 0x22d0 <dec_dtostr+0x56>
	}
	else
	{
			date[2]		= ' '; // ten
    22c0:	a0 e5       	ldi	r26, 0x50	; 80
    22c2:	b3 e0       	ldi	r27, 0x03	; 3
    22c4:	80 e2       	ldi	r24, 0x20	; 32
    22c6:	12 96       	adiw	r26, 0x02	; 2
    22c8:	8c 93       	st	X, r24
    22ca:	12 97       	sbiw	r26, 0x02	; 2
			date[3]		= ' '; // ones
    22cc:	13 96       	adiw	r26, 0x03	; 3
    22ce:	8c 93       	st	X, r24
	}
	
	date[4]		= '.'; // point
    22d0:	8e e2       	ldi	r24, 0x2E	; 46
    22d2:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <date+0x4>
	
	if (blink_ & 1<<1)
    22d6:	01 ff       	sbrs	r16, 1
    22d8:	18 c0       	rjmp	.+48     	; 0x230a <dec_dtostr+0x90>
	{
		date[5]		= (month / 10) + 48; // ten
    22da:	a0 e5       	ldi	r26, 0x50	; 80
    22dc:	b3 e0       	ldi	r27, 0x03	; 3
    22de:	8d ec       	ldi	r24, 0xCD	; 205
    22e0:	68 9f       	mul	r22, r24
    22e2:	81 2d       	mov	r24, r1
    22e4:	11 24       	eor	r1, r1
    22e6:	86 95       	lsr	r24
    22e8:	86 95       	lsr	r24
    22ea:	86 95       	lsr	r24
    22ec:	90 e3       	ldi	r25, 0x30	; 48
    22ee:	98 0f       	add	r25, r24
    22f0:	15 96       	adiw	r26, 0x05	; 5
    22f2:	9c 93       	st	X, r25
    22f4:	15 97       	sbiw	r26, 0x05	; 5
		date[6]		= (month % 10) + 48; // ones
    22f6:	88 0f       	add	r24, r24
    22f8:	98 2f       	mov	r25, r24
    22fa:	99 0f       	add	r25, r25
    22fc:	99 0f       	add	r25, r25
    22fe:	89 0f       	add	r24, r25
    2300:	68 1b       	sub	r22, r24
    2302:	60 5d       	subi	r22, 0xD0	; 208
    2304:	16 96       	adiw	r26, 0x06	; 6
    2306:	6c 93       	st	X, r22
    2308:	08 c0       	rjmp	.+16     	; 0x231a <dec_dtostr+0xa0>
	}
	else
	{
		date[5]		= ' '; // ten
    230a:	a0 e5       	ldi	r26, 0x50	; 80
    230c:	b3 e0       	ldi	r27, 0x03	; 3
    230e:	80 e2       	ldi	r24, 0x20	; 32
    2310:	15 96       	adiw	r26, 0x05	; 5
    2312:	8c 93       	st	X, r24
    2314:	15 97       	sbiw	r26, 0x05	; 5
		date[6]		= ' '; // ones
    2316:	16 96       	adiw	r26, 0x06	; 6
    2318:	8c 93       	st	X, r24
	}
	
	date[7]		= '.'; // point
    231a:	c0 e5       	ldi	r28, 0x50	; 80
    231c:	d3 e0       	ldi	r29, 0x03	; 3
    231e:	8e e2       	ldi	r24, 0x2E	; 46
    2320:	8f 83       	std	Y+7, r24	; 0x07
	
	
	date[8]		= (year / 1000) + 48; // thousand
    2322:	9a 01       	movw	r18, r20
    2324:	36 95       	lsr	r19
    2326:	27 95       	ror	r18
    2328:	36 95       	lsr	r19
    232a:	27 95       	ror	r18
    232c:	36 95       	lsr	r19
    232e:	27 95       	ror	r18
    2330:	a5 ec       	ldi	r26, 0xC5	; 197
    2332:	b0 e2       	ldi	r27, 0x20	; 32
    2334:	0e 94 37 12 	call	0x246e	; 0x246e <__umulhisi3>
    2338:	92 95       	swap	r25
    233a:	82 95       	swap	r24
    233c:	8f 70       	andi	r24, 0x0F	; 15
    233e:	89 27       	eor	r24, r25
    2340:	9f 70       	andi	r25, 0x0F	; 15
    2342:	89 27       	eor	r24, r25
    2344:	20 e3       	ldi	r18, 0x30	; 48
    2346:	28 0f       	add	r18, r24
    2348:	28 87       	std	Y+8, r18	; 0x08
	tmp			= year % 1000;
    234a:	68 ee       	ldi	r22, 0xE8	; 232
    234c:	73 e0       	ldi	r23, 0x03	; 3
    234e:	86 9f       	mul	r24, r22
    2350:	90 01       	movw	r18, r0
    2352:	87 9f       	mul	r24, r23
    2354:	30 0d       	add	r19, r0
    2356:	96 9f       	mul	r25, r22
    2358:	30 0d       	add	r19, r0
    235a:	11 24       	eor	r1, r1
    235c:	42 1b       	sub	r20, r18
    235e:	53 0b       	sbc	r21, r19
		
	date[9]		= (tmp / 100) + 48; // hounder
    2360:	89 e2       	ldi	r24, 0x29	; 41
    2362:	48 9f       	mul	r20, r24
    2364:	81 2d       	mov	r24, r1
    2366:	11 24       	eor	r1, r1
    2368:	82 95       	swap	r24
    236a:	8f 70       	andi	r24, 0x0F	; 15
    236c:	80 5d       	subi	r24, 0xD0	; 208
    236e:	89 87       	std	Y+9, r24	; 0x09
	tmp			= tmp % 100;	
	
	year -= 2000;	
	
	if (blink_ & 1<<2)
    2370:	02 ff       	sbrs	r16, 2
    2372:	1f c0       	rjmp	.+62     	; 0x23b2 <dec_dtostr+0x138>
	
	date[8]		= (year / 1000) + 48; // thousand
	tmp			= year % 1000;
		
	date[9]		= (tmp / 100) + 48; // hounder
	tmp			= tmp % 100;	
    2374:	89 e2       	ldi	r24, 0x29	; 41
    2376:	48 9f       	mul	r20, r24
    2378:	81 2d       	mov	r24, r1
    237a:	11 24       	eor	r1, r1
    237c:	82 95       	swap	r24
    237e:	8f 70       	andi	r24, 0x0F	; 15
    2380:	94 2f       	mov	r25, r20
    2382:	24 e6       	ldi	r18, 0x64	; 100
    2384:	82 9f       	mul	r24, r18
    2386:	90 19       	sub	r25, r0
    2388:	11 24       	eor	r1, r1
    238a:	89 2f       	mov	r24, r25
	
	year -= 2000;	
	
	if (blink_ & 1<<2)
	{
		date[10]		=  (tmp / 10) + 48; // tens
    238c:	9d ec       	ldi	r25, 0xCD	; 205
    238e:	89 9f       	mul	r24, r25
    2390:	91 2d       	mov	r25, r1
    2392:	11 24       	eor	r1, r1
    2394:	96 95       	lsr	r25
    2396:	96 95       	lsr	r25
    2398:	96 95       	lsr	r25
    239a:	20 e3       	ldi	r18, 0x30	; 48
    239c:	29 0f       	add	r18, r25
    239e:	2a 87       	std	Y+10, r18	; 0x0a
		date[11]		=  (tmp % 10) + 48;
    23a0:	99 0f       	add	r25, r25
    23a2:	29 2f       	mov	r18, r25
    23a4:	22 0f       	add	r18, r18
    23a6:	22 0f       	add	r18, r18
    23a8:	92 0f       	add	r25, r18
    23aa:	89 1b       	sub	r24, r25
    23ac:	80 5d       	subi	r24, 0xD0	; 208
    23ae:	8b 87       	std	Y+11, r24	; 0x0b
    23b0:	08 c0       	rjmp	.+16     	; 0x23c2 <dec_dtostr+0x148>
	}
	else
	{
		date[10]		=  ' '; // tens
    23b2:	a0 e5       	ldi	r26, 0x50	; 80
    23b4:	b3 e0       	ldi	r27, 0x03	; 3
    23b6:	80 e2       	ldi	r24, 0x20	; 32
    23b8:	1a 96       	adiw	r26, 0x0a	; 10
    23ba:	8c 93       	st	X, r24
    23bc:	1a 97       	sbiw	r26, 0x0a	; 10
		date[11]		=  ' ';
    23be:	1b 96       	adiw	r26, 0x0b	; 11
    23c0:	8c 93       	st	X, r24
	}
	

	date[12]	= ' '; // empty
    23c2:	80 e2       	ldi	r24, 0x20	; 32
    23c4:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <date+0xc>

	if (blink_ & 1<<3)
    23c8:	03 ff       	sbrs	r16, 3
    23ca:	3c c0       	rjmp	.+120    	; 0x2444 <dec_dtostr+0x1ca>
	{
		switch (Day_Name)
    23cc:	8e 2f       	mov	r24, r30
    23ce:	90 e0       	ldi	r25, 0x00	; 0
    23d0:	fc 01       	movw	r30, r24
    23d2:	31 97       	sbiw	r30, 0x01	; 1
    23d4:	e7 30       	cpi	r30, 0x07	; 7
    23d6:	f1 05       	cpc	r31, r1
    23d8:	d0 f5       	brcc	.+116    	; 0x244e <dec_dtostr+0x1d4>
    23da:	e6 5c       	subi	r30, 0xC6	; 198
    23dc:	ff 4f       	sbci	r31, 0xFF	; 255
    23de:	0c 94 31 12 	jmp	0x2462	; 0x2462 <__tablejump2__>
		{
			case 1 :{date[13] = 'S'; date[14] = 'o';}break; // So
    23e2:	e0 e5       	ldi	r30, 0x50	; 80
    23e4:	f3 e0       	ldi	r31, 0x03	; 3
    23e6:	83 e5       	ldi	r24, 0x53	; 83
    23e8:	85 87       	std	Z+13, r24	; 0x0d
    23ea:	8f e6       	ldi	r24, 0x6F	; 111
    23ec:	86 87       	std	Z+14, r24	; 0x0e
    23ee:	2f c0       	rjmp	.+94     	; 0x244e <dec_dtostr+0x1d4>
			case 2 :{date[13] = 'M'; date[14] = 'o';}break; // Mo
    23f0:	e0 e5       	ldi	r30, 0x50	; 80
    23f2:	f3 e0       	ldi	r31, 0x03	; 3
    23f4:	8d e4       	ldi	r24, 0x4D	; 77
    23f6:	85 87       	std	Z+13, r24	; 0x0d
    23f8:	8f e6       	ldi	r24, 0x6F	; 111
    23fa:	86 87       	std	Z+14, r24	; 0x0e
    23fc:	28 c0       	rjmp	.+80     	; 0x244e <dec_dtostr+0x1d4>
			case 3 :{date[13] = 'D'; date[14] = 'i';}break; // Di
    23fe:	e0 e5       	ldi	r30, 0x50	; 80
    2400:	f3 e0       	ldi	r31, 0x03	; 3
    2402:	84 e4       	ldi	r24, 0x44	; 68
    2404:	85 87       	std	Z+13, r24	; 0x0d
    2406:	89 e6       	ldi	r24, 0x69	; 105
    2408:	86 87       	std	Z+14, r24	; 0x0e
    240a:	21 c0       	rjmp	.+66     	; 0x244e <dec_dtostr+0x1d4>
			case 4 :{date[13] = 'M'; date[14] = 'i';}break; // Mi
    240c:	e0 e5       	ldi	r30, 0x50	; 80
    240e:	f3 e0       	ldi	r31, 0x03	; 3
    2410:	8d e4       	ldi	r24, 0x4D	; 77
    2412:	85 87       	std	Z+13, r24	; 0x0d
    2414:	89 e6       	ldi	r24, 0x69	; 105
    2416:	86 87       	std	Z+14, r24	; 0x0e
    2418:	1a c0       	rjmp	.+52     	; 0x244e <dec_dtostr+0x1d4>
			case 5 :{date[13] = 'D'; date[14] = 'o';}break; // Do
    241a:	e0 e5       	ldi	r30, 0x50	; 80
    241c:	f3 e0       	ldi	r31, 0x03	; 3
    241e:	84 e4       	ldi	r24, 0x44	; 68
    2420:	85 87       	std	Z+13, r24	; 0x0d
    2422:	8f e6       	ldi	r24, 0x6F	; 111
    2424:	86 87       	std	Z+14, r24	; 0x0e
    2426:	13 c0       	rjmp	.+38     	; 0x244e <dec_dtostr+0x1d4>
			case 6 :{date[13] = 'F'; date[14] = 'r';}break; // Fr
    2428:	e0 e5       	ldi	r30, 0x50	; 80
    242a:	f3 e0       	ldi	r31, 0x03	; 3
    242c:	86 e4       	ldi	r24, 0x46	; 70
    242e:	85 87       	std	Z+13, r24	; 0x0d
    2430:	82 e7       	ldi	r24, 0x72	; 114
    2432:	86 87       	std	Z+14, r24	; 0x0e
    2434:	0c c0       	rjmp	.+24     	; 0x244e <dec_dtostr+0x1d4>
			case 7 :{date[13] = 'S'; date[14] = 'a';}break;	// Sa			
    2436:	e0 e5       	ldi	r30, 0x50	; 80
    2438:	f3 e0       	ldi	r31, 0x03	; 3
    243a:	83 e5       	ldi	r24, 0x53	; 83
    243c:	85 87       	std	Z+13, r24	; 0x0d
    243e:	81 e6       	ldi	r24, 0x61	; 97
    2440:	86 87       	std	Z+14, r24	; 0x0e
    2442:	05 c0       	rjmp	.+10     	; 0x244e <dec_dtostr+0x1d4>
		}

	}
	else
	{
		date[13] = ' '; 
    2444:	e0 e5       	ldi	r30, 0x50	; 80
    2446:	f3 e0       	ldi	r31, 0x03	; 3
    2448:	80 e2       	ldi	r24, 0x20	; 32
    244a:	85 87       	std	Z+13, r24	; 0x0d
		date[14] = ' ';
    244c:	86 87       	std	Z+14, r24	; 0x0e
	}
	
	date[15] = ' ';
    244e:	e0 e5       	ldi	r30, 0x50	; 80
    2450:	f3 e0       	ldi	r31, 0x03	; 3
    2452:	80 e2       	ldi	r24, 0x20	; 32
    2454:	87 87       	std	Z+15, r24	; 0x0f
	date[16] = '\0'; // string termination
    2456:	10 8a       	std	Z+16, r1	; 0x10

	return date;
}
    2458:	cf 01       	movw	r24, r30
    245a:	df 91       	pop	r29
    245c:	cf 91       	pop	r28
    245e:	0f 91       	pop	r16
    2460:	08 95       	ret

00002462 <__tablejump2__>:
    2462:	ee 0f       	add	r30, r30
    2464:	ff 1f       	adc	r31, r31
    2466:	05 90       	lpm	r0, Z+
    2468:	f4 91       	lpm	r31, Z
    246a:	e0 2d       	mov	r30, r0
    246c:	09 94       	ijmp

0000246e <__umulhisi3>:
    246e:	a2 9f       	mul	r26, r18
    2470:	b0 01       	movw	r22, r0
    2472:	b3 9f       	mul	r27, r19
    2474:	c0 01       	movw	r24, r0
    2476:	a3 9f       	mul	r26, r19
    2478:	70 0d       	add	r23, r0
    247a:	81 1d       	adc	r24, r1
    247c:	11 24       	eor	r1, r1
    247e:	91 1d       	adc	r25, r1
    2480:	b2 9f       	mul	r27, r18
    2482:	70 0d       	add	r23, r0
    2484:	81 1d       	adc	r24, r1
    2486:	11 24       	eor	r1, r1
    2488:	91 1d       	adc	r25, r1
    248a:	08 95       	ret

0000248c <eeprom_read_byte>:
    248c:	e1 99       	sbic	0x1c, 1	; 28
    248e:	fe cf       	rjmp	.-4      	; 0x248c <eeprom_read_byte>
    2490:	9f bb       	out	0x1f, r25	; 31
    2492:	8e bb       	out	0x1e, r24	; 30
    2494:	e0 9a       	sbi	0x1c, 0	; 28
    2496:	99 27       	eor	r25, r25
    2498:	8d b3       	in	r24, 0x1d	; 29
    249a:	08 95       	ret

0000249c <eeprom_update_byte>:
    249c:	26 2f       	mov	r18, r22

0000249e <eeprom_update_r18>:
    249e:	e1 99       	sbic	0x1c, 1	; 28
    24a0:	fe cf       	rjmp	.-4      	; 0x249e <eeprom_update_r18>
    24a2:	9f bb       	out	0x1f, r25	; 31
    24a4:	8e bb       	out	0x1e, r24	; 30
    24a6:	e0 9a       	sbi	0x1c, 0	; 28
    24a8:	01 97       	sbiw	r24, 0x01	; 1
    24aa:	0d b2       	in	r0, 0x1d	; 29
    24ac:	02 16       	cp	r0, r18
    24ae:	31 f0       	breq	.+12     	; 0x24bc <eeprom_update_r18+0x1e>
    24b0:	2d bb       	out	0x1d, r18	; 29
    24b2:	0f b6       	in	r0, 0x3f	; 63
    24b4:	f8 94       	cli
    24b6:	e2 9a       	sbi	0x1c, 2	; 28
    24b8:	e1 9a       	sbi	0x1c, 1	; 28
    24ba:	0f be       	out	0x3f, r0	; 63
    24bc:	08 95       	ret

000024be <_exit>:
    24be:	f8 94       	cli

000024c0 <__stop_program>:
    24c0:	ff cf       	rjmp	.-2      	; 0x24c0 <__stop_program>
